<?xml version="1.0"?>
<root>
  <list>
    <item>
      <name>General</name>
      <list>
        <item>
          <name>Don't Remap the Internal Keyboard</name>
          <sysctl>general.dont_remap_internal</sysctl>
        </item>
        <item>
          <name>Don't Remap the External Keyboard</name>
          <sysctl>general.dont_remap_external</sysctl>
        </item>
        <item>
          <name>Enable CapsLock LED Hack</name>
          <appendix>(To prevent the Apple keyboard's CapsLock delay)</appendix>
          <sysctl>general.capslock_led_hack</sysctl>
        </item>
        <item>
          <name>Remap Third Vendor's Keyboard</name>
          <sysctl>general.remap_thirdvendor_keyboard</sysctl>
        </item>
        <item>
          <name>Remap Third Vendor's Pointing Device</name>
          <sysctl>general.remap_thirdvendor_pointing</sysctl>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Pointing Device</name>
      <list>
        <item>
          <name>RightClick+CursorMove to ScrollWheel</name>
          <sysctl>remap.pointing_relative_rightclick_to_scroll</sysctl>
          <autogen>--ButtonRelativeToScroll-- PointingButton::RIGHT</autogen>
        </item>
        <item>
          <name>MiddleClick+CursorMove to ScrollWheel</name>
          <sysctl>remap.pointing_relative_middleclick_to_scroll</sysctl>
          <autogen>--ButtonRelativeToScroll-- PointingButton::MIDDLE</autogen>
        </item>
        <item>
          <name>MouseButton4+CursorMove to ScrollWheel</name>
          <sysctl>remap.pointing_relative_mousebutton4_to_scroll</sysctl>
          <autogen>--ButtonRelativeToScroll-- PointingButton::BUTTON4</autogen>
        </item>
        <item>
          <name>FN+CursorMove to ScrollWheel</name>
          <sysctl>remap.pointing_relative_fn_to_scroll</sysctl>
        </item>
        <item>
          <name>FN+LeftClick to MiddleClick</name>
          <sysctl>remap.pointing_fnLeftclick2middleclick</sysctl>
          <autogen>--PointingButtonToPointingButton-- PointingButton::LEFT, ModifierFlag::FN, PointingButton::MIDDLE</autogen>
        </item>
        <item>
          <name>CursorMove to ScrollWheel Option</name>
          <list>
            <item>
              <name>Disable Horizontal ScrollWheel</name>
              <sysctl>option.pointing_disable_horizontal_scroll</sysctl>
            </item>
            <item>
              <name>Disable Vertical ScrollWheel</name>
              <sysctl>option.pointing_disable_vertical_scroll</sysctl>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Arrow(Up/Down/Left/Right) Key</name>
      <list>
        <item>
          <name>Left-Arrow to Control_L</name>
          <sysctl>remap.leftarrow2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Option_R-Arrow to (PageUp/Down/Home/End) Key</name>
          <sysctl>remap.optionR_arrow2PgUpDnHomeEnd</sysctl>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP, ModifierFlag::OPTION_R, KeyCode::PAGEUP</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_R, KeyCode::PAGEDOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_R, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_R, KeyCode::END</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Backquote(`) Key</name>
      <list>
        <item>
          <name>Backquote(`) to Command_L</name>
          <sysctl>remap.backquote2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Backquote(`) to Delete</name>
          <sysctl>remap.backquote2delete</sysctl>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Backquote(`) to Escape</name>
          <sysctl>remap.backquote2escape</sysctl>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Backquote(`) to Escape if no modifiers pressed</name>
          <sysctl>remap.backquote2escape_withoutmodifiers</sysctl>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Backquote(`) to F8</name>
          <sysctl>remap.backquote2f8</sysctl>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::F8</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Backslash(\) Key</name>
      <list>
        <item>
          <name>Backslash(\) to Delete</name>
          <sysctl>remap.backslash2delete</sysctl>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Backslash(\) to Enter</name>
          <sysctl>remap.backslash2enter</sysctl>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Backslash(\) to Forward Delete</name>
          <sysctl>remap.backslash2forwarddelete</sysctl>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::FORWARD_DELETE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Command_L Key</name>
      <list>
        <item>
          <name>Command_L to Control_L</name>
          <sysctl>remap.commandL2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Control_L (only in virtual machine, RDC)</name>
          <sysctl>remap.commandL2controlL_vm</sysctl>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Option_L</name>
          <sysctl>remap.commandL2optionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_L to Option_L (only in virtual machine, RDC)</name>
          <sysctl>remap.commandL2optionL_vm</sysctl>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_L to Shift_L</name>
          <sysctl>remap.commandL2shiftL</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command_L to Backquote(`)</name>
          <sysctl>remap.commandL2backquote</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Command_R+Command_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Command_L)</appendix>
          <sysctl>remap.commandRcommandL2escape</sysctl>
          <autogen>--KeyOverlaidModifierCombination-- ModifierFlag::COMMAND_R, ModifierFlag::COMMAND_L, FireFunc::firefunc_escape</autogen>
        </item>
        <item>
          <name>Control_L+Command_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Command_L)</appendix>
          <sysctl>remap.controlLcommandL2escape</sysctl>
          <autogen>--KeyOverlaidModifierCombination-- ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, FireFunc::firefunc_escape</autogen>
        </item>
        <item>
          <name>Shift_L+Command_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Command_L)</appendix>
          <sysctl>remap.shiftLcommandL2escape</sysctl>
          <autogen>--KeyOverlaidModifierCombination-- ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, FireFunc::firefunc_escape</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Command_R Key</name>
      <list>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, send Command+Space)</appendix>
          <sysctl>remap.commandR2commandR_commandSpace</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_R, FireFunc::firefunc_commandSpace</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, send Enter)</appendix>
          <sysctl>remap.commandR2commandR_enter</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_R, FireFunc::firefunc_enter</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, send Enter) + [KeyRepeat]</appendix>
          <sysctl>remap.commandR2commandR_enter_keyrepeat</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_R, FireFunc::firefunc_enter, ExtraRepeatFunc::extraRepeatFunc_enter</autogen>
        </item>
        <item>
          <name>Command_R to Control_L</name>
          <sysctl>remap.commandR2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_R to FN</name>
          <sysctl>remap.commandR2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Command_R to Option_L</name>
          <sysctl>remap.commandR2optionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_R to Option_R</name>
          <sysctl>remap.commandR2optionR</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Command_R to Shift_L</name>
          <sysctl>remap.commandR2shiftL</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command_R to Enter</name>
          <sysctl>remap.commandR2enter</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Command_R to Delete</name>
          <sysctl>remap.commandR2delete</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Command_R to Home</name>
          <sysctl>remap.commandR2home</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::HOME</autogen>
        </item>
        <item>
          <name>Command_R to Home (only in virtual machine, RDC)</name>
          <sysctl>remap.commandR2home_vm</sysctl>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::HOME</autogen>
        </item>
        <item>
          <name>Command_R to Command_L+Left-Arrow (except virtual machine, RDC)</name>
          <sysctl>remap.commandR2commandLleftarrow</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R to Command_L+Left-Arrow</name>
          <sysctl>remap.commandR2commandLleftarrow_all</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R to PageUp</name>
          <sysctl>remap.commandR2pageup</sysctl>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>Command_R to MiddleClick</name>
          <sysctl>remap.commandR2middleclick</sysctl>
          <autogen>--KeyToPointingButton-- KeyCode::COMMAND_R, PointingButton::MIDDLE</autogen>
        </item>
        <item>
          <name>Command_R to RightClick</name>
          <sysctl>remap.commandR2rightclick</sysctl>
          <autogen>--KeyToPointingButton-- KeyCode::COMMAND_R, PointingButton::RIGHT</autogen>
        </item>
        <item>
          <name>Command_L+Command_R to Return</name>
          <appendix>(Note: Return is sent when you release Command_R)</appendix>
          <sysctl>remap.commandLcommandR2return</sysctl>
          <autogen>--KeyOverlaidModifierCombination-- ModifierFlag::COMMAND_L, ModifierFlag::COMMAND_R, FireFunc::firefunc_return</autogen>
        </item>
        <item>
          <name>Control_L+Command_R to Return</name>
          <appendix>(Note: Return is sent when you release Command_R)</appendix>
          <sysctl>remap.controlLcommandR2return</sysctl>
          <autogen>--KeyOverlaidModifierCombination-- ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_R, FireFunc::firefunc_return</autogen>
        </item>
        <item>
          <name>Shift_L+Command_R to Return</name>
          <appendix>(Note: Return is sent when you release Command_R)</appendix>
          <sysctl>remap.shiftLcommandR2return</sysctl>
          <autogen>--KeyOverlaidModifierCombination-- ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_R, FireFunc::firefunc_return</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Control_L Key</name>
      <list>
        <item>
          <name>Control_L to Command_L</name>
          <sysctl>remap.controlL2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L to Command_L (only in virtual machine, RDC)</name>
          <sysctl>remap.controlL2commandL_vm</sysctl>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L to Control_L</name>
          <appendix>(+ When you type Control_L only, send Escape)</appendix>
          <sysctl>remap.controlL2controlL_escape</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::CONTROL_L, ModifierFlag::CONTROL_L, FireFunc::firefunc_escape</autogen>
        </item>
        <item>
          <name>Control_L to FN</name>
          <sysctl>remap.controlL2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Control_L to FN (only in virtual machine, RDC)</name>
          <sysctl>remap.controlL2fn_vm</sysctl>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Control_L to Option_L</name>
          <sysctl>remap.controlL2optionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Control_L to Shift_L</name>
          <sysctl>remap.controlL2shiftL</sysctl>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Control_L to Delete</name>
          <sysctl>remap.controlL2delete</sysctl>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Control_L to Escape</name>
          <sysctl>remap.controlL2escape</sysctl>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Command_R+Control_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Control_L)</appendix>
          <sysctl>remap.commandRcontrolL2escape</sysctl>
          <autogen>--KeyOverlaidModifierCombination-- ModifierFlag::COMMAND_R, ModifierFlag::CONTROL_L, FireFunc::firefunc_escape</autogen>
        </item>
        <item>
          <name>Shift_L+Control_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Control_L)</appendix>
          <sysctl>remap.shiftLcontrolL2escape</sysctl>
          <autogen>--KeyOverlaidModifierCombination-- ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, FireFunc::firefunc_escape</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Delete Key</name>
      <list>
        <item>
          <name>Delete to Backquote(`)</name>
          <sysctl>remap.delete2backquote</sysctl>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Delete to Backslash(\)</name>
          <sysctl>remap.delete2backslash</sysctl>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Delete to Forward Delete</name>
          <sysctl>remap.delete2forwarddelete</sysctl>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Shift+Delete to Forward Delete</name>
          <sysctl>remap.shiftDelete2forwarddelete</sysctl>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Shift+Delete to Tilde(~)</name>
          <sysctl>remap.shiftDelete2tilde</sysctl>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Eject Key</name>
      <list>
        <item>
          <name>Eject to Dashboard if no modifiers pressed</name>
          <sysctl>remap.eject2dashboard_withoutmodifiers</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::DASHBOARD</autogen>
        </item>
        <item>
          <name>Eject to Forward Delete</name>
          <sysctl>remap.eject2forwarddelete</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Eject to Forward Delete</name>
          <appendix>(FN+Eject to Eject)</appendix>
          <sysctl>remap.eject2forwarddelete_retain_fnEject</sysctl>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Eject to Forward Delete if no modifiers pressed</name>
          <sysctl>remap.eject2forwarddelete_withoutmodifiers</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Eject to PageDown</name>
          <sysctl>remap.eject2pagedown</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::PAGEDOWN</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Enter Key</name>
      <list>
        <item>
          <name>Enter to Command_L</name>
          <sysctl>remap.enter2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Enter to Command_L</name>
          <appendix>(+ Enter to Control_L in Parallels, VMware)</appendix>
          <sysctl>remap.enter2commandL_enter2controlL_vm</sysctl>
        </item>
        <item>
          <name>Enter to Control_L</name>
          <sysctl>remap.enter2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Enter to Control_R</name>
          <sysctl>remap.enter2controlR</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Enter to FN</name>
          <sysctl>remap.enter2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Enter to Option_L</name>
          <sysctl>remap.enter2optionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Enter to Option_L</name>
          <appendix>(+ When you type Enter only, send Command+Space)</appendix>
          <sysctl>remap.enter2optionL_commandSpace</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::ENTER, ModifierFlag::OPTION_L, FireFunc::firefunc_commandSpace</autogen>
        </item>
        <item>
          <name>Enter to Option_R</name>
          <sysctl>remap.enter2optionR</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Enter to Option_R</name>
          <appendix>(+ When you type Enter only, send Command+Space)</appendix>
          <sysctl>remap.enter2optionR_commandSpace</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::ENTER, ModifierFlag::OPTION_R, FireFunc::firefunc_commandSpace</autogen>
        </item>
        <item>
          <name>Enter to Command_L+Control_L</name>
          <sysctl>remap.enter2commandLcontrolL</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::COMMAND_L, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Enter to Command_L+Shift_L</name>
          <sysctl>remap.enter2commandLshiftL</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Enter to Control_L+Option_L</name>
          <sysctl>remap.enter2controlLoptionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_L, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Enter to Delete</name>
          <sysctl>remap.enter2delete</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Enter to End</name>
          <sysctl>remap.enter2end</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::END</autogen>
        </item>
        <item>
          <name>Enter to Forward Delete</name>
          <sysctl>remap.enter2forwarddelete</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Enter to Return</name>
          <sysctl>remap.enter2return</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Enter to Semicolon</name>
          <sysctl>remap.enter2semicolon</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::SEMICOLON</autogen>
        </item>
        <item>
          <name>Enter to Space</name>
          <sysctl>remap.enter2space</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Enter to Tab</name>
          <sysctl>remap.enter2tab</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Enter to Up-Arrow</name>
          <sysctl>remap.enter2uparrow</sysctl>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CURSOR_UP</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Escape Key</name>
      <list>
        <item>
          <name>Escape to CapsLock</name>
          <sysctl>remap.escape2capslock</sysctl>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Escape to Command_L</name>
          <sysctl>remap.escape2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Escape to Backquote(`)</name>
          <sysctl>remap.escape2backquote</sysctl>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>FN+Escape to Power</name>
          <sysctl>remap.fnEscape2power</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::ESCAPE, ModifierFlag::FN, ConsumerKeyCode::POWER</autogen>
        </item>
        <item>
          <name>Escape to RightClick</name>
          <sysctl>remap.escape2rightclick</sysctl>
          <autogen>--KeyToPointingButton-- KeyCode::ESCAPE, PointingButton::RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap FN Key</name>
      <list>
        <item>
          <name>FN to Command_L</name>
          <sysctl>remap.fn2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>FN to Control_L</name>
          <sysctl>remap.fn2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>FN to Control_L (only in virtual machine, RDC)</name>
          <sysctl>remap.fn2controlL_vm</sysctl>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>FN to Control_L</name>
          <appendix>(+ Command_R+FN to FN)</appendix>
          <sysctl>remap.fn2controlL_commandR2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, ModifierFlag::COMMAND_R, KeyCode::FN</autogen>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>FN to Control_L</name>
          <appendix>(+ Option_L+FN to FN)</appendix>
          <sysctl>remap.fn2controlL_optionL2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, ModifierFlag::OPTION_L, KeyCode::FN</autogen>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>FN to Option_L</name>
          <sysctl>remap.fn2optionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>FN to Shift_L</name>
          <sysctl>remap.fn2shiftL</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>FN to Delete</name>
          <sysctl>remap.fn2delete</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>FN to Enter</name>
          <sysctl>remap.fn2enter</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>FN to Forward Delete</name>
          <sysctl>remap.fn2forwarddelete</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>FN to Help</name>
          <sysctl>remap.fn2help</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::HELP</autogen>
        </item>
        <item>
          <name>FN to Tab</name>
          <sysctl>remap.fn2tab</sysctl>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::TAB</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Forward Delete Key</name>
      <list>
        <item>
          <name>Forward Delete to Delete</name>
          <sysctl>remap.forwarddelete2delete</sysctl>
          <autogen>--KeyToKey-- KeyCode::FORWARD_DELETE, KeyCode::DELETE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Functional Key (Brightness, Volume, ....)</name>
      <list>
        <item>
          <name>Brightness Down to F1</name>
          <sysctl>remap.brightnessdown2f1</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
          <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
        </item>
        <item>
          <name>Brightness Up to F2</name>
          <sysctl>remap.brightnessup2f2</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
          <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
        </item>
        <item>
          <name>Volume Mute to F3</name>
          <sysctl>remap.volumemute2f3</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_MUTE, KeyCode::F3</autogen>
        </item>
        <item>
          <name>Volume Down to F4</name>
          <sysctl>remap.volumedown2f4</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_DOWN, KeyCode::F4</autogen>
        </item>
        <item>
          <name>Volume Up to F5</name>
          <sysctl>remap.volumeup2f5</sysctl>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_UP, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Video Mirror to Music Prev</name>
          <sysctl>remap.videomirror2musicprev</sysctl>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VIDEO_MIRROR, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Keyboard Light Off to Music Play/Pause</name>
          <sysctl>remap.keyboardlightoff2musicplay</sysctl>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_OFF, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Keyboard Light LOW to Music Next</name>
          <sysctl>remap.keyboardlightlow2musicnext</sysctl>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_LOW, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item>
          <name>Keyboard Light HIGH to Volume Mute</name>
          <sysctl>remap.keyboardlighthigh2volumemute</sysctl>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap F1..F16 Key</name>
      <list>
        <item>
          <name>F1 to Brightness Down</name>
          <sysctl>remap.f1_to_brightnessdown</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
        </item>
        <item>
          <name>F2 to Brightness Up</name>
          <sysctl>remap.f2_to_brightnessup</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
        </item>
        <item>
          <name>F3 to Volume Mute</name>
          <sysctl>remap.f3_to_volumemute</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F3, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F4 to Volume Down</name>
          <sysctl>remap.f4_to_volumedown</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F4, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F5 to Volume Up</name>
          <sysctl>remap.f5_to_volumeup</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F5, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item>
          <name>F6 to NumLock</name>
          <sysctl>remap.f6_to_numlock</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
        </item>
        <item>
          <name>F7 to Music Prev</name>
          <sysctl>remap.f7_to_musicprev</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F7, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>F8 to Music Play/Pause</name>
          <sysctl>remap.f8_to_musicplay</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F8, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>F9 to Music Next</name>
          <sysctl>remap.f9_to_musicplay</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F9, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item>
          <name>F10 to Volume Mute</name>
          <sysctl>remap.f10_to_volumemute</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F11 to Volume Down</name>
          <sysctl>remap.f11_to_volumedown</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F12 to Volume Up</name>
          <sysctl>remap.f12_to_volumeup</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToComsumer-- KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>

        <item>
          <name>FN+F1 to Brightness Down</name>
          <sysctl>remap.fnF1_to_brightnessdown</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::F1, ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
        </item>
        <item>
          <name>FN+F2 to Brightness Up</name>
          <sysctl>remap.fnF2_to_brightnessup</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::F2, ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
        </item>
        <item>
          <name>FN+F7 to Music Prev</name>
          <sysctl>remap.fnF7_to_musicprev</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::F7, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>FN+F8 to Music Play/Pause</name>
          <sysctl>remap.fnF8_to_musicplay</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::F8, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>FN+F9 to Music Next</name>
          <sysctl>remap.fnF9_to_musicplay</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::F9, ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item>
          <name>FN+F10 to Volume Mute</name>
          <sysctl>remap.fnF10_to_volumemute</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::F10, ModifierFlag::FN, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>FN+F11 to Volume Down</name>
          <sysctl>remap.fnF11_to_volumedown</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::F11, ModifierFlag::FN, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>FN+F12 to Volume Up</name>
          <sysctl>remap.fnF12_to_volumeup</sysctl>
          <autogen>--KeyToComsumer-- KeyCode::F12, ModifierFlag::FN, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>

        <item>
          <name>Force remap F1..F12 in VMware, Parallels, RDC</name>
          <list>
            <item>
              <name>F1 to Brightness Down</name>
              <sysctl>remap.f1_to_brightnessdown_force</sysctl>
              <autogen>--KeyToComsumer-- KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
            </item>
            <item>
              <name>F2 to Brightness Up</name>
              <sysctl>remap.f2_to_brightnessup_force</sysctl>
              <autogen>--KeyToComsumer-- KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
            </item>
            <item>
              <name>F3 to Volume Mute</name>
              <sysctl>remap.f3_to_volumemute_force</sysctl>
              <autogen>--KeyToComsumer-- KeyCode::F3, ConsumerKeyCode::VOLUME_MUTE</autogen>
            </item>
            <item>
              <name>F4 to Volume Down</name>
              <sysctl>remap.f4_to_volumedown_force</sysctl>
              <autogen>--KeyToComsumer-- KeyCode::F4, ConsumerKeyCode::VOLUME_DOWN</autogen>
            </item>
            <item>
              <name>F5 to Volume Up</name>
              <sysctl>remap.f5_to_volumeup_force</sysctl>
              <autogen>--KeyToComsumer-- KeyCode::F5, ConsumerKeyCode::VOLUME_UP</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>F16 to Tab</name>
          <sysctl>remap.f16_to_tab</sysctl>
          <autogen>--KeyToKey-- KeyCode::F16, KeyCode::TAB</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Help Key</name>
      <list>
        <item>
          <name>Remap Help to F13</name>
          <sysctl>remap.help2f13</sysctl>
          <autogen>--KeyToKey-- KeyCode::HELP, KeyCode::F13</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap KeyPad Key</name>
      <list>
        <item>
          <name>Remap Clear Key</name>
          <list>
            <item>
              <name>Clear to Delete</name>
              <sysctl>remap.clear2delete</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::DELETE</autogen>
            </item>
            <item>
              <name>Clear to Return</name>
              <sysctl>remap.clear2return</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::RETURN</autogen>
            </item>
            <item>
              <name>Clear to Tab</name>
              <sysctl>remap.clear2tab</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::TAB</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap Comma(,) Key</name>
          <list>
            <item>
              <name>Comma to Shift+Comma</name>
              <sysctl>remap.keypadcomma2shiftComma</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_COMMA, KeyCode::KEYPAD_COMMA, ModifierFlag::SHIFT_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Minus Key</name>
      <list>
        <item>
          <name>Remap Minus to Semicolon</name>
          <sysctl>remap.minus2semicolon</sysctl>
          <autogen>--KeyToKey-- KeyCode::MINUS, KeyCode::SEMICOLON</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Num Key (1...0)</name>
      <list>
        <item>
          <name>Shift(Holding)+1 to F1</name>
          <sysctl>remap.holding_shiftL1_to_f1</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_1, KeyCode::F1</autogen>
        </item>
        <item>
          <name>Shift(Holding)+2 to F2</name>
          <sysctl>remap.holding_shiftL2_to_f2</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_2, KeyCode::F2</autogen>
        </item>
        <item>
          <name>Shift(Holding)+3 to F3</name>
          <sysctl>remap.holding_shiftL3_to_f3</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_3, KeyCode::F3</autogen>
        </item>
        <item>
          <name>Shift(Holding)+4 to F4</name>
          <sysctl>remap.holding_shiftL4_to_f4</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_4, KeyCode::F4</autogen>
        </item>
        <item>
          <name>Shift(Holding)+5 to F5</name>
          <sysctl>remap.holding_shiftL5_to_f5</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_5, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Shift(Holding)+6 to F6</name>
          <sysctl>remap.holding_shiftL6_to_f6</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_6, KeyCode::F6</autogen>
        </item>
        <item>
          <name>Shift(Holding)+7 to F7</name>
          <sysctl>remap.holding_shiftL7_to_f7</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_7, KeyCode::F7</autogen>
        </item>
        <item>
          <name>Shift(Holding)+8 to F8</name>
          <sysctl>remap.holding_shiftL8_to_f8</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_8, KeyCode::F8</autogen>
        </item>
        <item>
          <name>Shift(Holding)+9 to F9</name>
          <sysctl>remap.holding_shiftL9_to_f9</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_9, KeyCode::F9</autogen>
        </item>
        <item>
          <name>Shift(Holding)+0 to F10</name>
          <sysctl>remap.holding_shiftL0_to_f10</sysctl>
          <autogen>--ModifierHoldingKeyToKey-- VK_SHIFT, KeyCode::KEY_0, KeyCode::F10</autogen>
        </item>
        <item>
          <name>1234567890 to !@#$%^&amp;*() / Shift+1234567890 to 1234567890</name>
          <sysctl>remap.swap_number_and_symbol</sysctl>
          <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_1, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Option_L Key</name>
      <list>
        <item>
          <name>Option_L to Command_L</name>
          <sysctl>remap.optionL2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_L to Command_L (only in virtual machine, RDC)</name>
          <sysctl>remap.optionL2commandL_vm</sysctl>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_L to Control_L</name>
          <sysctl>remap.optionL2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Option_L to FN</name>
          <sysctl>remap.optionL2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Option_L to Option_L</name>
          <appendix>(+ When you type Option_L only, send Command+Space)</appendix>
          <sysctl>remap.optionL2optionL_commandSpace</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::OPTION_L, ModifierFlag::OPTION_L, FireFunc::firefunc_commandSpace</autogen>
        </item>
        <item>
          <name>Option_L to Shift_L</name>
          <sysctl>remap.optionL2shiftL</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Option_L to Space</name>
          <sysctl>remap.optionL2space</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::SPACE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Option_R Key</name>
      <list>
        <item>
          <name>Option_R to Command_L</name>
          <sysctl>remap.optionR2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Control_L</name>
          <sysctl>remap.optionR2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Option_R to Control_R</name>
          <sysctl>remap.optionR2controlR</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Option_R to FN</name>
          <sysctl>remap.optionR2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Option_R to Option_R</name>
          <appendix>(+ When you type Option_R only, send Command+Space)</appendix>
          <sysctl>remap.optionR2optionR_commandSpace</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::OPTION_R, ModifierFlag::OPTION_R, FireFunc::firefunc_commandSpace</autogen>
        </item>
        <item>
          <name>Option_R to End</name>
          <sysctl>remap.optionR2end</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::END</autogen>
        </item>
        <item>
          <name>Option_R to End (only in virtual machine, RDC)</name>
          <sysctl>remap.optionR2end_vm</sysctl>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::END</autogen>
        </item>
        <item>
          <name>Option_R to Enter</name>
          <sysctl>remap.optionR2enter</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Option_R to Forward Delete</name>
          <sysctl>remap.optionR2forwarddelete</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Option_R to PageDown</name>
          <sysctl>remap.optionR2pagedown</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Option_R to Command_L+Right-Arrow (except virtual machine, RDC)</name>
          <sysctl>remap.optionR2commandLrightarrow</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Command_L+Right-Arrow</name>
          <sysctl>remap.optionR2commandLrightarrow_all</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Semicolon</name>
          <sysctl>remap.optionR2semicolon</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::SEMICOLON</autogen>
        </item>
        <item>
          <name>Option_R to Space</name>
          <sysctl>remap.optionR2space</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Option_R to Command+Control+Option+Shift+F1</name>
          <sysctl>remap.optionR2allF1</sysctl>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::F1, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Return Key</name>
      <list>
        <item>
          <name>Return to Option_L</name>
          <sysctl>remap.return2optionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Return to Option_L</name>
          <appendix>(+ When you type Return only, send Escape)</appendix>
          <sysctl>remap.return2optionL_escape</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::RETURN, ModifierFlag::OPTION_L, FireFunc::firefunc_escape</autogen>
        </item>
        <item>
          <name>Return to Semicolon</name>
          <sysctl>remap.return2semicolon</sysctl>
          <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::SEMICOLON</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Semicolon Key</name>
      <list>
        <item>
          <name>Semicolon to Minus</name>
          <sysctl>remap.semicolon2minus</sysctl>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::MINUS</autogen>
        </item>
        <item>
          <name>Semicolon to Return</name>
          <sysctl>remap.semicolon2return</sysctl>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Semicolon to Return</name>
          <appendix>(+ Control+Semicolon to Semicolon)</appendix>
          <sysctl>remap.semicolon2return_controlsemicolon2semicolon</sysctl>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_CONTROL, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Swap Semicolon and Colon</name>
          <sysctl>remap.swapcolons</sysctl>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_SHIFT, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Shift_L Key</name>
      <list>
        <item>
          <name>Shift_L to Command_L</name>
          <sysctl>remap.shiftL2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Shift_L to Control_L</name>
          <sysctl>remap.shiftL2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Shift_L to FN</name>
          <sysctl>remap.shiftL2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Shift_L to Shift_L</name>
          <appendix>(+ When you type shiftL only, send Space)</appendix>
          <sysctl>remap.shiftL2shiftL_space</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L, FireFunc::firefunc_space</autogen>
        </item>
        <item>
          <name>Shift_L to Shift_L</name>
          <appendix>(+ When you type shiftL only, send Space) + [KeyRepeat]</appendix>
          <sysctl>remap.shiftL2shiftL_space_keyrepeat</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L, FireFunc::firefunc_space, ExtraRepeatFunc::extraRepeatFunc_space</autogen>
        </item>
        <item>
          <name>Shift_L to Option_L</name>
          <sysctl>remap.shiftL2optionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Shift_L to Escape</name>
          <sysctl>remap.shiftL2escape</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Shift_L to Space</name>
          <sysctl>remap.shiftL2space</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_R+Shift_L to Space</name>
          <appendix>(Shift_R+Shift_L to Space, Shift_L+Shift_R to Shift+Space)</appendix>
          <sysctl>remap.shiftRshiftL2space</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::SPACE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::SPACE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Shift_R Key</name>
      <list>
        <item>
          <name>Shift_R to Command_L</name>
          <sysctl>remap.shiftR2commandL</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Shift_R to Control_L</name>
          <sysctl>remap.shiftR2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Shift_R to FN</name>
          <sysctl>remap.shiftR2fn</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Shift_R to Option_L</name>
          <sysctl>remap.shiftR2optionL</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type Shift_R only, send Backslash)</appendix>
          <sysctl>remap.shiftR2shiftR_backslash</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R, FireFunc::firefunc_backslash</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type shiftR only, send Space)</appendix>
          <sysctl>remap.shiftR2shiftR_space</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R, FireFunc::firefunc_space</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type shiftR only, send Space) + [KeyRepeat]</appendix>
          <sysctl>remap.shiftR2shiftR_space_keyrepeat</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R, FireFunc::firefunc_space, ExtraRepeatFunc::extraRepeatFunc_space</autogen>
        </item>
        <item>
          <name>Shift_R to Enter</name>
          <sysctl>remap.shiftR2enter</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Shift_R to Escape</name>
          <sysctl>remap.shiftR2escape</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Shift_R to Return</name>
          <sysctl>remap.shiftR2return</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Shift_R to Space</name>
          <sysctl>remap.shiftR2space</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_L+Shift_R to Space</name>
          <appendix>(Shift_L+Shift_R to Space, Shift_R+Shift_L to Shift+Space)</appendix>
          <sysctl>remap.shiftLshiftR2space</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::SPACE, ModifierFlag::SHIFT_R</autogen>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_R to Tab</name>
          <sysctl>remap.shiftR2tab</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Shift_R to Up-Arrow</name>
          <sysctl>remap.shiftR2uparrow</sysctl>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::CURSOR_UP</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Space Key</name>
      <list>
        <item>
          <name>Space to Control_L</name>
          <sysctl>remap.space2controlL</sysctl>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Space to Control_L</name>
          <appendix>(+ When you type Space only, send Space)</appendix>
          <sysctl>remap.space2controlL_space</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, ModifierFlag::CONTROL_L, FireFunc::firefunc_space</autogen>
        </item>
        <item>
          <name>Space to Control_L</name>
          <appendix>(+ When you type Space only, send Space) + [KeyRepeat]</appendix>
          <sysctl>remap.space2controlL_space_keyrepeat</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, ModifierFlag::CONTROL_L, FireFunc::firefunc_space, ExtraRepeatFunc::extraRepeatFunc_space</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <sysctl>remap.space2shiftL</sysctl>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <appendix>(+ When you type Space only, send Space)</appendix>
          <sysctl>remap.space2shiftL_space</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, ModifierFlag::SHIFT_L, FireFunc::firefunc_space</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <appendix>(+ When you type Space only, send Space) + [KeyRepeat]</appendix>
          <sysctl>remap.space2shiftL_space_keyrepeat</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, ModifierFlag::SHIFT_L, FireFunc::firefunc_space, ExtraRepeatFunc::extraRepeatFunc_space</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <appendix>(+ When you type Space only, send Space) (Disable on Adobe Softwares)</appendix>
          <not>ADOBE</not>
          <sysctl>remap.space2shiftL_space_not_adobe</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, ModifierFlag::SHIFT_L, FireFunc::firefunc_space</autogen>
        </item>
        <item>
          <name>Space to Return</name>
          <sysctl>remap.space2return</sysctl>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Shift+Space to Command_L+Space</name>
          <sysctl>remap.shiftSpace2commandLSpace</sysctl>
          <autogen>--KeyToKey-- KeyCode::SPACE, VK_SHIFT, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+Space to Option_L+Enter (except Emacs)</name>
          <not>EMACS</not>
          <sysctl>remap.controlSpace2optionLEnter</sysctl>
          <autogen>--KeyToKey-- KeyCode::SPACE, VK_CONTROL, KeyCode::ENTER, ModifierFlag::OPTION_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remap Tab Key</name>
      <list>
        <item>
          <name>Tab to Command_L</name>
          <appendix>(+ When you type Tab only, send Expose All)</appendix>
          <sysctl>remap.tab2commandL_exposeAll</sysctl>
          <autogen>--KeyOverlaidModifier-- KeyCode::TAB, ModifierFlag::COMMAND_L, FireFunc::firefunc_exposeAll</autogen>
        </item>
        <item>
          <name>Tab to Option_L when you held down Control_L</name>
          <appendix>(+ When you type Control_L+Tab, send Control_L+Tab)</appendix>
          <sysctl>remap.tab2option_withControlL</sysctl>
        </item>
        <item>
          <name>Tab to Expose All</name>
          <sysctl>remap.tab2exposeALL</sysctl>
          <autogen>--KeyToKey-- KeyCode::TAB, KeyCode::EXPOSE_ALL</autogen>
        </item>
        <item>
          <name>Command+Tab to Option+Tab</name>
          <sysctl>remap.commandTab2optionTab</sysctl>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Command+Tab to F5</name>
          <sysctl>remap.commandTab2f5</sysctl>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Option+Tab to Command+Tab</name>
          <sysctl>remap.optionTab2commandTab</sysctl>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option+Tab to F5</name>
          <sysctl>remap.optionTab2f5</sysctl>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_OPTION, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Swap Command+Tab and Option+Tab</name>
          <sysctl>remap.swap_commandtaboptiontab</sysctl>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Swap Command+Tab and Control+Tab</name>
          <sysctl>remap.swap_commandtabcontroltab</sysctl>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_CONTROL, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Diamond Cursor</name>
      <list>
        <item>
          <name>Control_L+EXSD to Up/Down/Left/Right</name>
          <sysctl>remap.diamond_cursor_controlL_exsd</sysctl>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_R+EXSD to Up/Down/Left/Right</name>
          <sysctl>remap.diamond_cursor_controlR_exsd</sysctl>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Emacs Mode</name>
      <list>
        <item>
          <name>Control+D to Forward Delete</name>
          <sysctl>option.emacsmode_controlD</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Control+H to Delete</name>
          <sysctl>option.emacsmode_controlH</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Control+I to Tab</name>
          <sysctl>option.emacsmode_controlI</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Control+[ to Escape</name>
          <sysctl>option.emacsmode_controlLeftbracket</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Control+M to Return</name>
          <sysctl>option.emacsmode_controlM</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Control+PNBF to Up/Down/Left/Right</name>
          <sysctl>option.emacsmode_controlPNBF</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control+V to PageDown</name>
          <sysctl>option.emacsmode_controlV</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::V, VK_CONTROL, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Option+V to PageUp</name>
          <sysctl>option.emacsmode_optionV</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::V, VK_OPTION, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>Command+V to PageUp</name>
          <sysctl>option.emacsmode_commandV</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::V, VK_COMMAND, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>Control+Y to Command+V</name>
          <sysctl>option.emacsmode_controlY</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::Y, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+AE to Command+Left/Right</name>
          <sysctl>option.emacsmode_controlAE</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+AE to Command+Shift+Left/Right,Left/Right</name>
          <appendix>(An Alternative way if you use Command+Left/Right for Spaces)</appendix>
          <sysctl>option.emacsmode_controlAE_alternative</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Control+K to Command+Shift+Right,Command+X</name>
          <sysctl>option.emacsmode_controlK</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
        </item>
        <item>
          <name>Control+W to Command+X</name>
          <sysctl>option.emacsmode_controlW</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::W, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option+BF to Option+Left/Right</name>
          <sysctl>option.emacsmode_optionBF</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::B, VK_OPTION, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::F, VK_OPTION, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Option+D to Option+Forward Delete</name>
          <sysctl>option.emacsmode_optionD</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::D, VK_OPTION, KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Option+&lt; to Home / Option+&gt; to End</name>
          <sysctl>option.emacsmode_optionLtGt</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::COMMA, VK_OPTION | VK_SHIFT, KeyCode::HOME, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::DOT,   VK_OPTION | VK_SHIFT, KeyCode::END, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>[ex] Control+1 to Home / Control+2 to End</name>
          <sysctl>option.emacsmode_ex_control12</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::KEY_1, VK_CONTROL, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_CONTROL, KeyCode::END</autogen>
        </item>
        <item>
          <name>[ex] Control+Q to PageUp</name>
          <sysctl>option.emacsmode_ex_controlQ</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::Q, VK_CONTROL, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>[ex] Control+W to Option+Delete</name>
          <sysctl>option.emacsmode_ex_controlW</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::W, VK_CONTROL, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>[ex] Control+U to Command+Shift+Left,Command+X</name>
          <sysctl>option.emacsmode_ex_controlU</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
        </item>
        <item>
          <name>[ex] Control+G to Escape</name>
          <sysctl>option.emacsmode_ex_controlG</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::G, VK_CONTROL, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>[ex] Control+AE to Home/End</name>
          <sysctl>option.emacsmode_ex_controlAE</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
        </item>
        <item>
          <name>[ex] Command+W to Command+C</name>
          <sysctl>option.emacsmode_ex_commandW</sysctl>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::W, VK_COMMAND, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>[ex] Option+W to Command+W</name>
          <sysctl>option.emacsmode_ex_optionW</sysctl>
          <autogen>--KeyToKey-- KeyCode::W, VK_OPTION, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Behavior in Emacs, Terminal, X11, VMware, Parallels, RDC, Eclipse</name>
          <list>
            <item>
              <name>Force remap C-d to Forward Delete</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <sysctl>option.emacsmode_force_controlD_term</sysctl>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <sysctl>option.emacsmode_force_controlD_x11</sysctl>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <sysctl>option.emacsmode_force_controlD_vm</sysctl>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <sysctl>option.emacsmode_force_controlD_eclipse</sysctl>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force remap C-h to Delete</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <sysctl>option.emacsmode_force_controlH_term</sysctl>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <sysctl>option.emacsmode_force_controlH_x11</sysctl>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <sysctl>option.emacsmode_force_controlH_vm</sysctl>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <sysctl>option.emacsmode_force_controlH_eclipse</sysctl>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force remap C-i to Tab</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <sysctl>option.emacsmode_force_controlI_term</sysctl>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <sysctl>option.emacsmode_force_controlI_x11</sysctl>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <sysctl>option.emacsmode_force_controlI_vm</sysctl>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <sysctl>option.emacsmode_force_controlI_eclipse</sysctl>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force remap C-m to Return</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <sysctl>option.emacsmode_force_controlM_term</sysctl>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <sysctl>option.emacsmode_force_controlM_x11</sysctl>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <sysctl>option.emacsmode_force_controlM_vm</sysctl>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <sysctl>option.emacsmode_force_controlM_eclipse</sysctl>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force remap C-[ to Escape</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <sysctl>option.emacsmode_force_controlLeftbracket_term</sysctl>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <sysctl>option.emacsmode_force_controlLeftbracket_x11</sysctl>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <sysctl>option.emacsmode_force_controlLeftbracket_vm</sysctl>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <sysctl>option.emacsmode_force_controlLeftbracket_eclipse</sysctl>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force remap C-pnbf to Up/Down/Left/Right</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <sysctl>option.emacsmode_force_controlPNBF_term</sysctl>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
                  <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
                  <autogen>--KeyToKey-- KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
                  <autogen>--KeyToKey-- KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <sysctl>option.emacsmode_force_controlPNBF_x11</sysctl>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
                  <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
                  <autogen>--KeyToKey-- KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
                  <autogen>--KeyToKey-- KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <sysctl>option.emacsmode_force_controlPNBF_vm</sysctl>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
                  <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
                  <autogen>--KeyToKey-- KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
                  <autogen>--KeyToKey-- KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <sysctl>option.emacsmode_force_controlPNBF_eclipse</sysctl>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::P, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
                  <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
                  <autogen>--KeyToKey-- KeyCode::B, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
                  <autogen>--KeyToKey-- KeyCode::F, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Control+AE to Home/End</name>
              <list>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <sysctl>option.emacsmode_controlAE_vm</sysctl>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
                  <autogen>--KeyToKey-- KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
                </item>
              </list>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Vi Mode</name>
      <list>
        <item>
          <name>Command_R+hjkl to Left/Down/Up/Right</name>
          <sysctl>option.vimode_hjkl</sysctl>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::COMMAND_R, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::COMMAND_R, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::COMMAND_R, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_L+hjkl to Left/Down/Up/Right</name>
          <sysctl>option.vimode_control_hjkl</sysctl>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Command_R+g/G to Home/End</name>
          <sysctl>option.vimode_gG</sysctl>
          <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::COMMAND_R | VK_SHIFT, KeyCode::END</autogen>
        </item>
        <item>
          <name>Command_R+bf to PageUp/PageDown</name>
          <sysctl>option.vimode_bf</sysctl>
          <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::COMMAND_R, KeyCode::PAGEUP</autogen>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_R, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Command_R+0$ to Command+Left/Right</name>
          <sysctl>option.vimode_0dollar</sysctl>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::COMMAND_R | VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_L+hjkl to Option+Left/Down/Up/Right</name>
          <sysctl>option.vimode_option_hjkl</sysctl>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Remapping for Mac OS X Features</name>
      <list>
        <item>
          <name>Drop Shift+[F1...F12] (Disable Show-Expose)</name>
          <sysctl>remap.drop_funcshift</sysctl>
          <autogen>--KeyToKey-- KeyCode::F1, VK_SHIFT, KeyCode::F1</autogen>
          <autogen>--KeyToKey-- KeyCode::F2, VK_SHIFT, KeyCode::F2</autogen>
          <autogen>--KeyToKey-- KeyCode::F3, VK_SHIFT, KeyCode::F3</autogen>
          <autogen>--KeyToKey-- KeyCode::F4, VK_SHIFT, KeyCode::F4</autogen>
          <autogen>--KeyToKey-- KeyCode::F5, VK_SHIFT, KeyCode::F5</autogen>
          <autogen>--KeyToKey-- KeyCode::F6, VK_SHIFT, KeyCode::F6</autogen>
          <autogen>--KeyToKey-- KeyCode::F7, VK_SHIFT, KeyCode::F7</autogen>
          <autogen>--KeyToKey-- KeyCode::F8, VK_SHIFT, KeyCode::F8</autogen>
          <autogen>--KeyToKey-- KeyCode::F9, VK_SHIFT, KeyCode::F9</autogen>
          <autogen>--KeyToKey-- KeyCode::F10, VK_SHIFT, KeyCode::F10</autogen>
          <autogen>--KeyToKey-- KeyCode::F11, VK_SHIFT, KeyCode::F11</autogen>
          <autogen>--KeyToKey-- KeyCode::F12, VK_SHIFT, KeyCode::F12</autogen>
          <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, VK_SHIFT, KeyCode::EXPOSE_ALL</autogen>
        </item>
        <item>
          <name>Remapping for Spaces</name>
          <list>
            <item>
              <name>Use Command_R+[ASD FGH JKL] for Spaces</name>
              <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
              <sysctl>remap.spaces_special</sysctl>
              <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command_R+[123 QWE ASD] for Spaces (3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
              <sysctl>remap.spaces_special_123qweasd</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Q,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command_R+[123 QWE ASD] for Spaces (4x4)</name>
              <appendix>(Cmd+Ctrl+Shift+[123 567 90], Cmd+Ctrl+Option+Shift[1])</appendix>
              <sysctl>remap.spaces_special_123qweasd_4x4</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Q,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_0, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command_R+[QWE ASD ZXC] for Spaces (3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
              <sysctl>remap.spaces_special_qweasdzxc</sysctl>
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use FN+[123456789] for Spaces</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <sysctl>remap.spaces_special_fn</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use FN+[1234 QWER ASDF ZXCV] for Spaces (4x4)</name>
              <appendix>(Cmd+Ctrl+Shift+[1234 5678 90], Cmd+Ctrl+Option+Shift[12 3456])</appendix>
              <sysctl>remap.spaces_special_1234qwerasdfzxcv</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Q,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::R,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_0, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::F,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Z,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::X,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::C,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::V,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use KeyPad numbers for Spaces(3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <sysctl>remap.spaces_special_keypad</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command+KeyPad numbers for Spaces(3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <sysctl>option.keypad2spaces_modifier_command</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, VK_COMMAND, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, VK_COMMAND, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, VK_COMMAND, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, VK_COMMAND, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, VK_COMMAND, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, VK_COMMAND, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, VK_COMMAND, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, VK_COMMAND, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, VK_COMMAND, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Control+KeyPad numbers for Spaces(3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <sysctl>option.keypad2spaces_modifier_control</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, VK_CONTROL, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, VK_CONTROL, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, VK_CONTROL, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, VK_CONTROL, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, VK_CONTROL, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, VK_CONTROL, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, VK_CONTROL, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, VK_CONTROL, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, VK_CONTROL, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Option+KeyPad numbers for Spaces(3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <sysctl>option.keypad2spaces_modifier_option</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, VK_OPTION, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, VK_OPTION, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, VK_OPTION, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, VK_OPTION, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, VK_OPTION, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, VK_OPTION, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, VK_OPTION, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, VK_OPTION, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, VK_OPTION, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Remapping for Applications</name>
      <list>
        <item>
          <name>Enable at only VMware Fusion, Parallels Desktop</name>
          <list>
            <item>
              <name>Remap Enter to Control_L</name>
              <sysctl>remap.app_vm_enter2controlL</sysctl>
              <only>VIRTUALMACHINE</only>
              <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_L</autogen>
            </item>
            <item>
              <name>Remap FN+Return to Insert</name>
              <sysctl>remap.app_vm_fnReturn2insert</sysctl>
              <only>VIRTUALMACHINE</only>
              <autogen>--KeyToKey-- KeyCode::RETURN, ModifierFlag::FN, KeyCode::HELP</autogen>
            </item>
            <item>
              <name>Remap Command+Space to Option+Backquote(`)</name>
              <sysctl>remap.app_vm_commandspace2optionbackquote</sysctl>
              <only>VIRTUALMACHINE</only>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_COMMAND, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Remap Command_L Keys</name>
              <appendix>(To support Emacs on Fusion. This allows controlling individual key translations)</appendix>
              <list>
                <item>
                  <name>Remap Command_L to Option_L</name>
                  <sysctl>remap.app_vm_commandL2optionL</sysctl>
                  <appendix>(Option_L is translated to Alt_L by Fusion)</appendix>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
                </item>
                <item>
                  <name>Remap Command_L+A to Control+A</name>
                  <sysctl>remap.app_vm_commandLA</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_L+C to Control+C</name>
                  <sysctl>remap.app_vm_commandLC</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_L+F to Control+F</name>
                  <sysctl>remap.app_vm_commandLF</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_L, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_L+P to Control+P</name>
                  <sysctl>remap.app_vm_commandLP</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::P, ModifierFlag::COMMAND_L, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_L+V to Control+V</name>
                  <sysctl>remap.app_vm_commandLV</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::COMMAND_L, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_L+X to Control+X</name>
                  <sysctl>remap.app_vm_commandLX</sysctl>
                  <appendix>(Leave it unchecked for using left Meta+X in Emacs on Fusion)</appendix>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_L+Z to Control+Z</name>
                  <sysctl>remap.app_vm_commandLZ</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::COMMAND_L, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Remap Command_R Keys</name>
              <appendix>(To support Emacs on Fusion. This allows controlling individual key translations)</appendix>
              <list>
                <item>
                  <name>Remap Command_R to Option_R</name>
                  <appendix>(This allows controlling individual key translations)</appendix>
                  <sysctl>remap.app_vm_commandR2optionR</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
                </item>
                <item>
                  <name>Remap Command_R+A to Control+A</name>
                  <sysctl>remap.app_vm_commandRA</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_R, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_R+C to Control+C</name>
                  <sysctl>remap.app_vm_commandRC</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_R, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_R+F to Control+F</name>
                  <sysctl>remap.app_vm_commandRF</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_R, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_R+P to Control+P</name>
                  <sysctl>remap.app_vm_commandRP</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::P, ModifierFlag::COMMAND_R, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_R+V to Control+V</name>
                  <sysctl>remap.app_vm_commandRV</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::COMMAND_R, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_R+X to Control+X</name>
                  <appendix>(Leave it unchecked for using right Meta+X in Emacs on Fusion)</appendix>
                  <sysctl>remap.app_vm_commandRX</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::COMMAND_R, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Remap Command_R+Z to Control+Z </name>
                  <sysctl>remap.app_vm_commandRZ</sysctl>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::COMMAND_R, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
                </item>
              </list>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Finder</name>
          <list>
            <item>
              <name>Remap Command+R to Return (== Rename)</name>
              <sysctl>remap.app_finder_command_R_to_return</sysctl>
              <only>FINDER</only>
              <autogen>--KeyToKey-- KeyCode::R, VK_COMMAND, KeyCode::RETURN</autogen>
            </item>
            <item>
              <name>Remap F2 to Return (== Rename)</name>
              <sysctl>remap.app_finder_f2_to_return</sysctl>
              <only>FINDER</only>
              <autogen>--KeyToKey-- KeyCode::F2, KeyCode::RETURN</autogen>
            </item>
            <item>
              <name>Remap Return to Command+O (== Open)</name>
              <sysctl>remap.app_finder_return2commandO</sysctl>
              <only>FINDER</only>
              <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::O, ModifierFlag::COMMAND_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Terminal</name>
          <list>
            <item>
              <name>Remap Command_L to Option_L</name>
              <sysctl>remap.app_term_commandL2optionL</sysctl>
              <only>TERMINAL</only>
              <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>Remap Command_L to Option_L</name>
              <appendix>(Pass-Through Tab and Backquote)</appendix>
              <sysctl>remap.app_term_commandL2optionL_except_tab</sysctl>
              <only>TERMINAL</only>
              <autogen>--KeyToKey-- KeyCode::TAB, ModifierFlag::OPTION_L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Adobe Softwares</name>
          <list>
            <item>
              <name>Remap Command+Tab to Control_L+Tab</name>
              <sysctl>remap.app_adobe_commandTab2controlLTab</sysctl>
              <only>ADOBE</only>
              <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Firefox/Thunderbird</name>
          <list>
            <item>
              <name>Fix Home/End</name>
              <appendix>(Home/End move to beg/end of line, Ctl/Cmd+Home/End move to beg/end of page)</appendix>
              <sysctl>remap.app_firefox_fix_home_end</sysctl>
              <only>FIREFOX, THUNDERBIRD</only>
              <autogen>--KeyToKey-- FROMKEYCODE_HOME, VK_COMMAND, KeyCode::HOME</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_HOME, VK_CONTROL, KeyCode::HOME</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_END, VK_COMMAND, KeyCode::END</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_END, VK_CONTROL, KeyCode::END</autogen>

              <autogen>--KeyToKey-- FROMKEYCODE_HOME, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_END, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Excel</name>
          <list>
            <item>
              <name>Remap F2 to Ctrl+U</name>
              <sysctl>remap.app_excel_f2_to_ctrlu</sysctl>
              <only>EXCEL</only>
              <autogen>--KeyToKey-- KeyCode::F2, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Entourage</name>
          <list>
            <item>
              <name>Remap PageUp/PageDown to Option+Up/Down</name>
              <sysctl>remap.app_entourage_pageupdown_to_optionupdown</sysctl>
              <only>ENTOURAGE</only>
              <autogen>--KeyToKey-- FROMKEYCODE_PAGEUP, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_PAGEDOWN, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Change Keyboard Layout</name>
      <list>
        <item>
          <name>Use Colemak Keyboard Layout</name>
          <sysctl>remap.qwerty2colemak</sysctl>
          <autogen>--KeyToKey-- KeyCode::E, KeyCode::F</autogen>
          <autogen>--KeyToKey-- KeyCode::R, KeyCode::P</autogen>
          <autogen>--KeyToKey-- KeyCode::T, KeyCode::G</autogen>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::J</autogen>
          <autogen>--KeyToKey-- KeyCode::U, KeyCode::L</autogen>
          <autogen>--KeyToKey-- KeyCode::I, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::O, KeyCode::Y</autogen>
          <autogen>--KeyToKey-- KeyCode::P, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::S, KeyCode::R</autogen>
          <autogen>--KeyToKey-- KeyCode::D, KeyCode::S</autogen>
          <autogen>--KeyToKey-- KeyCode::F, KeyCode::T</autogen>
          <autogen>--KeyToKey-- KeyCode::G, KeyCode::D</autogen>
          <autogen>--KeyToKey-- KeyCode::J, KeyCode::N</autogen>
          <autogen>--KeyToKey-- KeyCode::K, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::L, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::O</autogen>
          <autogen>--KeyToKey-- KeyCode::N, KeyCode::K</autogen>
        </item>
        <item>
          <name>Use QWERF Keyboard Layout</name>
          <sysctl>remap.qwerty2qwerf</sysctl>
          <autogen>--KeyToKey-- KeyCode::T, KeyCode::F</autogen>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::J</autogen>
          <autogen>--KeyToKey-- KeyCode::U, KeyCode::Y</autogen>
          <autogen>--KeyToKey-- KeyCode::I, KeyCode::K</autogen>
          <autogen>--KeyToKey-- KeyCode::O, KeyCode::L</autogen>
          <autogen>--KeyToKey-- KeyCode::P, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::F, KeyCode::T</autogen>
          <autogen>--KeyToKey-- KeyCode::J, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::K, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::L, KeyCode::O</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::P</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For PC Users</name>
      <list>
        <item>
          <name>Remap PC Application Key</name>
          <list>
            <item>
              <name>Application Key to Command_L</name>
              <sysctl>remap.pc_application2commandL</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::COMMAND_L</autogen>
            </item>
            <item>
              <name>Application Key to Control_L</name>
              <sysctl>remap.pc_application2controlL</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::CONTROL_L</autogen>
            </item>
            <item>
              <name>Application Key to FN</name>
              <sysctl>remap.pc_application2fn</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::FN</autogen>
            </item>
            <item>
              <name>Application Key to Option_L</name>
              <sysctl>remap.pc_application2optionL</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>Application Key to Shift_L</name>
              <sysctl>remap.pc_application2shiftL</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::SHIFT_L</autogen>
            </item>
            <item>
              <name>Application Key to Expose All</name>
              <sysctl>remap.pc_application2exposeALL</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::EXPOSE_ALL</autogen>
            </item>
            <item>
              <name>Application Key to F9</name>
              <sysctl>remap.pc_application2f9</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::F9</autogen>
            </item>
            <item>
              <name>Application Key to F11</name>
              <sysctl>remap.pc_application2f11</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::F11</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap PC Insert Key</name>
          <list>
            <item>
              <name>Insert Key to Control_R</name>
              <sysctl>remap.pc_insert2controlR</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_INSERT, KeyCode::CONTROL_R</autogen>
            </item>
            <item>
              <name>Insert Key to Option_L+Insert</name>
              <sysctl>remap.pc_insert2optionLinsert</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_INSERT, KeyCode::PC_INSERT, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Insert Key to Tab</name>
              <sysctl>remap.pc_insert2tab</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_INSERT, KeyCode::TAB</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap PC NumLock Key</name>
          <list>
            <item>
              <name>NumLock Key to F11</name>
              <sysctl>remap.pc_numlock2f11</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::F11</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap PC Pause Key</name>
          <list>
            <item>
              <name>Pause Key to Eject</name>
              <sysctl>remap.pc_pause2eject</sysctl>
              <autogen>--KeyToComsumer-- KeyCode::PC_PAUSE, ConsumerKeyCode::EJECT</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap PC PrintScreen Key</name>
          <list>
            <item>
              <name>PrintScreen Key to Eject</name>
              <sysctl>remap.pc_printscreen2eject</sysctl>
              <autogen>--KeyToComsumer-- KeyCode::PC_PRINTSCREEN, ConsumerKeyCode::EJECT</autogen>
            </item>
            <item>
              <name>PrintScreen Key to F12</name>
              <sysctl>remap.pc_printscreen2f12</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_PRINTSCREEN, KeyCode::F12</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap PC ScrollLock Key</name>
          <list>
            <item>
              <name>ScrollLock Key to F13</name>
              <sysctl>remap.pc_scrolllock2f13</sysctl>
              <autogen>--KeyToKey-- KeyCode::PC_SCROLLLOCK, KeyCode::F13</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Use KeyPad as Arrow (PC Style NumLock)</name>
          <list>
            <item>
              <name>Enable KeyPad as Arrow</name>
              <sysctl>remap.keypadnumlock</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_0, KeyCode::NONE</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, KeyCode::NONE</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_COMMA, KeyCode::NONE</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, KeyCode::CURSOR_DOWN</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, KeyCode::CURSOR_LEFT</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, KeyCode::CURSOR_RIGHT</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, KeyCode::CURSOR_UP</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, KeyCode::END</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, KeyCode::PAGEDOWN</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, KeyCode::HOME</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, KeyCode::PAGEUP</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, KeyCode::FORWARD_DELETE</autogen>
            </item>
            <item>
              <name>Enable KeyPad as Arrow</name>
              <appendix>(With PC Style Home/End/PageUp/PageDown)</appendix>
              <sysctl>remap.keypadnumlock_pclikehomeend</sysctl>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_0, KeyCode::NONE</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, KeyCode::NONE</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_COMMA, KeyCode::NONE</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, KeyCode::CURSOR_DOWN</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, KeyCode::CURSOR_LEFT</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, KeyCode::CURSOR_RIGHT</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, KeyCode::CURSOR_UP</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, KeyCode::FORWARD_DELETE</autogen>
            </item>
            <item>
              <name>Use Clear Key to toggle "KeyPad as Arrow"</name>
              <sysctl>option.keypadnumlock_togglekey_clear</sysctl>
            </item>
          </list>
        </item>
        <item>
          <name>Use PC Style Home/End</name>
          <appendix>(behave like Command+Left/Right)</appendix>
          <sysctl>remap.pclikehomeend</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- FROMKEYCODE_HOME, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_END, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style PageUp/PageDown</name>
          <appendix>(behave like Option+PageUp/PageDown)</appendix>
          <sysctl>remap.pclikepageupdown</sysctl>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- FROMKEYCODE_PAGEUP, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_PAGEDOWN, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For HHK (Happy Hacking Keyboard) Users</name>
      <list>
        <item>
          <name>Enable HHK compatible Arrow Key Mode</name>
          <sysctl>remap.hhkmode</sysctl>
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, ModifierFlag::FN, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON,    ModifierFlag::FN, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::QUOTE,        ModifierFlag::FN, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>--KeyToKey-- KeyCode::SLASH,        ModifierFlag::FN, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::L,            ModifierFlag::FN, KeyCode::PAGEUP</autogen>
          <autogen>--KeyToKey-- KeyCode::DOT,          ModifierFlag::FN, KeyCode::PAGEDOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K,            ModifierFlag::FN, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMA,        ModifierFlag::FN, KeyCode::END</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_1,        ModifierFlag::FN, KeyCode::F1</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2,        ModifierFlag::FN, KeyCode::F2</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3,        ModifierFlag::FN, KeyCode::F3</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4,        ModifierFlag::FN, KeyCode::F4</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5,        ModifierFlag::FN, KeyCode::F5</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6,        ModifierFlag::FN, KeyCode::F6</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7,        ModifierFlag::FN, KeyCode::F7</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8,        ModifierFlag::FN, KeyCode::F8</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9,        ModifierFlag::FN, KeyCode::F9</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0,        ModifierFlag::FN, KeyCode::F10</autogen>
          <autogen>--KeyToKey-- KeyCode::MINUS,        ModifierFlag::FN, KeyCode::F11</autogen>
          <autogen>--KeyToKey-- KeyCode::EQUAL,        ModifierFlag::FN, KeyCode::F12</autogen>
        </item>
        <item>
          <name>Enable FN+hjkl at HHK to Left/Down/Up/Right</name>
          <sysctl>remap.hhkmode_vi_cursor</sysctl>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_MULTIPLY, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_SLASH,    KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::HOME,            KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::PAGEUP,          KeyCode::CURSOR_RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For German</name>
      <list>
        <item>
          <name>Quote(´) to Forward Delete</name>
          <sysctl>remap.german_quote2forwarddelete</sysctl>
          <autogen>--KeyToKey-- KeyCode::GERMAN_QUOTE, KeyCode::FORWARD_DELETE</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Japanese</name>
      <list>
        <item>
          <name>Remap Command_L Key</name>
          <list>
            <item>
              <name>Command_L to Command_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <sysctl>remap.jis_commandL2commandL_eisuu</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, ModifierFlag::COMMAND_L, FireFunc::firefunc_jis_eisuu</autogen>
            </item>
            <item>
              <name>Command_L to Command_L</name>
              <appendix>(+ When you type Command_L only, send KANA/EISUU (toggle))</appendix>
              <sysctl>remap.jis_commandL2commandL_toggle_kana_eisuu</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, ModifierFlag::COMMAND_L, FireFunc::firefunc_jis_toggle_eisuu_kana</autogen>
            </item>
            <item>
              <name>Command_L to Control_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <sysctl>remap.jis_commandL2controlL_eisuu</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, ModifierFlag::CONTROL_L, FireFunc::firefunc_jis_eisuu</autogen>
            </item>
            <item>
              <name>Command_L x2 to EISUU</name>
              <sysctl>remap.jis_commandL_x2_to_eisuu</sysctl>
              <autogen>--DoublePressModifier-- KeyCode::COMMAND_L, ModifierFlag::COMMAND_L, FireFunc::firefunc_jis_eisuu</autogen>
            </item>
            <item>
              <name>Command_L x2 to EISUU x2 (for Kotoeri Users)</name>
              <sysctl>remap.jis_commandL_x2_to_eisuu_x2</sysctl>
              <autogen>--DoublePressModifier-- KeyCode::COMMAND_L, ModifierFlag::COMMAND_L, FireFunc::firefunc_jis_eisuu_x2</autogen>
            </item>
            <item>
              <name>Use Command_L as KANA/EISUU (toggle)</name>
              <sysctl>remap.jis_unify_kana_eisuu_to_commandL</sysctl>
              <autogen>--JISToggleEisuuKana-- KeyCode::COMMAND_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap Command_R Key</name>
          <list>
            <item>
              <name>Command_R to EISUU</name>
              <sysctl>remap.jis_commandR2eisuu</sysctl>
              <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_R to KANA</name>
              <sysctl>remap.jis_commandR2kana</sysctl>
              <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, send KANA)</appendix>
              <sysctl>remap.jis_commandR2commandR_kana</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_R, FireFunc::firefunc_jis_kana</autogen>
            </item>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, send KANA/EISUU (toggle))</appendix>
              <sysctl>remap.jis_commandR2commandR_toggle_kana_eisuu</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_R, FireFunc::firefunc_jis_toggle_eisuu_kana</autogen>
            </item>
            <item>
              <name>Command_R x2 to KANA</name>
              <sysctl>remap.jis_commandR_x2_to_kana</sysctl>
              <autogen>--DoublePressModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_R, FireFunc::firefunc_jis_kana</autogen>
            </item>
            <item>
              <name>Command_R x2 to KANA x2 (for Kotoeri Users)</name>
              <sysctl>remap.jis_commandR_x2_to_kana_x2</sysctl>
              <autogen>--DoublePressModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_R, FireFunc::firefunc_jis_kana_x2</autogen>
            </item>
            <item>
              <name>Use Command_R as KANA/EISUU (toggle)</name>
              <sysctl>remap.jis_unify_kana_eisuu_to_commandR</sysctl>
              <autogen>--JISToggleEisuuKana-- KeyCode::COMMAND_R</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap Option_R Key</name>
          <list>
            <item>
              <name>Option_R to EISUU</name>
              <sysctl>remap.jis_optionR2eisuu</sysctl>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Option_R to KANA</name>
              <sysctl>remap.jis_optionR2kana</sysctl>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Use Option_R as KANA/EISUU (toggle)</name>
              <sysctl>remap.jis_unify_kana_eisuu_to_optionR</sysctl>
              <autogen>--JISToggleEisuuKana-- KeyCode::OPTION_R</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap Space Key</name>
          <list>
            <item>
              <name>Shift+Space to KANA/EISUU (toggle)</name>
              <sysctl>remap.jis_shiftSpace2toggle_kana_eisuu</sysctl>
            </item>
            <item>
              <name>Shift+Space to KANA/EISUU (toggle) Option</name>
              <list>
                <item>
                  <name>Don't Remap in Emacs.app</name>
                  <sysctl>option.jis_shiftSpace2toggle_kana_eisuu_disable_emacs</sysctl>
                </item>
              </list>
            </item>
            <item>
              <name>Shift+Space to Equal</name>
              <appendix>(Disable when KANA mode)</appendix>
              <sysctl>remap.jis_shiftSpace2equal</sysctl>
              <jiskanamode_only>JISKANAMODE_ASCII</jiskanamode_only>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_SHIFT, KeyCode::EQUAL</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap EISUU Key</name>
          <list>
            <item>
              <name>EISUU to Command_L</name>
              <sysctl>remap.jis_eisuu2commandL</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::COMMAND_L</autogen>
            </item>
            <item>
              <name>EISUU to Command_L</name>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <sysctl>remap.jis_eisuu2commandL_eisuu</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, ModifierFlag::COMMAND_L, FireFunc::firefunc_jis_eisuu</autogen>
            </item>
            <item>
              <name>EISUU to Command_L. In Terminal, EISUU to OptionL</name>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <sysctl>remap.jis_eisuu2commandL_eisuu_eisuu2optionL_term</sysctl>
            </item>
            <item>
              <name>EISUU to Control_L</name>
              <sysctl>remap.jis_eisuu2controlL</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::CONTROL_L</autogen>
            </item>
            <item>
              <name>EISUU to Control_L</name>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <sysctl>remap.jis_eisuu2controlL_eisuu</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, ModifierFlag::CONTROL_L, FireFunc::firefunc_jis_eisuu</autogen>
            </item>
            <item>
              <name>EISUU to FN</name>
              <sysctl>remap.jis_eisuu2fn</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::FN</autogen>
            </item>
            <item>
              <name>EISUU to Option_L</name>
              <sysctl>remap.jis_eisuu2optionL</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>EISUU to Shift_L</name>
              <sysctl>remap.jis_eisuu2shiftL</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::SHIFT_L</autogen>
            </item>
            <item>
              <name>EISUU to Delete</name>
              <sysctl>remap.jis_eisuu2delete</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::DELETE</autogen>
            </item>
            <item>
              <name>EISUU to Escape</name>
              <sysctl>remap.jis_eisuu2escape</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>EISUU to Tab</name>
              <sysctl>remap.jis_eisuu2tab</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::TAB</autogen>
            </item>
            <item>
              <name>EISUU to MiddleClick</name>
              <sysctl>remap.jis_eisuu2middleclick</sysctl>
              <autogen>--KeyToPointingButton-- KeyCode::JIS_EISUU, PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>EISUU to RightClick</name>
              <sysctl>remap.jis_eisuu2rightclick</sysctl>
              <autogen>--KeyToPointingButton-- KeyCode::JIS_EISUU, PointingButton::RIGHT</autogen>
            </item>
            <item>
              <name>Use EISUU as KANA/EISUU (toggle)</name>
              <sysctl>remap.jis_unify_kana_to_eisuu</sysctl>
              <autogen>--JISToggleEisuuKana-- KeyCode::JIS_EISUU</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap KANA Key</name>
          <list>
            <item>
              <name>KANA to Command_L</name>
              <sysctl>remap.jis_kana2commandL</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::COMMAND_L</autogen>
            </item>
            <item>
              <name>KANA to Command_R</name>
              <appendix>(+ When you type KANA only, send KANA)</appendix>
              <sysctl>remap.jis_kana2commandR_kana</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, ModifierFlag::COMMAND_R, FireFunc::firefunc_jis_kana</autogen>
            </item>
            <item>
              <name>KANA to Control_L</name>
              <sysctl>remap.jis_kana2controlL</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::CONTROL_L</autogen>
            </item>
            <item>
              <name>KANA to Control_L</name>
              <appendix>(+ When you type KANA only, send KANA)</appendix>
              <sysctl>remap.jis_kana2controlL_kana</sysctl>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, ModifierFlag::CONTROL_L, FireFunc::firefunc_jis_kana</autogen>
            </item>
            <item>
              <name>KANA to FN</name>
              <sysctl>remap.jis_kana2fn</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::FN</autogen>
            </item>
            <item>
              <name>KANA to Option_L</name>
              <sysctl>remap.jis_kana2optionL</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>KANA to Shift_L</name>
              <sysctl>remap.jis_kana2shiftL</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::SHIFT_L</autogen>
            </item>
            <item>
              <name>KANA to Return</name>
              <sysctl>remap.jis_kana2return</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::RETURN</autogen>
            </item>
            <item>
              <name>KANA to MiddleClick</name>
              <sysctl>remap.jis_kana2middleclick</sysctl>
              <autogen>--KeyToPointingButton-- KeyCode::JIS_KANA, PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>KANA to RightClick</name>
              <sysctl>remap.jis_kana2rightclick</sysctl>
              <autogen>--KeyToPointingButton-- KeyCode::JIS_KANA, PointingButton::RIGHT</autogen>
            </item>
            <item>
              <name>Shift+KANA to EISUU</name>
              <sysctl>remap.jis_shiftKana2eisuu</sysctl>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, VK_SHIFT, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Use KANA as KANA/EISUU (toggle)</name>
              <sysctl>remap.jis_unify_eisuu_to_kana</sysctl>
              <autogen>--JISToggleEisuuKana-- KeyCode::JIS_KANA</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap Underscore(Ro) Key</name>
          <list>
            <item>
              <name>Underscore(Ro) to Backslash(\)</name>
              <sysctl>remap.jis_underscore2backslash</sysctl>
            </item>
          </list>
        </item>
        <item>
          <name>Remap Yen(\) Key</name>
          <list>
            <item>
              <name>JIS Yen(\) to Backslash(\)</name>
              <sysctl>remap.jis_yen2backslash</sysctl>
            </item>
          </list>
        </item>
        <item>
          <name>Emacs Mode</name>
          <list>
            <item>
              <name>Control+[ to Escape at Japanese Keyboard</name>
              <sysctl>option.jis_emacsmode_controlLeftbracket</sysctl>
              <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11</not>
              <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>Behavior in Emacs, Terminal, X11, VMware, Parallels, RDC</name>
              <list>
                <item>
                  <name>Force remap C-[ to Escape</name>
                  <list>
                    <item>
                      <name>In Emacs, Terminal</name>
                      <sysctl>option.jis_emacsmode_force_controlLeftbracket_term</sysctl>
                      <only>EMACS, TERMINAL</only>
                      <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                    </item>
                    <item>
                      <name>In X11</name>
                      <sysctl>option.jis_emacsmode_force_controlLeftbracket_x11</sysctl>
                      <only>X11</only>
                      <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                    </item>
                    <item>
                      <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                      <sysctl>option.jis_emacsmode_force_controlLeftbracket_vm</sysctl>
                      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                      <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                    </item>
                  </list>
                </item>
              </list>
            </item>
          </list>
        </item>
        <item>
          <name>Remapping for Applications</name>
          <list>
            <item>
              <name>Enable at only Vim</name>
              <list>
                <item>
                  <name>Remap EISUU to EISUU &amp; Escape</name>
                  <sysctl>remap.jis_app_vi_eisuu2eisuu_escape</sysctl>
                </item>
              </list>
            </item>
          </list>
        </item>
        <item>
          <name>Change Keyboard Layout</name>
          <list>
            <item>
              <name>Use Japanese Keyboard as ASCII Keyboard</name>
              <sysctl>remap.jis_jansi</sysctl>
            </item>
            <item>
              <name>Use KAWASHIMA Special Keyboard Layout</name>
              <sysctl>remap.jis_layout_kawashima</sysctl>
            </item>
            <item>
              <name>Use Windows Kana-Input Layout on ASCII Keyboard</name>
              <jiskanamode_not>JISKANAMODE_ASCII</jiskanamode_not>
              <autogen>--KeyToKey-- KeyCode::MINUS, VK_SHIFT, KeyCode::BRACKET_RIGHT</autogen>
              <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, VK_SHIFT, KeyCode::BRACKET_LEFT</autogen>
              <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::EQUAL</autogen>
              <autogen>--KeyToKey-- KeyCode::EQUAL, VK_SHIFT, KeyCode::MINUS</autogen>

              <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
              <autogen>--KeyToKey-- KeyCode::EQUAL, KeyCode::BACKSLASH</autogen>
              <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::BRACKET_RIGHT</autogen>
              <sysctl>remap.jis_layout_windowskanainput</sysctl>
            </item>
          </list>
        </item>
      </list>
    </item>
    <item>
      <name>For Russian</name>
      <list>
        <item>
          <name>Remap Backquote(`) Key</name>
          <list>
            <item>
              <name>Backquote(`) to Paragraph(§)</name>
              <sysctl>remap.russian_backquote2paragraph</sysctl>
              <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::RUSSIAN_PARAGRAPH</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Remap Paragraph(§) Key</name>
          <list>
            <item>
              <name>Paragraph(§) to Backquote(`)</name>
              <sysctl>remap.russian_paragraph2backquote</sysctl>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::BACKQUOTE</autogen>
            </item>
            <item>
              <name>Paragraph(§) to Escape</name>
              <sysctl>remap.russian_paragraph2escape</sysctl>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>Paragraph(§) to Forward Delete</name>
              <sysctl>remap.russian_paragraph2forwarddelete</sysctl>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::FORWARD_DELETE</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>
    <item>
      <name>For UK Keyboard users</name>
      <list>
        <item>
          <name>Improve UK Keyboard Layout</name>
          <appendix>( '\' to additional Enter, '§' to '`' and '`' to '\' )</appendix>
          <sysctl>remap.uk_saneuklayout</sysctl>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Improve UK Keyboard Layout (Option 2)</name>
          <appendix>( '§' to '`' and '`' to '\' )</appendix>
          <sysctl>remap.uk_saneuklayout2</sysctl>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Swap @ and double-quote(")</name>
          <sysctl>remap.uk_swap_at_doublequote</sysctl>
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_SHIFT, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::QUOTE, VK_SHIFT, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Section(§) to Option_L+3 (#), Shift+Section(§) to Tilde(~)</name>
          <sysctl>remap.uk_section2hash</sysctl>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::KEY_3, ModifierFlag::OPTION_L</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>Samples for KeyRemap4MacBook Developer</name>
      <list>
        <item>
          <name>Control+U to Command+Shift+Left,Command+X</name>
          <sysctl>remap.samples_controlU</sysctl>
          <autogen>--KeyToKey-- KeyCode::U, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
      </list>
    </item>
  </list>
</root>
