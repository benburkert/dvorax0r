<?xml version="1.0"?>
<root>
  <list>
    <!-- #include "include/local.top.xml" -->
    <item>
      <name>General</name>
      <list>
        <item>
          <name>Don't remap an internal keyboard</name>
          <identifier essential="true">general.dont_remap_internal</identifier>
        </item>
        <item>
          <name>Don't remap external keyboards</name>
          <identifier essential="true">general.dont_remap_external</identifier>
        </item>
        <item>
          <name>Don't remap Apple's keyboards</name>
          <identifier essential="true">general.dont_remap_apple_keyboard</identifier>
        </item>
        <item>
          <name>Don't remap Apple's pointing devices</name>
          <identifier essential="true">general.dont_remap_apple_pointing</identifier>
        </item>
        <item>
          <name>Don't remap keyboards which has third vendor's driver</name>
          <appendix>(Logitech, Microsoft, Kensington, ...)</appendix>
          <identifier essential="true">general.dont_remap_thirdvendor_keyboard</identifier>
        </item>
        <item>
          <name>Don't remap pointing devices which has third vendor's driver</name>
          <appendix>(Logitech, Microsoft, Kensington, ...)</appendix>
          <identifier essential="true">general.dont_remap_thirdvendor_pointing</identifier>
        </item>
        <item>
          <name>Enable CapsLock LED Hack</name>
          <appendix>(Keep LED on to prevent a delay of CapsLock at some Apple's keyboard)</appendix>
          <identifier essential="true">general.capslock_led_hack</identifier>
        </item>
        <item>
          <name>Pass-Through CapsLock LED status</name>
          <appendix>(Don't enable this when you use "XXX to CapsLock")</appendix>
          <identifier essential="true">general.passthrough_capslock_led_status</identifier>
        </item>
        <item>
          <name>Don't show Modifier lock status on screen</name>
          <identifier essential="true">general.hide_statusmessage</identifier>
        </item>
        <item>
          <name>Don't restore modifiers in the mouse event</name>
          <appendix></appendix>
          <appendix>For example, when you use Option+Tab to Command+Tab,</appendix>
          <appendix>we send "Command+Click" when you did a mouse click while</appendix>
          <appendix>pushing the Option key after you pushed Option+Tab.</appendix>
          <appendix>"Option+Click" should be output, but this option changes this behavior.</appendix>
          <identifier essential="true">general.lazy_modifiers_with_mouse_event</identifier>
        </item>
        <item>
          <name>Disable NumPad Hack</name>
          <appendix>(Don't change Fn+JKL.. to NumPad, and other Fn+key combinations)</appendix>
          <identifier essential="true">general.disable_numpad_hack</identifier>
        </item>
        <item>
          <name>Excluding Devices</name>
          <list>
            <item>
              <name>Don't Remap Logitech Cordless Presenter</name>
              <identifier essential="true">general.dont_remap_logitech_cordless_presenter</identifier>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Pass Through Mode (Disable all settings temporarily)</name>
      <list>
        <item>
          <!-- Pass Through Mode Core -->
          <name>What is Pass Through Mode?</name>
          <appendix>You can disable all settings temporarily.</appendix>
          <appendix>Turn on a setting below, and toggle "Pass Through Mode".</appendix>
          <identifier vk_config="true">notsave.passthrough</identifier>
          <autogen>--ShowStatusMessage-- Pass Through</autogen>
        </item>
        <item>
          <name>Change Fn+Escape to toggle "Pass Through Mode"</name>
          <identifier>passthrough.fnescape</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, ModifierFlag::FN, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [Escape+Tab] to toggle "Pass Through Mode"</name>
          <identifier>passthrough.escapetab</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::ESCAPE, KeyCode::TAB, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
        </item>
        <item>
          <name>Holding Escape to toggle "Pass Through Mode"</name>
          <identifier>passthrough.holding_escape</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::ESCAPE, KeyCode::ESCAPE, KeyCode::VK_NONE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Pointing Device</name>
      <list>
        <item>
          <name>CursorMove to ScrollWheel</name>
          <list>
            <item>
              <name>We can scroll pages by moving the mouse pointer.</name>
              <appendix>(Also, you can generate a click event if you click without moving)</appendix>
              <identifier vk_config="true">notsave.pointing_relative_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::NONE</autogen>
            </item>
            <item>
              <name>RightClick+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_rightclick_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::RIGHT</autogen>
            </item>
            <item>
              <name>MiddleClick+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_middleclick_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>MouseButton4+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_mousebutton4_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::BUTTON4</autogen>
            </item>
            <item>
              <name>Control+RightClick+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_controlRightClick_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::RIGHT, VK_CONTROL</autogen>
            </item>
            <item>
              <name>Shift+RightClick+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_shiftRightClick_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::RIGHT, VK_SHIFT</autogen>
            </item>
            <item>
              <name>Command+Control+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_commandControl_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::NONE, VK_COMMAND | VK_CONTROL</autogen>
            </item>
            <item>
              <name>Command+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_Control_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::NONE, VK_COMMAND</autogen>
            </item>
            <item>
              <name>Fn+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_fn_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::NONE, ModifierFlag::FN</autogen>
            </item>
            <item>
              <name>Option+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_option_to_scroll</identifier>
              <autogen>--PointingRelativeToScroll-- PointingButton::NONE, VK_OPTION</autogen>
            </item>
            <item>
              <name>(Simultaneous) LeftClick+RightClick+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_LRClick_to_scroll</identifier>
              <autogen>--SimultaneousKeyPresses-- PointingButton::LEFT, PointingButton::RIGHT, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_pointing_relative_to_scroll</autogen>
            </item>
            <item>
              <name>Space+CursorMove to ScrollWheel</name>
              <identifier>remap.pointing_relative_space_to_scroll</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_pointing_relative_to_scroll , KeyCode::SPACE</autogen>
            </item>
            <item>
              <name>CursorMove to ScrollWheel Option</name>
              <list>
                <item>
                  <name>Enable dynamic scrollwheel direction fixation (Horizontal/Vertical)</name>
                  <identifier essential="true">option.pointing_enable_scrollwheel_fixation</identifier>
                </item>
                <item>
                  <name>Disable Horizontal Scroll</name>
                  <identifier essential="true">option.pointing_disable_horizontal_scroll</identifier>
                </item>
                <item>
                  <name>Disable Vertical Scroll</name>
                  <identifier essential="true">option.pointing_disable_vertical_scroll</identifier>
                </item>
                <item>
                  <name>Disable Momentum Scroll</name>
                  <identifier essential="true">option.pointing_disable_momentum_scroll</identifier>
                </item>
              </list>
            </item>
          </list>
        </item>
        <item>
          <name>Button to Button</name>
          <list>
            <item>
              <name>Control+LeftClick to MiddleClick</name>
              <identifier>remap.pointing_controlLeftclick2middleclick</identifier>
              <autogen>--PointingButtonToPointingButton-- PointingButton::LEFT, VK_CONTROL, PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>Fn+LeftClick to MiddleClick</name>
              <identifier>remap.pointing_fnLeftclick2middleclick</identifier>
              <autogen>--PointingButtonToPointingButton-- PointingButton::LEFT, ModifierFlag::FN, PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>Fn+LeftClick to Option_L+LeftClick</name>
              <identifier>remap.pointing_fnLeftclick2optionLeftclick</identifier>
              <autogen>--PointingButtonToPointingButton-- PointingButton::LEFT, ModifierFlag::FN, PointingButton::LEFT, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Option+LeftClick to MiddleClick</name>
              <identifier>remap.pointing_optionLeftclick2middleclick</identifier>
              <autogen>--PointingButtonToPointingButton-- PointingButton::LEFT, VK_OPTION, PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>RightClick to LeftClick</name>
              <identifier>remap.pointing_rightclick2leftclick</identifier>
              <autogen>--PointingButtonToPointingButton-- PointingButton::RIGHT, PointingButton::LEFT</autogen>
            </item>
            <item>
              <name>Control+RightClick to Double-LeftClick</name>
              <identifier>remap.pointing_controlrightclick2doubleleftclick</identifier>
              <autogen>--PointingButtonToPointingButton-- PointingButton::RIGHT, VK_CONTROL, PointingButton::LEFT, PointingButton::LEFT</autogen>
            </item>
            <item>
              <name>MiddleClick to Command+LeftClick</name>
              <identifier>remap.pointing_middleclick2commandLeftclick</identifier>
              <autogen>--PointingButtonToPointingButton-- PointingButton::MIDDLE, PointingButton::LEFT, ModifierFlag::COMMAND_L</autogen>
            </item>
            <item>
              <name>(Simultaneous) LeftClick+RightClick to MiddleClick</name>
              <identifier>remap.pointing_leftrightclick2middleclick</identifier>
              <autogen>--SimultaneousKeyPresses-- PointingButton::LEFT, PointingButton::RIGHT, PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>(Simultaneous) LeftClick+RightClick to Button4</name>
              <identifier>remap.pointing_leftrightclick2button4</identifier>
              <autogen>--SimultaneousKeyPresses-- PointingButton::LEFT, PointingButton::RIGHT, PointingButton::BUTTON4</autogen>
            </item>
            <item>
              <name>(Simultaneous) LeftClick+RightClick to Button5</name>
              <identifier>remap.pointing_leftrightclick2button5</identifier>
              <autogen>--SimultaneousKeyPresses-- PointingButton::LEFT, PointingButton::RIGHT, PointingButton::BUTTON5</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Button to Key</name>
          <list>
            <item>
              <name>MiddleClick to Dashboard</name>
              <identifier>remap.pointing_middleclick2dashboard</identifier>
              <autogen>--PointingButtonToKey-- PointingButton::MIDDLE, KeyCode::DASHBOARD</autogen>
            </item>
            <item>
              <name>MiddleClick to Expose</name>
              <identifier>remap.pointing_middleclick2expose</identifier>
              <autogen>--PointingButtonToKey-- PointingButton::MIDDLE, KeyCode::EXPOSE_ALL</autogen>
            </item>
            <item>
              <name>MiddleClick to F8</name>
              <identifier>remap.pointing_middleclick2f8</identifier>
              <autogen>--PointingButtonToKey-- PointingButton::MIDDLE, KeyCode::F8</autogen>
            </item>
            <item>
              <name>MiddleClick to Control+F4 (= Move focus to active or next window)</name>
              <identifier>remap.pointing_middleclick2controlF4</identifier>
              <autogen>--PointingButtonToKey-- PointingButton::MIDDLE, KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
            </item>
            <item>
              <name>Set 1: Button4 to Command+[ (Back)</name>
              <identifier>remap.pointing_button4_to_command_bracket_left</identifier>
              <autogen>--PointingButtonToKey-- PointingButton::BUTTON4, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
            </item>
            <item>
              <name>Set 1: Button5 to Command+] (Forward)</name>
              <identifier>remap.pointing_button5_to_command_bracket_right</identifier>
              <autogen>--PointingButtonToKey-- PointingButton::BUTTON5, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>
            </item>
            <item>
              <name>Set 2: Button4 to Command+] (Forward)</name>
              <identifier>remap.pointing_button4_to_command_bracket_right</identifier>
              <autogen>--PointingButtonToKey-- PointingButton::BUTTON4, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L</autogen>
            </item>
            <item>
              <name>Set 2: Button5 to Command+[ (Back)</name>
              <identifier>remap.pointing_button5_to_command_bracket_left</identifier>
              <autogen>--PointingButtonToKey-- PointingButton::BUTTON5, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
            </item>
            <item>
              <name>(Simultaneous) LeftClick+RightClick to Dashboard</name>
              <identifier>remap.pointing_leftrightclick2dashboard</identifier>
              <autogen>--SimultaneousKeyPresses-- PointingButton::LEFT, PointingButton::RIGHT, KeyCode::DASHBOARD</autogen>
            </item>
            <item>
              <name>(Simultaneous) LeftClick+RightClick to Expose</name>
              <identifier>remap.pointing_leftrightclick2expose</identifier>
              <autogen>--SimultaneousKeyPresses-- PointingButton::LEFT, PointingButton::RIGHT, KeyCode::EXPOSE_ALL</autogen>
            </item>
            <item>
              <name>(Simultaneous) LeftClick+RightClick to F8</name>
              <identifier>remap.pointing_leftrightclick2f8</identifier>
              <autogen>--SimultaneousKeyPresses-- PointingButton::LEFT, PointingButton::RIGHT, KeyCode::F8</autogen>
            </item>
            <item>
              <name>LeftClick to F12 (only in MacBookPro2,1 Trackpad)</name>
              <identifier>remap.pointing_leftclick2f12_trackpad</identifier>
              <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x021a</device_only>
              <autogen>--PointingButtonToKey-- PointingButton::LEFT, KeyCode::F12</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Device Specific Mixed Settings</name>
      <list>
        <item>
          <name>Swap Shift_L and CapsLock on the Mac's internal kbd (vid/pid: 0x05ac,0x0218)</name>
          <appendix>(*Note: I have set PCKeyboardHack to remap CapsLock to ExposeAll on all kbds*)</appendix>
          <appendix>(ExposeAll to Shift_L and Shift_L to CapsLock on the MacBook's internal keyboard)</appendix>
          <appendix>(ExposeAll back to CapsLock on other devices)</appendix>
          <identifier>remap.swap_shiftLcapslock_MacBookOnly</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, KeyCode::SHIFT_L</autogen>
            <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
          </block>
          <block>
            <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_not>
            <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, KeyCode::CAPSLOCK</autogen>
          </block>
        </item>
        <item>
          <name>Revert CapsLock to normal on every kbds</name>
          <appendix>(*Note: I have set PCKeyboardHack to remap CapsLock to ExposeAll on all kbds*)</appendix>
          <identifier>remap.restorecapslock_AllKeyboards</identifier>
          <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, KeyCode::CAPSLOCK</autogen>
        </item>

        <item>
          <name>Command_R to Option_R on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
          <identifier>remap.commandR2optionR_MacBookOnly</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
          </block>
        </item>
        <item>
          <name>Enter to Control_R on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
          <identifier>remap.enter2controlR_MacBookOnly</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_R</autogen>
          </block>
        </item>
        <item>
          <name>Swap Shift_R and Backslash (\) on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
          <identifier>remap.swap_shiftRpipes_MacBookOnly</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::BACKSLASH</autogen>
            <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::SHIFT_R</autogen>
          </block>
        </item>
        <item>
          <name>‘last row left-shift’ on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
          <appendix>(Backquote,Z,X,C,V to Z,X,C,V,B)</appendix>
          <identifier>remap.backquote2z_zxcv2xcvb_MacBookOnly</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::Z</autogen>
            <autogen>--KeyToKey-- KeyCode::Z, KeyCode::X</autogen>
            <autogen>--KeyToKey-- KeyCode::X, KeyCode::C</autogen>
            <autogen>--KeyToKey-- KeyCode::C, KeyCode::V</autogen>
            <autogen>--KeyToKey-- KeyCode::V, KeyCode::B</autogen>
          </block>
        </item>
        <item>
          <name>‘Central-Return’ (B to Return) on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
          <identifier>remap.b2return_MacBookOnly</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::B, KeyCode::RETURN</autogen>
          </block>
        </item>
        <item>
          <name>‘first row right-shift’ on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
          <appendix>(7,8,9,0,-,=,delete to 6,7,8,9,0,-,=)</appendix>
          <identifier>remap.firstrowshift_MacBookOnly</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::KEY_7, KeyCode::KEY_6</autogen>
            <autogen>--KeyToKey-- KeyCode::KEY_8, KeyCode::KEY_7</autogen>
            <autogen>--KeyToKey-- KeyCode::KEY_9, KeyCode::KEY_8</autogen>
            <autogen>--KeyToKey-- KeyCode::KEY_0, KeyCode::KEY_9</autogen>
            <autogen>--KeyToKey-- KeyCode::MINUS, KeyCode::KEY_0</autogen>
            <autogen>--KeyToKey-- KeyCode::EQUAL, KeyCode::MINUS</autogen>
            <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::EQUAL</autogen>
          </block>
        </item>
        <item>
          <name>‘Central-Delete’ (6 to Delete) on the MacBook's internal kbd (vid/pid: 0x05ac,0x0218)</name>
          <identifier>remap.six2delete_MacBookOnly</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::KEY_6, KeyCode::DELETE</autogen>
          </block>
        </item>

        <item>
          <name>Swap Command_L and Option_L on TypeMatrix 2030 kbd</name>
          <identifier>remap.swap_commandLoptionL_TypeMatrixOnly</identifier>
          <block>
            <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
            <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
            <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
          </block>
        </item>
        <item>
          <name>Option+Tab to Command+Tab on TypeMatrix 2030 kbd</name>
          <identifier>remap.optionTab2commandTab_TypeMatrixOnly</identifier>
          <block>
            <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
            <autogen>--KeyToKey-- KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          </block>
        </item>

        <item>
          <name>Application Key to Command_L+Backquote on TypeMatrix 2030 kbd</name>
          <identifier>remap.pc_application2commandLbackquote_TypeMatrixOnly</identifier>
          <block>
            <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
            <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
          </block>
        </item>

        <item>
          <name>Use PC Style Copy/Paste #3 on TypeMatrix 2030 kbd</name>
          <appendix>(Control+Insert to Command_L+C)</appendix>
          <appendix>(Shift+Insert to Command_L+V)</appendix>
          <appendix>(Shift+Delete to Command_L+X) (Note: "Delete" is Mac's Forward Delete)</appendix>
          <identifier>remap.copy_paste_winstyle3_TypeMatrixOnly</identifier>
          <block>
            <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
            <autogen>--KeyToKey-- KeyCode::PC_INSERT, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- KeyCode::PC_INSERT, VK_SHIFT, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- KeyCode::FORWARD_DELETE, VK_SHIFT, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
          </block>
        </item>
        <item>
          <name>Use PC Style Copy/Paste #3bis (for bépo / french dvorak) on TypeMatrix 2030 kbd</name>
          <appendix>(Control+Insert to Command_L+C)</appendix>
          <appendix>(Shift+Insert to Command_L+V)</appendix>
          <appendix>(Shift+Delete to Command_L+X) (Note: "Delete" is Mac's Forward Delete)</appendix>
          <identifier>remap.copy_paste_winstyle3b_TypeMatrixOnly</identifier>
          <block>
            <device_only>DeviceVendor::TYPEMATRIX,DeviceProduct::TYPEMATRIX_KEYBOARD_0x2030</device_only>
            <autogen>--KeyToKey-- KeyCode::PC_INSERT, VK_CONTROL, KeyCode::H, ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- KeyCode::PC_INSERT, VK_SHIFT, KeyCode::U, ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- KeyCode::FORWARD_DELETE, VK_SHIFT, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          </block>
        </item>
        <item>
          <name>Swap CapsLock and Control on FILCO FKBN91ML/NB</name>
          <appendix>// We perform it through PC Application Key.</appendix>
          <appendix>// Set CapsLock key code to 110 by PCKeyboardHack.</appendix>
          <identifier>remap.swap_capslock_and_control_FKBN91ML</identifier>
          <block>
            <device_only>DeviceVendor::FILCO,DeviceProduct::FKBN91ML_NB</device_only>
            <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::CONTROL_L</autogen>
            <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::CAPSLOCK</autogen>
          </block>
          <block>
            <device_not>DeviceVendor::FILCO,DeviceProduct::FKBN91ML_NB</device_not>
            <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::CAPSLOCK</autogen>
          </block>
        </item>
        <item>
          <name>Swap Command_L and Option_L on FILCO FKBN91ML/NB</name>
          <identifier>remap.swap_commandL_and_optionL_FKBN91ML</identifier>
          <block>
            <device_only>DeviceVendor::FILCO,DeviceProduct::FKBN91ML_NB</device_only>
            <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
            <autogen>--KeyToKey-- KeyCode::OPTION_L,  KeyCode::COMMAND_L</autogen>
          </block>
        </item>
      </list>
    </item>

    <item>
      <name>Change Arrow(Up/Down/Left/Right) Key</name>
      <list>
        <item>
          <name>Arrow(Down/Left/Right) to Fn</name>
          <appendix>Disable Up-Arrow</appendix>
          <identifier>remap.arrow2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP, KeyCode::VK_NONE</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN, KeyCode::FN</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, KeyCode::FN</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Arrow(Down/Left/Right) to Option_L</name>
          <appendix>Disable Up-Arrow</appendix>
          <identifier>remap.arrow2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP, KeyCode::VK_NONE</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN, KeyCode::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, KeyCode::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command+Arrow to Option_L+Arrow</name>
          <identifier>remap.commandArrow2optionLarrow</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP, VK_COMMAND, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN, VK_COMMAND, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, VK_COMMAND, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, VK_COMMAND, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Control+Arrow to Option_L+Arrow</name>
          <identifier>remap.controlArrow2optionLarrow</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP,    VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN,  VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT,  VK_CONTROL, KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Option+Arrow to Command_L+Arrow</name>
          <identifier>remap.optionArrow2commandLarrow</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP,    VK_OPTION, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN,  VK_OPTION, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT,  VK_OPTION, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, VK_OPTION, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R+Arrow to PageUp/PageDown/Home/End</name>
          <identifier>remap.commandR_arrow2PgUpDnHomeEnd</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_R, KeyCode::PAGEUP</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_R, KeyCode::PAGEDOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_R, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_R, KeyCode::END</autogen>
        </item>
        <item>
          <name>Option_R+Arrow to PageUp/PageDown/Home/End</name>
          <identifier>remap.optionR_arrow2PgUpDnHomeEnd</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP, ModifierFlag::OPTION_R, KeyCode::PAGEUP</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_R, KeyCode::PAGEDOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_R, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_R, KeyCode::END</autogen>
        </item>
        <item>
          <name>Left-Arrow to Control_L</name>
          <identifier>remap.leftarrow2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command+Left-Arrow to Shift_L+Home,Command_L+X</name>
          <appendix>(only in virtual machine, RDC)</appendix>
          <identifier>remap.commandLeftarrow2beginningofline_cut_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, VK_COMMAND | ModifierFlag::NONE, KeyCode::HOME, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command+Left-Arrow to Shift_L+Home,Control_L+X</name>
          <appendix>(only in virtual machine, RDC)</appendix>
          <identifier>remap.commandLeftarrow2beginningofline_cut2_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, VK_COMMAND | ModifierFlag::NONE, KeyCode::HOME, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command+Left-Arrow to Command_L+Shift_L+Left-Arrow,Command_L+X</name>
          <appendix>(except virtual machine, RDC)</appendix>
          <identifier>remap.commandLeftarrow2beginningofline_cut</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, VK_COMMAND | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command+Left-Arrow to Command_L+Shift_L+Left-Arrow,Control_L+X</name>
          <appendix>(except virtual machine, RDC)</appendix>
          <identifier>remap.commandLeftarrow2beginningofline_cut2</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT, VK_COMMAND | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command+Right-Arrow to Shift_L+End,Command_L+X</name>
          <appendix>(only in virtual machine, RDC)</appendix>
          <identifier>remap.commandRightarrow2endofline_cut_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, VK_COMMAND | ModifierFlag::NONE, KeyCode::END, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command+Right-Arrow to Shift_L+End,Control_L+X</name>
          <appendix>(only in virtual machine, RDC)</appendix>
          <identifier>remap.commandRightarrow2endofline_cut2_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, VK_COMMAND | ModifierFlag::NONE, KeyCode::END, ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command+Right-Arrow to Command_L+Shift_L+Right-Arrow,Command_L+X</name>
          <appendix>(except virtual machine, RDC)</appendix>
          <identifier>remap.commandRightarrow2endofline_cut</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, VK_COMMAND | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command+Right-Arrow to Command_L+Shift_L+Right-Arrow,Control_L+X</name>
          <appendix>(except virtual machine, RDC)</appendix>
          <identifier>remap.commandRightarrow2endofline_cut2</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, VK_COMMAND | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Backquote(`) Key</name>
      <list>
        <item>
          <name>Backquote(`) to CapsLock</name>
          <identifier>remap.backquote2capslock</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Backquote(`) to Command_L</name>
          <identifier>remap.backquote2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Backquote(`) to Control_L</name>
          <identifier>remap.backquote2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Backquote(`) to Option_L</name>
          <identifier>remap.backquote2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Backquote(`) to Shift_L</name>
          <identifier>remap.backquote2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Fn+Backquote(`) to Backslash(\)</name>
          <identifier>remap.fnbackquote2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Backquote(`) to Delete</name>
          <identifier>remap.backquote2delete</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Backquote(`) to Escape</name>
          <identifier>remap.backquote2escape</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Backquote(`) to Escape if no modifiers pressed</name>
          <identifier>remap.backquote2escape_withoutmodifiers</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Backquote(`) to Forward Delete</name>
          <identifier>remap.backquote2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Backquote(`) to F8</name>
          <identifier>remap.backquote2f8</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::F8</autogen>
        </item>
        <item>
          <name>Backquote(`) to LeftClick</name>
          <identifier>remap.backquote2LeftClick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::BACKQUOTE, PointingButton::LEFT</autogen>
        </item>
        <item>
          <name>Swap Command+Backquote(`) and Option+Backquote(`)</name>
          <identifier>remap.swap_commandbackquote_optionbackquote</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::OPTION_L,  KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Backslash(\) Key</name>
      <list>
        <item>
          <name>Backslash(\) to Delete</name>
          <identifier>remap.backslash2delete</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Backslash(\) to Delete</name>
          <appendix>(+ Fn+Backslash(\) to Backslash(\))</appendix>
          <appendix>(+ retain Shift+Backslash(\))</appendix>
          <identifier>remap.backslash2delete_retain_shiftbackslash</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, VK_SHIFT, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Backslash(\) to Enter</name>
          <identifier>remap.backslash2enter</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Backslash(\) to Forward Delete</name>
          <appendix>(+ Fn+Backslash(\) to Backslash(\))</appendix>
          <identifier>remap.backslash2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Backslash(\) to Forward Delete</name>
          <appendix>(+ Fn+Backslash(\) to Backslash(\))</appendix>
          <appendix>(+ retain Shift+Backslash(\))</appendix>
          <identifier>remap.backslash2forwarddelete_retain_shiftbackslash</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, VK_SHIFT, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Backslash(\) to Forward Delete (if no other modifiers pressed)</name>
          <identifier>remap.backslash2forwarddelete_nomods</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Backslash(\) to Return</name>
          <identifier>remap.backslash2return</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::RETURN</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change CapsLock Key</name>
      <appendix>*** Use "PCKeyboardHack" to change CapsLock key.</appendix>
      <appendix>*** &#8594; http://pqrs.org/macosx/keyremap4macbook/extra.html</appendix>
    </item>

    <item>
      <name>Change Command_L Key (Left Command)</name>
      <list>
        <item>
          <name>Command_L to Control_L</name>
          <identifier>remap.commandL2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Control_L (only in virtual machine, RDC)</name>
          <identifier>remap.commandL2controlL_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Control_L (only in RDC)</name>
          <identifier>remap.commandL2controlL_rdc</identifier>
          <only>REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Control_L (only in X11)</name>
          <identifier>remap.commandL2controlL_x11</identifier>
          <only>X11</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Control_L (only in Emacs)</name>
          <identifier>remap.commandL2controlL_emacs</identifier>
          <only>EMACS</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Control_L (except Emacs)</name>
          <identifier>remap.commandL2controlL_ex_emacs</identifier>
          <not>EMACS</not>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Control_L (except Terminal, Chrome, RDC)</name>
          <identifier>remap.commandL2controlL_excustom</identifier>
          <not>TERMINAL, GOOGLE_CHROME, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_L to Option_L</name>
          <identifier>remap.commandL2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_L to Option_L (only in virtual machine, RDC)</name>
          <identifier>remap.commandL2optionL_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_L to Option_L (only in Emacs)</name>
          <identifier>remap.commandL2optionL_emacs</identifier>
          <only>EMACS</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_L to Shift_L</name>
          <identifier>remap.commandL2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command_L to Backquote(`)</name>
          <identifier>remap.commandL2backquote</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Command_L to Escape</name>
          <identifier>remap.commandL2escape</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Command_L to Escape (only in Emacs)</name>
          <identifier>remap.commandL2escape_emacs</identifier>
          <only>EMACS</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Command_R+Command_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Command_L)</appendix>
          <identifier>remap.commandRcommandL2escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Control_L+Command_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Command_L)</appendix>
          <identifier>remap.controlLcommandL2escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, ModifierFlag::CONTROL_L, KeyCode::COMMAND_L, ModifierFlag::CONTROL_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Shift_L+Command_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Command_L)</appendix>
          <identifier>remap.shiftLcommandL2escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Command_R Key (Right Command)</name>
      <list>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, send Delete)</appendix>
          <identifier>remap.commandR2commandR_delete</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, send Delete) + [KeyRepeat]</appendix>
          <identifier>remap.commandR2commandR_delete_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, send Enter)</appendix>
          <identifier>remap.commandR2commandR_enter</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, send Enter) + [KeyRepeat]</appendix>
          <identifier>remap.commandR2commandR_enter_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, send Command+Space)</appendix>
          <identifier>remap.commandR2commandR_commandSpace</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R to Control_L</name>
          <identifier>remap.commandR2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_R to Control_R (only in virtual machine, RDC)</name>
          <identifier>remap.commandR2controlR_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Command_R to Control_L (only in X11)</name>
          <identifier>remap.commandR2controlL_x11</identifier>
          <only>X11</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_R to Control_L (only in Emacs)</name>
          <identifier>remap.commandR2controlL_emacs</identifier>
          <only>EMACS</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command_R to Fn</name>
          <identifier>remap.commandR2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Command_R to Fn (only in virtual machine)</name>
          <identifier>remap.commandR2fn_vm</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Option_R+Command_R to Fn</name>
          <identifier>remap.optionRcommandR2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, ModifierFlag::OPTION_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Command_R to Option_L</name>
          <identifier>remap.commandR2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_R to Option_R</name>
          <identifier>remap.commandR2optionR</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Command_R to Option_R (only in Emacs, Terminal, X11)</name>
          <identifier>remap.commandR2optionR_etx</identifier>
          <only>EMACS, TERMINAL, X11</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Command_R to Shift_L</name>
          <identifier>remap.commandR2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command_R to Enter</name>
          <identifier>remap.commandR2enter</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Command_R to Escape</name>
          <identifier>remap.commandR2escape</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Command_R to Delete</name>
          <identifier>remap.commandR2delete</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Command_R to Forward Delete</name>
          <identifier>remap.commandR2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Command_R to Home</name>
          <identifier>remap.commandR2home</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::HOME</autogen>
        </item>
        <item>
          <name>Command_R to Home (only in virtual machine, RDC)</name>
          <identifier>remap.commandR2home_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::HOME</autogen>
        </item>
        <item>
          <name>Command_R to Home (only in virtual machine, RDC)</name>
          <appendix>(+ Shift+Command_R to Shift+Home,Control_L+C)</appendix>
          <identifier>remap.commandR2home_vm_ex</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, VK_SHIFT, KeyCode::HOME, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::HOME</autogen>
        </item>
        <item>
          <name>Command_R to Home (only in virtual machine, RDC)</name>
          <appendix>(+ Shift+Command_R to Shift+Home,Command_L+C)</appendix>
          <identifier>remap.commandR2home_vm_ex2</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, VK_SHIFT, KeyCode::HOME, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::HOME</autogen>
        </item>
        <item>
          <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
          <appendix>(except virtual machine, RDC)</appendix>
          <identifier>remap.commandR2commandLleftarrow</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
          <appendix>(+ Shift+Command_R to Command_L+Shift_L+Left-Arrow,Command_L+C)</appendix>
          <appendix>(except virtual machine, RDC)</appendix>
          <identifier>remap.commandR2commandLleftarrow_ex</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
          <appendix>(+ Shift+Command_R to Command_L+Shift_L+Left-Arrow,Control_L+C)</appendix>
          <appendix>(except virtual machine, RDC)</appendix>
          <identifier>remap.commandR2commandLleftarrow_ex2</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, VK_SHIFT, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
          <appendix>(+ Control+Command_R, to Command_L+Up-Arrow) (beginning-of-buffer)</appendix>
          <appendix>(Except in Virtual Machine, RDC)</appendix>
          <identifier>remap.commandR2fnleftarrow</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, VK_CONTROL, KeyCode::CURSOR_UP,   ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R,             KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R to Command_L+Left-Arrow (beginning-of-line)</name>
          <identifier>remap.commandR2commandLleftarrow_all</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Command_R to PageUp</name>
          <identifier>remap.commandR2pageup</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>Command_R to Space</name>
          <identifier>remap.commandR2space</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Command_R to LeftClick</name>
          <identifier>remap.commandR2leftclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::COMMAND_R, PointingButton::LEFT</autogen>
        </item>
        <item>
          <name>Command_R to MiddleClick</name>
          <identifier>remap.commandR2middleclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::COMMAND_R, PointingButton::MIDDLE</autogen>
        </item>
        <item>
          <name>Command_R to RightClick</name>
          <identifier>remap.commandR2rightclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::COMMAND_R, PointingButton::RIGHT</autogen>
        </item>
        <item>
          <name>Command_L+Command_R to Return</name>
          <appendix>(Note: Return is sent when you release Command_R)</appendix>
          <identifier>remap.commandLcommandR2return</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Command_L+Command_R to Enter</name>
          <appendix>(Note: Enter is sent when you release Command_R)</appendix>
          <identifier>remap.commandLcommandR2enter</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Control_L+Command_R to Return</name>
          <appendix>(Note: Return is sent when you release Command_R)</appendix>
          <identifier>remap.controlLcommandR2return</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::CONTROL_L, KeyCode::COMMAND_R, ModifierFlag::CONTROL_L, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Shift_L+Command_R to Return</name>
          <appendix>(Note: Return is sent when you release Command_R)</appendix>
          <identifier>remap.shiftLcommandR2return</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Control_L Key (Left Control)</name>
      <list>
        <item>
          <name>Control_L to Command_L</name>
          <identifier>remap.controlL2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L to Command_L (only in virtual machine, RDC)</name>
          <identifier>remap.controlL2commandL_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L to Command_L (only in X11)</name>
          <identifier>remap.controlL2commandL_x11</identifier>
          <only>X11</only>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L to Command_L (except Emacs)</name>
          <identifier>remap.controlL2commandL_ex_emacs</identifier>
          <not>EMACS</not>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L to Command_L (except Terminal, Chrome, RDC)</name>
          <identifier>remap.controlL2commandL_excustom</identifier>
          <not>TERMINAL, GOOGLE_CHROME, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L to Control_L</name>
          <appendix>(+ When you type Control_L only, send Delete)</appendix>
          <identifier>remap.controlL2controlL_delete</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Control_L to Control_L</name>
          <appendix>(+ When you type Control_L only, send Delete) + [KeyRepeat]</appendix>
          <identifier>remap.controlL2controlL_delete_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Control_L to Control_L</name>
          <appendix>(+ When you type Control_L only without other modifiers, send Delete) + [KeyRepeat]</appendix>
          <identifier>remap.controlL2controlL_delete_nomod_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::CONTROL_L, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Control_L to Control_L</name>
          <appendix>(+ When you type Control_L only, send Escape)</appendix>
          <identifier>remap.controlL2controlL_escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Fn+Control_L to Control_R</name>
          <identifier>remap.fncontrolL2controlR</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, ModifierFlag::FN, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Control_L to Fn</name>
          <identifier>remap.controlL2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Control_L to Fn (only in virtual machine, RDC)</name>
          <identifier>remap.controlL2fn_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Option_L+Control_L to Fn</name>
          <identifier>remap.optionLcontrolL2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, ModifierFlag::OPTION_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Control_L to Option_L</name>
          <identifier>remap.controlL2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Control_L to Shift_L</name>
          <identifier>remap.controlL2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Control_L to Delete</name>
          <identifier>remap.controlL2delete</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Control_L to Escape</name>
          <identifier>remap.controlL2escape</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Command_R+Control_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Control_L)</appendix>
          <identifier>remap.commandRcontrolL2escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::CONTROL_L, ModifierFlag::COMMAND_R, KeyCode::CONTROL_L, ModifierFlag::COMMAND_R, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Shift_L+Control_L to Escape</name>
          <appendix>(Note: Escape is sent when you release Control_L)</appendix>
          <identifier>remap.shiftLcontrolL2escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Control_L to Return</name>
          <identifier>remap.controlL2return</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Disable Control_L</name>
          <identifier>remap.drop_controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_L, KeyCode::VK_NONE</autogen>
        </item>
        <item>
          <name>Control_L x2 to Control_L+Space</name>
          <identifier>remap.controlL_x2_to_controlLspace</identifier>
          <autogen>--DoublePressModifier-- KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::SPACE, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Control_L to LeftClick</name>
          <identifier>remap.controlL2lefttclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::CONTROL_L, PointingButton::LEFT</autogen>
        </item>
        <item>
          <name>Control_L to RightClick</name>
          <identifier>remap.controlL2rightclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::CONTROL_L, PointingButton::RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Control_R Key (Right Control)</name>
      <list>
        <item>
          <name>Control_R to Command_R</name>
          <identifier>remap.controlR2commandR</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_R, KeyCode::COMMAND_R</autogen>
        </item>
        <item>
          <name>Control_R to Command_R (only in virtual machine, RDC)</name>
          <identifier>remap.controlR2commandR_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::CONTROL_R, KeyCode::COMMAND_R</autogen>
        </item>
        <item>
          <name>Control_R to Option_R</name>
          <identifier>remap.controlR2optionR</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_R, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Control_R to Escape</name>
          <identifier>remap.controlR2escape</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_R, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Control_R to Fn</name>
          <identifier>remap.controlR2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::CONTROL_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Control_R to RightClick</name>
          <identifier>remap.controlR2rightclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::CONTROL_R, PointingButton::RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Delete Key</name>
      <list>
        <item>
          <name>Delete to Backquote(`)</name>
          <identifier>remap.delete2backquote</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Delete to Backslash(\)</name>
          <identifier>remap.delete2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Delete to CapsLock</name>
          <identifier>remap.delete2capslock</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Command+Delete to Option_L+Delete</name>
          <identifier>remap.commandDelete2optionLdelete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_COMMAND, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Control+Delete to Command_L+Delete</name>
          <identifier>remap.controlDelete2commandLdelete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_CONTROL, KeyCode::DELETE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option+Delete to Command_L+Delete</name>
          <identifier>remap.optionDelete2commandLdelete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_OPTION, KeyCode::DELETE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Delete to Forward Delete</name>
          <identifier>remap.delete2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Delete to Forward Delete</name>
          <appendix>(Fn+Delete to Delete)</appendix>
          <identifier>remap.delete2forwarddelete_fnDelete2delete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, ModifierFlag::FN, KeyCode::DELETE</autogen>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Control+Delete to Forward Delete</name>
          <identifier>remap.controlDelete2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Option+Delete to Forward Delete</name>
          <identifier>remap.optionDelete2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_OPTION, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Shift+Delete to Forward Delete</name>
          <identifier>remap.shiftDelete2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Shift+Delete to Forward Delete (if no other modifiers pressed)</name>
          <identifier>remap.shiftDelete2forwarddelete_nomodifiers</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT | ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Shift+Delete to Help</name>
          <identifier>remap.shiftdelete2help</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT, KeyCode::HELP</autogen>
        </item>
        <item>
          <name>Shift+Delete to Pipe(|)</name>
          <identifier>remap.shiftDelete2pipe</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Shift+Delete to Tilde(~)</name>
          <identifier>remap.shiftDelete2tilde</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Disable Delete</name>
          <identifier>remap.drop_delete</identifier>
          <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::VK_NONE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Eject Key</name>
      <appendix>*** We recommend to use "NoEjectDelay" together when you change eject key.</appendix>
      <appendix>*** &#8594; http://pqrs.org/macosx/keyremap4macbook/noejectdelay.html</appendix>
      <list>
        <item>
          <name>Eject to Dashboard if no modifiers pressed</name>
          <identifier>remap.eject2dashboard_withoutmodifiers</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::DASHBOARD</autogen>
        </item>
        <item>
          <name>Eject to Escape</name>
          <identifier>remap.eject2escape</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Eject to Expose if no modifiers pressed</name>
          <identifier>remap.eject2expose_withoutmodifiers</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::EXPOSE_ALL</autogen>
        </item>
        <item>
          <name>Eject to Expose</name>
          <identifier>remap.eject2expose</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::EXPOSE_ALL</autogen>
        </item>
        <item>
          <name>Eject to Forward Delete</name>
          <identifier>remap.eject2forwarddelete</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Eject to Forward Delete</name>
          <appendix>(Fn+Eject to Eject)</appendix>
          <identifier>remap.eject2forwarddelete_retain_fnEject</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Eject to Forward Delete if no modifiers pressed</name>
          <identifier>remap.eject2forwarddelete_withoutmodifiers</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Eject to Forward Delete</name>
          <appendix>(+ Eject to Control+D in Terminal,X11)</appendix>
          <identifier>remap.eject2forwarddelete_term_x11</identifier>
          <block>
            <only>TERMINAL, X11</only>
            <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::D, ModifierFlag::CONTROL_L</autogen>
          </block>
          <block>
            <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
          </block>
        </item>
        <item>
          <name>Eject to Command+Control+Option+Shift+E</name>
          <identifier>remap.eject2fccosE</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::E, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Eject to F12</name>
          <identifier>remap.eject2f12</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::F12</autogen>
        </item>
        <item>
          <name>Eject to F12 (if no modifiers pressed)</name>
          <identifier>remap.eject2f12_withoutmodifiers</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::F12</autogen>
        </item>
        <item>
          <name>Eject to F14</name>
          <identifier>remap.eject2f14</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::F14</autogen>
        </item>
        <item>
          <name>Eject to F15</name>
          <identifier>remap.eject2f15</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::F15</autogen>
        </item>
        <item>
          <name>Eject to PageDown</name>
          <identifier>remap.eject2pagedown</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::EJECT, KeyCode::PAGEDOWN</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Enter Key</name>
      <list>
        <item>
          <name>Enter to Command_L</name>
          <identifier>remap.enter2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Enter to Command_L (except virtual machine, RDC)</name>
          <identifier>remap.enter2commandL_ex_vm</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Enter to Command_R</name>
          <identifier>remap.enter2commandR</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::COMMAND_R</autogen>
        </item>
        <item>
          <name>Enter to Control_L</name>
          <identifier>remap.enter2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Enter to Control_L (only in virtual machine, RDC)</name>
          <identifier>remap.enter2controlL_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Enter to Control_R</name>
          <identifier>remap.enter2controlR</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Enter to Fn</name>
          <identifier>remap.enter2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Enter to Option_L</name>
          <identifier>remap.enter2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Enter to Option_L</name>
          <appendix>(+ When you type Enter only, send Command+Space)</appendix>
          <identifier>remap.enter2optionL_commandSpace</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::ENTER, KeyCode::OPTION_L, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Enter to Option_R</name>
          <identifier>remap.enter2optionR</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Enter to Option_R</name>
          <appendix>(+ When you type Enter only, send Command+Space)</appendix>
          <identifier>remap.enter2optionR_commandSpace</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::ENTER, KeyCode::OPTION_R, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Enter to Command_L+Control_L</name>
          <identifier>remap.enter2commandLcontrolL</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::COMMAND_L, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Enter to Command_L+Shift_L</name>
          <identifier>remap.enter2commandLshiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Enter to Control_L+Option_L</name>
          <identifier>remap.enter2controlLoptionL</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_L, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Enter to Delete</name>
          <identifier>remap.enter2delete</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Enter to End</name>
          <identifier>remap.enter2end</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::END</autogen>
        </item>
        <item>
          <name>Enter to End (only in virtual machine, RDC)</name>
          <identifier>remap.enter2end_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::END</autogen>
        </item>
        <item>
          <name>Enter to Forward Delete</name>
          <identifier>remap.enter2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Enter to Left-Arrow</name>
          <identifier>remap.enter2leftarrow</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CURSOR_LEFT</autogen>
        </item>
        <item>
          <name>Enter to Return</name>
          <identifier>remap.enter2return</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Enter to Command_L+Right-Arrow (end-of-line)</name>
          <identifier>remap.enter2commandLrightarrow_all</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Enter to Command_L+Right-Arrow (end-of-line)</name>
          <appendix>(+ Control+Enter to Command_L+Down-Arrow) (end-of-buffer)</appendix>
          <appendix>(Except in Virtual Machine, RDC)</appendix>
          <identifier>remap.enter2fnrightarrow</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::ENTER, VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::ENTER,             KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Enter to Right-Arrow</name>
          <identifier>remap.enter2rightarrow</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Enter to Semicolon</name>
          <identifier>remap.enter2semicolon</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::SEMICOLON</autogen>
        </item>
        <item>
          <name>Enter to Space</name>
          <identifier>remap.enter2space</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Enter to Tab</name>
          <identifier>remap.enter2tab</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Enter to Up-Arrow</name>
          <identifier>remap.enter2uparrow</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CURSOR_UP</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Escape Key</name>
      <list>
        <item>
          <name>Escape to CapsLock</name>
          <identifier>remap.escape2capslock</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Shift+Escape to CapsLock</name>
          <identifier>remap.shiftEscape2capslock</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, VK_SHIFT, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Escape to Command_L</name>
          <identifier>remap.escape2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Escape to Command_R Lock</name>
          <identifier>remap.escape2commandR_lock</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::VK_LOCK_COMMAND_R</autogen>
        </item>
        <item>
          <name>Escape to Option_L</name>
          <identifier>remap.escape2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Escape to Backquote(`)</name>
          <identifier>remap.escape2backquote</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Escape to Eject</name>
          <identifier>remap.escape2eject</identifier>
          <autogen>--KeyToConsumer-- KeyCode::ESCAPE, ConsumerKeyCode::EJECT</autogen>
        </item>
        <item>
          <name>Control+Escape to Control_L+F3</name>
          <identifier>remap.escape2controlLf3</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, VK_CONTROL | ModifierFlag::NONE, KeyCode::F3, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Fn+Escape to Power</name>
          <identifier>remap.fnEscape2power</identifier>
          <autogen>--KeyToConsumer-- KeyCode::ESCAPE, ModifierFlag::FN, ConsumerKeyCode::POWER</autogen>
        </item>
        <item>
          <name>Shift+Escape to Tilde(~)</name>
          <identifier>remap.shiftEscape2tilde</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Escape to RightClick</name>
          <identifier>remap.escape2rightclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::ESCAPE, PointingButton::RIGHT</autogen>
        </item>
        <item>
          <name>Disable Escape</name>
          <identifier>remap.drop_escape</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::VK_NONE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Expose Key</name>
      <list>
        <item>
          <name>ExposeAll to CapsLock</name>
          <identifier>remap.expose2capslock</identifier>
          <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>ExposeAll to Shift_L</name>
          <identifier>remap.expose2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>ExposeAll to CapsLock or Shift_L</name>
          <appendix>(ExposeAll to Shift_L on the MacBook's internal keyboard (vid/pid: 0x05ac,0x0218)</appendix>
          <appendix>(ExposeAll to CapsLock on other devices)</appendix>
          <identifier>remap.expose2capslockORshiftL</identifier>
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_only>
            <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, KeyCode::SHIFT_L</autogen>
          </block>
          <block>
            <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0218</device_not>
            <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, KeyCode::CAPSLOCK</autogen>
          </block>
        </item>
      </list>
    </item>

    <item>
      <name>Change Fn Key</name>
      <list>
        <item>
          <name>Fn to Command_L</name>
          <identifier>remap.fn2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Fn to Command_L (except virtual machine, RDC)</name>
          <appendix>(+ Fn to Control_L (only in virtual machine, RDC))</appendix>
          <identifier>remap.fn2commandL_fn2controlL_vm</identifier>
          <block>
            <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
            <autogen>--KeyToKey-- KeyCode::FN, KeyCode::COMMAND_L</autogen>
          </block>
          <block>
            <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
            <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
          </block>
        </item>
        <item>
          <name>Fn to Control_L</name>
          <identifier>remap.fn2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Fn to Control_L (only in virtual machine, RDC)</name>
          <identifier>remap.fn2controlL_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Fn to Control_L</name>
          <appendix>(+ Command_R+Fn to Fn)</appendix>
          <identifier>remap.fn2controlL_commandR2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, ModifierFlag::COMMAND_R, KeyCode::FN</autogen>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Fn to Control_L</name>
          <appendix>(+ Option_L+Fn to Fn)</appendix>
          <identifier>remap.fn2controlL_optionL2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, ModifierFlag::OPTION_L, KeyCode::FN</autogen>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Fn to Control_R</name>
          <identifier>remap.fn2controlR</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Fn to Fn</name>
          <appendix>(+ When you type Fn only, send Fn_Lock)</appendix>
          <identifier>remap.fn2fn_fnlock</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::FN, KeyCode::FN, KeyCode::VK_LOCK_FN</autogen>
        </item>
        <item>
          <name>Fn to Fn_Lock</name>
          <identifier>remap.fn2fnlock</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::VK_LOCK_FN</autogen>
        </item>
        <item>
          <name>Fn to Option_L</name>
          <identifier>remap.fn2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Fn to Option_L</name>
          <appendix>(only in Illustrator, Photoshop, Cheetah3D)</appendix>
          <appendix>(retain Fn+F1...Fn+F12)</appendix>
          <identifier>remap.fn2optionL_illphoche</identifier>
          <only>ILLUSTRATOR, PHOTOSHOP, CHEETAH_3D</only>
          <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_DOWN,                      ModifierFlag::OPTION_L, KeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_UP,                        ModifierFlag::OPTION_L, KeyCode::BRIGHTNESS_UP</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::BRIGHTNESS_DOWN,    ModifierFlag::OPTION_L, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::BRIGHTNESS_UP,      ModifierFlag::OPTION_L, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL,                           ModifierFlag::OPTION_L, KeyCode::EXPOSE_ALL</autogen>
          <autogen>--KeyToKey-- KeyCode::DASHBOARD,                            ModifierFlag::OPTION_L, KeyCode::DASHBOARD</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_LOW,  ModifierFlag::OPTION_L, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ModifierFlag::OPTION_L, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_PREV,         ModifierFlag::OPTION_L, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_PLAY,         ModifierFlag::OPTION_L, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_NEXT,         ModifierFlag::OPTION_L, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_MUTE,        ModifierFlag::OPTION_L, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_DOWN,        ModifierFlag::OPTION_L, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_UP,          ModifierFlag::OPTION_L, ConsumerKeyCode::VOLUME_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Fn to Control_L+Option_L</name>
          <identifier>remap.fn2controlLoptionL</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::OPTION_L, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Fn to Shift_L</name>
          <identifier>remap.fn2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Fn to Delete</name>
          <identifier>remap.fn2delete</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Fn to Enter</name>
          <identifier>remap.fn2enter</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Fn to Eject</name>
          <identifier>remap.fn2eject</identifier>
          <autogen>--KeyToConsumer-- KeyCode::FN, ConsumerKeyCode::EJECT</autogen>
        </item>
        <item>
          <name>Fn to Forward Delete</name>
          <identifier>remap.fn2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Fn to F14</name>
          <identifier>remap.fn2f14</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::F14</autogen>
        </item>
        <item>
          <name>Fn to Help</name>
          <identifier>remap.fn2help</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::HELP</autogen>
        </item>
        <item>
          <name>Fn to Tab</name>
          <identifier>remap.fn2tab</identifier>
          <autogen>--KeyToKey-- KeyCode::FN, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Fn to LeftClick</name>
          <identifier>remap.fn2leftclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::FN, PointingButton::LEFT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Forward Delete Key</name>
      <list>
        <item>
          <name>Forward Delete to Delete</name>
          <identifier>remap.forwarddelete2delete</identifier>
          <autogen>--KeyToKey-- FROMKEYCODE_FORWARD_DELETE, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Command+Forward Delete to Option_L+Forward Delete</name>
          <identifier>remap.commandForwardDelete2optionLforwarddelete</identifier>
          <autogen>--KeyToKey-- FROMKEYCODE_FORWARD_DELETE, VK_COMMAND, KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Control+Forward Delete to Command_L+Forward Delete</name>
          <identifier>remap.controlForwardDelete2commandLforwarddelete</identifier>
          <autogen>--KeyToKey-- FROMKEYCODE_FORWARD_DELETE, VK_CONTROL, KeyCode::FORWARD_DELETE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option+Forward Delete to Command_L+Forward Delete</name>
          <identifier>remap.optionForwardDelete2commandLforwarddelete</identifier>
          <autogen>--KeyToKey-- FROMKEYCODE_FORWARD_DELETE, VK_OPTION, KeyCode::FORWARD_DELETE, ModifierFlag::COMMAND_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Functional Key (Brightness, Volume, ....)</name>
      <list>
        <item>
          <name>Functional Keys to F1..F12</name>
          <appendix>Brightness Down to F1</appendix>
          <appendix>Brightness Up to F2</appendix>
          <appendix>Expose to F3</appendix>
          <appendix>Dashboard to F4</appendix>
          <appendix>Keyboard Light LOW to F5</appendix>
          <appendix>Keyboard Light HIGH to F6</appendix>
          <appendix>Music Prev to F7</appendix>
          <appendix>Music Play/Pause to F8</appendix>
          <appendix>Music Next to F9</appendix>
          <appendix>Volume Mute to F10</appendix>
          <appendix>Volume Down to F11</appendix>
          <appendix>Volume Up to F12</appendix>
          <identifier>remap.functional2fn_2008</identifier>
          <!-- F1 -->
          <autogen>--ConsumerToKey-- ConsumerKeyCode::BRIGHTNESS_DOWN,    KeyCode::F1</autogen>
          <autogen>--KeyToKey--      KeyCode::BRIGHTNESS_DOWN,            KeyCode::F1</autogen>
          <!-- F2 -->
          <autogen>--ConsumerToKey-- ConsumerKeyCode::BRIGHTNESS_UP,      KeyCode::F2</autogen>
          <autogen>--KeyToKey--      KeyCode::BRIGHTNESS_UP,              KeyCode::F2</autogen>
          <!-- F3 - F12 -->
          <autogen>--KeyToKey--      KeyCode::EXPOSE_ALL,                 KeyCode::F3</autogen>
          <autogen>--KeyToKey--      KeyCode::DASHBOARD,                  KeyCode::F4</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::KEYBOARDLIGHT_LOW,  KeyCode::F5</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::F6</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_PREV,         KeyCode::F7</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_PLAY,         KeyCode::F8</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_NEXT,         KeyCode::F9</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_MUTE,        KeyCode::F10</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_DOWN,        KeyCode::F11</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_UP,          KeyCode::F12</autogen>
        </item>
        <item>
          <name>MacBookAir3,1 (MacBook Air Late 2010) to Previous Model</name>
          <appendix>Music Prev(F6) to F6</appendix>
          <appendix>Music Play(F7) to Music Prev</appendix>
          <appendix>Music Next(F8) to Music Play</appendix>
          <appendix>Volume Mute(F9) to Music Next</appendix>
          <appendix>Volume Down(F10) to Volume Mute</appendix>
          <appendix>Volume Up(F11) to Volume Down</appendix>
          <appendix>Eject(F12) to Volume Up</appendix>
          <appendix></appendix>
          <appendix>*** We recommend to use "NoEjectDelay" together when you change eject key.</appendix>
          <appendix>*** &#8594; http://pqrs.org/macosx/keyremap4macbook/noejectdelay.html</appendix>
          <identifier>remap.functional2fn_air3_1_to_previous</identifier>
          <autogen>--ConsumerToKey--      ConsumerKeyCode::MUSIC_PREV,  KeyCode::F6</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_PLAY,  ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_NEXT,  ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_MUTE, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_DOWN, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_UP,   ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::EJECT,       ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item>
          <name>Brightness Down to F1</name>
          <identifier>remap.brightnessdown2f1</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
          <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
        </item>
        <item>
          <name>Brightness Up to F2</name>
          <identifier>remap.brightnessup2f2</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
          <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
        </item>
        <item>
          <name>Expose to F3</name>
          <identifier>remap.expose2f3</identifier>
          <autogen>--KeyToKey--      KeyCode::EXPOSE_ALL,                 KeyCode::F3</autogen>
        </item>
        <item>
          <name>Dashboard to F4</name>
          <identifier>remap.dashboard2f4</identifier>
          <autogen>--KeyToKey--      KeyCode::DASHBOARD,                  KeyCode::F4</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Volume Mute to F3</name>
          <identifier>remap.volumemute2f3</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_MUTE, KeyCode::F3</autogen>
        </item>
        <item>
          <name>Volume Down to F4</name>
          <identifier>remap.volumedown2f4</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_DOWN, KeyCode::F4</autogen>
        </item>
        <item>
          <name>Volume Up to F5</name>
          <identifier>remap.volumeup2f5</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_UP, KeyCode::F5</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Volume Mute to F4</name>
          <identifier>remap.volumemute2f4</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_MUTE, KeyCode::F4</autogen>
        </item>
        <item>
          <name>Volume Down to F5</name>
          <identifier>remap.volumedown2f5</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_DOWN, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Volume Up to F6</name>
          <identifier>remap.volumeup2f6</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_UP, KeyCode::F6</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Volume Mute to F10</name>
          <identifier>remap.volumemute2f10</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::FN, KeyCode::F10</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_MUTE,                   KeyCode::F10</autogen>
        </item>
        <item>
          <name>Volume Down to F11</name>
          <identifier>remap.volumedown2f11</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::FN, KeyCode::F11</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_DOWN,                   KeyCode::F11</autogen>
        </item>
        <item>
          <name>Volume Up to F12</name>
          <identifier>remap.volumeup2f12</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_UP, ModifierFlag::FN, KeyCode::F12</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_UP,                   KeyCode::F12</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>NumLock to F6</name>
          <identifier>remap.numlock2f6</identifier>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::NUMLOCK, KeyCode::F6</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>NumLock to Music Prev</name>
          <identifier>remap.numlock2musicprev</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::NUMLOCK, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Video Mirroring to Music Play/Pause</name>
          <identifier>remap.videomirror2musicplay</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VIDEO_MIRROR, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Keyboard Light Off to Music Next</name>
          <identifier>remap.keyboardlightoff2musicnext</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_OFF, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Video Mirroring to Music Prev</name>
          <identifier>remap.videomirror2musicprev</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VIDEO_MIRROR, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Keyboard Light Off to Music Play/Pause</name>
          <identifier>remap.keyboardlightoff2musicplay</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_OFF, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Keyboard Light Low to Music Next</name>
          <identifier>remap.keyboardlightlow2musicnext</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_LOW, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Keyboard Light Off to Music Prev</name>
          <identifier>remap.keyboardlightoff2musicprev</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_OFF, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Keyboard Light Low to Music Play/Pause</name>
          <identifier>remap.keyboardlightlow2musicplay</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_LOW, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Keyboard Light High to Music Next</name>
          <identifier>remap.keyboardlighthigh2musicnext</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Keyboard Light High to Volume Mute</name>
          <identifier>remap.keyboardlighthigh2volumemute</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_HIGH, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>Volume Mute/Down/Up without click</name>
          <identifier>remap.voldownup_to_voldownup_woclick</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_MUTE,                    ModifierFlag::NONE, ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::FN | ModifierFlag::NONE, ConsumerKeyCode::VOLUME_MUTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_DOWN,                    ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::FN | ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_UP,                      ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_UP,   ModifierFlag::FN | ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command+Functional to Functional</name>
          <appendix>(ex. Command+Volume Mute to Volume Mute</appendix>
          <identifier>remap.command_functional_to_functional</identifier>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::BRIGHTNESS_DOWN, VK_COMMAND, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_DOWN, VK_COMMAND, KeyCode::BRIGHTNESS_DOWN</autogen>

          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::BRIGHTNESS_UP, VK_COMMAND, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_UP, VK_COMMAND, KeyCode::BRIGHTNESS_UP</autogen>

          <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, VK_COMMAND, KeyCode::EXPOSE_ALL</autogen>
          <autogen>--KeyToKey-- KeyCode::DASHBOARD, VK_COMMAND, KeyCode::DASHBOARD</autogen>

          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_PREV, VK_COMMAND, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_PLAY, VK_COMMAND, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_NEXT, VK_COMMAND, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_MUTE, VK_COMMAND, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_DOWN, VK_COMMAND, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_UP, VK_COMMAND, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item>
          <name>Change Power Key</name>
          <list>
            <item>
              <name>Power to Command_L</name>
              <identifier>remap.power2commandL</identifier>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::POWER, KeyCode::COMMAND_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Change F1..F19 Key</name>
      <list>
        <item>
          <name>F1..F12 to Functional</name>
          <!-- #include "include/appendix_f1_f12_to_functional.xml" -->
          <!-- #include "include/caution_functionkey.xml" -->
          <identifier>remap.f1_f12_to_functional_all</identifier>
          <!-- #include "include/fnF1_F12_to_function.xml" -->
          <!-- #include "include/f1_f12_to_functional.xml" -->
        </item>
        <item>
          <name>F5,F6 to Functional</name>
          <!-- #include "include/appendix_f5_f6_to_functional.xml" -->
          <!-- #include "include/caution_functionkey.xml" -->
          <identifier>remap.f5_f6_to_functional_all</identifier>
          <!-- #include "include/fnF5_F6_to_function.xml" -->
          <!-- #include "include/f5_f6_to_functional.xml" -->
        </item>

        <item>
          <name>F1..F12 to Functional (except virtual machine, RDC)</name>
          <!-- #include "include/appendix_f1_f12_to_functional.xml" -->
          <!-- #include "include/caution_functionkey.xml" -->
          <identifier>remap.f1_f12_to_functional_ex_vm</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <!-- #include "include/fnF1_F12_to_function.xml" -->
          <!-- #include "include/f1_f12_to_functional.xml" -->
        </item>
        <item>
          <name>F5,F6 to Functional (except virtual machine, RDC)</name>
          <!-- #include "include/appendix_f5_f6_to_functional.xml" -->
          <!-- #include "include/caution_functionkey.xml" -->
          <identifier>remap.f5_f6_to_functional_ex_vm</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <!-- #include "include/fnF5_F6_to_function.xml" -->
          <!-- #include "include/f5_f6_to_functional.xml" -->
        </item>

        <item>
          <name>Fn+F1..F12 to Functional</name>
          <appendix>There is this setting for "* to Fn". (ex: Control_L to Fn)</appendix>
          <appendix></appendix>
          <appendix>Fn+F1 to Brightness Down</appendix>
          <appendix>Fn+F2 to Brightness Up</appendix>
          <appendix>Fn+F3 to Expose</appendix>
          <appendix>Fn+F4 to Dashboard</appendix>
          <appendix>Fn+F5 to Keyboard Light LOW</appendix>
          <appendix>Fn+F6 to Keyboard Light HIGH</appendix>
          <appendix>Fn+F7 to Music Prev</appendix>
          <appendix>Fn+F8 to Music Play/Pause</appendix>
          <appendix>Fn+F9 to Music Next</appendix>
          <appendix>Fn+F10 to Volume Mute</appendix>
          <appendix>Fn+F11 to Volume Down</appendix>
          <appendix>Fn+F12 to Volume Up</appendix>
          <!-- #include "include/caution_functionkey.xml" -->
          <identifier>remap.fnF1_F12_to_functional</identifier>
          <!-- #include "include/f1_f12_to_functional_withfn.xml" -->
        </item>

        <item>
          <name>MacBookPro4,1 functional to MacBookPro3,1 functional</name>
          <appendix></appendix>
          <appendix>Fn+F1 to Brightness Down</appendix>
          <appendix>Fn+F2 to Brightness Up</appendix>
          <appendix>Fn+F3 to Volume Mute</appendix>
          <appendix>Fn+F4 to Volume Down</appendix>
          <appendix>Fn+F5 to Volume Up</appendix>
          <appendix>Fn+F6 to NumLock</appendix>
          <appendix>Fn+F7 to Video Mirror</appendix>
          <appendix>Fn+F8 to Keyboard Light OFF</appendix>
          <appendix>Fn+F9 to Keyboard Light LOW</appendix>
          <appendix>Fn+F10 to Keyboard Light HIGH</appendix>
          <appendix>Fn+F11 to F11</appendix>
          <appendix>Fn+F12 to F12</appendix>
          <!-- #include "include/caution_functionkey.xml" -->
          <identifier>remap.fnF1_F12_to_functional_mbp31</identifier>
          <autogen>--KeyToConsumer--      KeyCode::EXPOSE_ALL, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>--KeyToConsumer--      KeyCode::DASHBOARD,  ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::KEYBOARDLIGHT_LOW,  ConsumerKeyCode::VOLUME_UP</autogen>
          <autogen>--ConsumerToKey--      ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::VK_LOCK_FN</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_PREV, ConsumerKeyCode::VIDEO_MIRROR</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_PLAY, ConsumerKeyCode::KEYBOARDLIGHT_OFF</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::MUSIC_NEXT, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
          <autogen>--ConsumerToConsumer-- ConsumerKeyCode::VOLUME_MUTE, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
          <autogen>--ConsumerToKey--      ConsumerKeyCode::VOLUME_DOWN, KeyCode::F11</autogen>
          <autogen>--ConsumerToKey--      ConsumerKeyCode::VOLUME_UP,   KeyCode::F12</autogen>
        </item>

        <item>
          <name>F1 to Brightness Down (except virtual machine, RDC)</name>
          <identifier>remap.f1_to_brightnessdown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
        </item>
        <item>
          <name>F2 to Brightness Up (except virtual machine, RDC)</name>
          <identifier>remap.f2_to_brightnessup</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F3 to Volume Mute (except virtual machine, RDC)</name>
          <identifier>remap.f3_to_volumemute</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F3, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F4 to Volume Down (except virtual machine, RDC)</name>
          <identifier>remap.f4_to_volumedown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F4, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F5 to Volume Up (except virtual machine, RDC)</name>
          <identifier>remap.f5_to_volumeup</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F5, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F4 to Volume Mute</name>
          <identifier>remap.f4_to_volumemute</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F4, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F5 to Volume Down</name>
          <identifier>remap.f5_to_volumedown</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F5, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F6 to Volume Up</name>
          <identifier>remap.f6_to_volumeup</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F6, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F5/F6 to Volume Up/Down 1/4</name>
          <identifier>remap.f5f6_to_volumedownup_quarter</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F5, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F6, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>F5/F6 to Volume Down/Up without click</name>
          <identifier>remap.f5f6_to_voldownup_woclick</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F5, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_DOWN, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F6, ModifierFlag::NONE, ConsumerKeyCode::VOLUME_UP, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F6 to Virtual NumLock</name>
          <appendix>Unlike Fn_Lock, retaining cursor keys, delete key.</appendix>
          <list>
            <item>
              <name>Virtual NumLock</name>
              <appendix>6 7 8 9 0 - &#8594; Clear 7 8 9 / =</appendix>
              <appendix>U I O P &#8594; 4 5 6 *</appendix>
              <appendix>J K L ; &#8594; 1 2 3 -</appendix>
              <appendix>M . / &#8594; 0 . +</appendix>
              <identifier vk_config="true">notsave.virtual_numlock</identifier>
              <autogen>--ShowStatusMessage-- NumLock</autogen>
              <autogen>--KeyToKey-- KeyCode::M,         KeyCode::KEYPAD_0</autogen>
              <autogen>--KeyToKey-- KeyCode::J,         KeyCode::KEYPAD_1</autogen>
              <autogen>--KeyToKey-- KeyCode::K,         KeyCode::KEYPAD_2</autogen>
              <autogen>--KeyToKey-- KeyCode::L,         KeyCode::KEYPAD_3</autogen>
              <autogen>--KeyToKey-- KeyCode::U,         KeyCode::KEYPAD_4</autogen>
              <autogen>--KeyToKey-- KeyCode::I,         KeyCode::KEYPAD_5</autogen>
              <autogen>--KeyToKey-- KeyCode::O,         KeyCode::KEYPAD_6</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_7,     KeyCode::KEYPAD_7</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_8,     KeyCode::KEYPAD_8</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9,     KeyCode::KEYPAD_9</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_6,     KeyCode::KEYPAD_CLEAR</autogen>
              <autogen>--KeyToKey-- KeyCode::SLASH,     KeyCode::KEYPAD_PLUS</autogen>
              <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::KEYPAD_MINUS</autogen>
              <autogen>--KeyToKey-- KeyCode::P,         KeyCode::KEYPAD_MULTIPLY</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_0,     KeyCode::KEYPAD_SLASH</autogen>
              <autogen>--KeyToKey-- KeyCode::MINUS,     KeyCode::KEYPAD_EQUAL</autogen>
              <autogen>--KeyToKey-- KeyCode::DOT,       KeyCode::KEYPAD_DOT</autogen>
            </item>
            <item>
              <name>F6 to toggle "Virtual NumLock"</name>
              <identifier>remap.f6_to_virtual_numlock</identifier>
              <autogen>--KeyToKey-- KeyCode::F6, KeyCode::VK_CONFIG_TOGGLE_notsave_virtual_numlock</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>F6 to Fn_Lock (except virtual machine, RDC)</name>
          <identifier>remap.f6_to_numlock</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::F6, KeyCode::VK_LOCK_FN</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F7 to Video Mirror (except virtual machine, RDC)</name>
          <identifier>remap.f7_to_videomirror</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F7, ConsumerKeyCode::VIDEO_MIRROR</autogen>
        </item>
        <item>
          <name>F8 to Keyboard Light Off (except virtual machine, RDC)</name>
          <identifier>remap.f8_to_keyboardlightoff</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F8, ConsumerKeyCode::KEYBOARDLIGHT_OFF</autogen>
        </item>
        <item>
          <name>F9 to Keyboard Light LOW (except virtual machine, RDC)</name>
          <identifier>remap.f9_to_keyboardlightlow</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F9, ConsumerKeyCode::KEYBOARDLIGHT_LOW</autogen>
        </item>
        <item>
          <name>F10 to Keyboard Light HIGH (except virtual machine, RDC)</name>
          <identifier>remap.f10_to_keyboardlighthigh</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F10, ConsumerKeyCode::KEYBOARDLIGHT_HIGH</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F7 to Music Prev (except virtual machine, RDC)</name>
          <identifier>remap.f7_to_musicprev</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F7, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>F8 to Music Play/Pause (except virtual machine, RDC)</name>
          <identifier>remap.f8_to_musicplay</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F8, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>F9 to Music Next (except virtual machine, RDC)</name>
          <identifier>remap.f9_to_musicplay</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F9, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F8 to Music Prev</name>
          <identifier>remap.f8_to_musicprev_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F8, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>F9 to Music Play/Pause</name>
          <identifier>remap.f9_to_musicplay_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F9, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>F10 to Music Next</name>
          <identifier>remap.f10_to_musicnext_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F10, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F10 to Volume Mute</name>
          <identifier>remap.f10_to_volumemute_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F11 to Volume Down</name>
          <identifier>remap.f11_to_volumedown_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F12 to Volume Up</name>
          <identifier>remap.f12_to_volumeup_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F10 to Volume Mute (except virtual machine, RDC)</name>
          <identifier>remap.f10_to_volumemute</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F10, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F11 to Volume Down (except virtual machine, RDC)</name>
          <identifier>remap.f11_to_volumedown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F11, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F12 to Volume Up (except virtual machine, RDC)</name>
          <identifier>remap.f12_to_volumeup</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F12, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F13 to Volume Mute (except virtual machine, RDC)</name>
          <identifier>remap.f13_to_volumemute</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F13, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>F14 to Volume Down (except virtual machine, RDC)</name>
          <identifier>remap.f14_to_volumedown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F14, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>F15 to Volume Up (except virtual machine, RDC)</name>
          <identifier>remap.f15_to_volumeup</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToConsumer-- KeyCode::F15, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>F14 to Music Prev</name>
          <identifier>remap.f14_to_musicprev_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F14, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>F15 to Music Play/Pause</name>
          <identifier>remap.f15_to_musicplay_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F15, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>F16 to Music Next</name>
          <identifier>remap.f16_to_musicnext_all</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F16, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Fn+F11 to F11</name>
          <identifier>remap.FnF11_to_f11</identifier>
          <autogen>--KeyToKey-- KeyCode::F11, ModifierFlag::FN, KeyCode::F11</autogen>
        </item>
        <item>
          <name>Fn+F12 to F12</name>
          <identifier>remap.FnF12_to_f12</identifier>
          <autogen>--KeyToKey-- KeyCode::F12, ModifierFlag::FN, KeyCode::F12</autogen>
        </item>
        <item>
          <name>F11 to display mirroring</name>
          <identifier>remap.F11_to_mirroring</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F11, ConsumerKeyCode::VIDEO_MIRROR</autogen>
        </item>
        <item>
          <name>F12 to Forward Delete</name>
          <identifier>remap.f12_to_forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::F12, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>F12 to Expose</name>
          <identifier>remap.F12_to_expose</identifier>
          <autogen>--KeyToKey-- KeyCode::F12, KeyCode::EXPOSE_ALL</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Fn+F1 to Brightness Down</name>
          <identifier>remap.fnF1_to_brightnessdown</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F1, ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
        </item>
        <item>
          <name>Fn+F2 to Brightness Up</name>
          <identifier>remap.fnF2_to_brightnessup</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F2, ModifierFlag::FN, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Fn+F7 to Music Prev</name>
          <identifier>remap.fnF7_to_musicprev</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F7, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
        </item>
        <item>
          <name>Fn+F8 to Music Play/Pause</name>
          <identifier>remap.fnF8_to_musicplay</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F8, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
        </item>
        <item>
          <name>Fn+F9 to Music Next</name>
          <identifier>remap.fnF9_to_musicplay</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F9, ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Fn+F10 to Volume Mute</name>
          <identifier>remap.fnF10_to_volumemute</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F10, ModifierFlag::FN, ConsumerKeyCode::VOLUME_MUTE</autogen>
        </item>
        <item>
          <name>Fn+F11 to Volume Down</name>
          <identifier>remap.fnF11_to_volumedown</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F11, ModifierFlag::FN, ConsumerKeyCode::VOLUME_DOWN</autogen>
        </item>
        <item>
          <name>Fn+F12 to Volume Up</name>
          <identifier>remap.fnF12_to_volumeup</identifier>
          <autogen>--KeyToConsumer-- KeyCode::F12, ModifierFlag::FN, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Fn+F5 to PageDown</name>
          <identifier>remap.fnF5_to_pagedown</identifier>
          <autogen>--KeyToKey-- KeyCode::F5, ModifierFlag::FN, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Fn+F12 to PageUp</name>
          <identifier>remap.fnF12_to_pageup</identifier>
          <autogen>--KeyToKey-- KeyCode::F12, ModifierFlag::FN, KeyCode::PAGEUP</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Change Command+F1...F12 to Functional Keys</name>
          <appendix>(ex. F10 to Volume Mute, F11 to Volume Down)</appendix>
          <identifier>remap.command_f1_f12_to_functional</identifier>
          <autogen>--KeyToKey-- KeyCode::F1,       VK_COMMAND, KeyCode::BRIGHTNESS_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::F2,       VK_COMMAND, KeyCode::BRIGHTNESS_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::F3,       VK_COMMAND, KeyCode::EXPOSE_ALL</autogen>
          <autogen>--KeyToKey-- KeyCode::F4,       VK_COMMAND, KeyCode::DASHBOARD</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F7,  VK_COMMAND, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F8,  VK_COMMAND, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F9,  VK_COMMAND, ConsumerKeyCode::MUSIC_NEXT</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F10, VK_COMMAND, ConsumerKeyCode::VOLUME_MUTE</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F11, VK_COMMAND, ConsumerKeyCode::VOLUME_DOWN</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F12, VK_COMMAND, ConsumerKeyCode::VOLUME_UP</autogen>
        </item>

        <item>
          <name>Change F1...F12 to Functional Keys (except Terminal)</name>
          <appendix>(ex. F10 to Volume Mute, F11 to Volume Down)</appendix>
          <identifier>remap.f1_f12_to_functional</identifier>
          <not>TERMINAL</not>
          <!-- #include "include/f1_f12_to_functional_withfn.xml" -->
        </item>

        <item>
          <name>Force change F1..F12 in VMware, Parallels, RDC</name>
          <list>
            <item>
              <name>F1 to Brightness Down</name>
              <identifier>remap.f1_to_brightnessdown_force</identifier>
              <autogen>--KeyToConsumer-- KeyCode::F1, ConsumerKeyCode::BRIGHTNESS_DOWN</autogen>
            </item>
            <item>
              <name>F2 to Brightness Up</name>
              <identifier>remap.f2_to_brightnessup_force</identifier>
              <autogen>--KeyToConsumer-- KeyCode::F2, ConsumerKeyCode::BRIGHTNESS_UP</autogen>
            </item>
            <item>
              <name>F3 to Volume Mute</name>
              <identifier>remap.f3_to_volumemute_force</identifier>
              <autogen>--KeyToConsumer-- KeyCode::F3, ConsumerKeyCode::VOLUME_MUTE</autogen>
            </item>
            <item>
              <name>F4 to Volume Down</name>
              <identifier>remap.f4_to_volumedown_force</identifier>
              <autogen>--KeyToConsumer-- KeyCode::F4, ConsumerKeyCode::VOLUME_DOWN</autogen>
            </item>
            <item>
              <name>F5 to Volume Up</name>
              <identifier>remap.f5_to_volumeup_force</identifier>
              <autogen>--KeyToConsumer-- KeyCode::F5, ConsumerKeyCode::VOLUME_UP</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Control+F1 to F16</name>
          <identifier>remap.controlF1toF16</identifier>
          <autogen>--KeyToKey-- KeyCode::F1, VK_CONTROL, KeyCode::F16</autogen>
        </item>
        <item>
          <name>F11 to F4</name>
          <identifier>remap.f11_to_f4</identifier>
          <autogen>--KeyToKey-- KeyCode::F11, KeyCode::F4</autogen>
        </item>
        <item>
          <name>F16 to Tab</name>
          <identifier>remap.f16_to_tab</identifier>
          <autogen>--KeyToKey-- KeyCode::F16, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>F19 to Quote(')</name>
          <identifier>remap.f19_to_quote</identifier>
          <autogen>--KeyToKey-- KeyCode::F19, KeyCode::QUOTE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Help Key</name>
      <list>
        <item>
          <name>Change Help to Command_L</name>
          <identifier>remap.help2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::HELP, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Change Help to Control_L</name>
          <identifier>remap.help2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::HELP, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Change Help to Option_L</name>
          <identifier>remap.help2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::HELP, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Change Help to Shift_L</name>
          <identifier>remap.help2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::HELP, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Change Help to F13</name>
          <identifier>remap.help2f13</identifier>
          <autogen>--KeyToKey-- KeyCode::HELP, KeyCode::F13</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change KeyPad Key</name>
      <list>
        <item>
          <name>Change Clear Key</name>
          <list>
            <item>
              <name>Clear to Delete</name>
              <identifier>remap.clear2delete</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::DELETE</autogen>
            </item>
            <item>
              <name>Clear to Return</name>
              <identifier>remap.clear2return</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::RETURN</autogen>
            </item>
            <item>
              <name>Clear to Tab</name>
              <identifier>remap.clear2tab</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::TAB</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Comma(,) Key</name>
          <list>
            <item>
              <name>Comma to Shift+Comma</name>
              <identifier>remap.keypadcomma2shiftComma</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_COMMA, KeyCode::KEYPAD_COMMA, ModifierFlag::SHIFT_L</autogen>
            </item>
            <item>
              <name>Comma to Equal</name>
              <identifier>remap.keypadcomma2keypadequal</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_COMMA, KeyCode::KEYPAD_EQUAL</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Dot(.) Key</name>
          <list>
            <item>
              <name>Dot(.) to Comma(,)</name>
              <identifier>remap.keypaddot2comma</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, KeyCode::KEYPAD_COMMA</autogen>
            </item>
            <item>
              <name>Fn+Dot to Fn+Shift+Dot</name>
              <appendix>(Useful for some keyboard layouts such as French, Italian, etc.)</appendix>
              <identifier>remap.fndot2fnshiftdot</identifier>
              <autogen>--KeyToKey-- KeyCode::DOT,        ModifierFlag::FN, KeyCode::DOT, ModifierFlag::FN | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, ModifierFlag::FN, KeyCode::DOT, ModifierFlag::FN | ModifierFlag::SHIFT_L</autogen>
            </item>
            <item>
              <name>Shift+Dot(.) to Comma</name>
              <identifier>remap.shift_keypad_dot2comma</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, VK_SHIFT, KeyCode::KEYPAD_COMMA</autogen>
            </item>
            <item>
              <name>Control+Dot(.) to Command+X (Cut)</name>
              <identifier>remap.controlDot2commandX</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Keypad_0 to Shift_L</name>
          <appendix>(+ When you type Keypad_0 only, send Keypad_0) + [KeyRepeat]</appendix>
          <identifier>remap.keypad0_2_shiftL_keypad0_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::KEYPAD_0, KeyCode::SHIFT_L, KeyCode::KEYPAD_0</autogen>
        </item>
        <item>
          <name>Control+Keypad_0 to Command+C (Copy)</name>
          <identifier>remap.controlkeypad0_to_commandC</identifier>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_0, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Shift+Keypad_0 to Command+V (Paste)</name>
          <identifier>remap.shiftkeypad0_to_commandV</identifier>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_0, VK_SHIFT, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+Keypad_1 to Command+Down Arrow</name>
          <identifier>remap.controlkeypad1_to_commandDown</identifier>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_1, VK_CONTROL, KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+Keypad_7 to Command+Up Arrow</name>
          <identifier>remap.controlkeypad7_to_commandUp</identifier>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_7, VK_CONTROL, KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Shift+Enter to Equal</name>
          <identifier>remap.shift_enter2equal</identifier>
          <autogen>--KeyToKey-- KeyCode::ENTER, VK_SHIFT, KeyCode::KEYPAD_EQUAL</autogen>
        </item>
        <item>
          <name>Logitech N305 hack / FILCO FKBT22MB hack</name>
          <appendix>(Enable equal, parentheses)</appendix>
          <appendix>(Disable NumLock key)</appendix>
          <identifier>remap.logitech_n305_hack</identifier>
          <!--
              ============================================================
              [Device Information]

              The following is the output for the number one key:
              *** An unnecessary Clear key is output ***
              eventType:keyDown code:0x47 name:Clear    flags:Fn         misc:
              eventType:keyUp   code:0x47 name:Clear    flags:Fn         misc:
              eventType:keyDown code:0x53 name:1        flags:NumPad     misc:
              eventType:keyUp   code:0x53 name:1        flags:NumPad     misc:
              eventType:keyDown code:0x47 name:Clear    flags:Fn         misc:
              eventType:keyUp   code:0x47 name:Clear    flags:Fn         misc:

              Equal Symbol:
              eventType:keyMod  code:0x3a name:Option_L flags:Opt        misc:
              eventType:keyDown code:0x58 name:6        flags:Opt NumPad misc:
              eventType:keyDown code:0x53 name:1        flags:Opt NumPad misc:
              eventType:keyUp   code:0x58 name:6        flags:Opt NumPad misc:
              eventType:keyUp   code:0x53 name:1        flags:Opt NumPad misc:
              eventType:keyMod  code:0x3a name:Option_L flags:           misc:

              Left Parenthesis:
              eventType:keyMod  code:0x3a name:Option_L flags:Opt        misc:
              eventType:keyDown code:0x56 name:4        flags:Opt NumPad misc:
              eventType:keyUp   code:0x56 name:4        flags:Opt NumPad misc:
              eventType:keyDown code:0x52 name:0        flags:Opt NumPad misc:
              eventType:keyUp   code:0x52 name:0        flags:Opt NumPad misc:
              eventType:keyMod  code:0x3a name:Option_L flags:           misc:

              Right Parenthesis:
              eventType:keyMod  code:0x3a name:Option_L flags:Opt        misc:
              eventType:keyDown code:0x56 name:4        flags:Opt NumPad misc:
              eventType:keyDown code:0x53 name:1        flags:Opt NumPad misc:
              eventType:keyUp   code:0x56 name:4        flags:Opt NumPad misc:
              eventType:keyUp   code:0x53 name:1        flags:Opt NumPad misc:
              eventType:keyMod  code:0x3a name:Option_L flags:           misc:

              ============================================================
              [Our approach]

              We use sticky modifiers to achieve equal, parentheses.

              Option_L+6 to EXTRA1.
              - EXTRA1+1 to Equal

              Option_L+4 to EXTRA2.
              -EXTRA2+0 to Left Parenthesis
              -EXTRA2+1 to Right Parenthesis

              Option_L+1 to EXTRA3.
              - EXTRA3+6 to Equal
              - EXTRA3+4 to Right Parenthesis

              Option_L+0 to EXTRA4.
              - EXTRA4+4 to Left Parenthesis

            -->
          <!-- to Equal -->
          <autogen>--KeyToKey-- KeyCode::KEYPAD_1, ModifierFlag::EXTRA1 | ModifierFlag::OPTION_L, KeyCode::KEYPAD_EQUAL</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_1, ModifierFlag::EXTRA1,                          KeyCode::KEYPAD_EQUAL</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_6, ModifierFlag::EXTRA3 | ModifierFlag::OPTION_L, KeyCode::KEYPAD_EQUAL</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_6, ModifierFlag::EXTRA3,                          KeyCode::KEYPAD_EQUAL</autogen>

          <!-- to Left Parenthesis -->
          <autogen>--KeyToKey-- KeyCode::KEYPAD_0, ModifierFlag::EXTRA2 | ModifierFlag::OPTION_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_0, ModifierFlag::EXTRA2,                          KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_4, ModifierFlag::EXTRA4 | ModifierFlag::OPTION_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_4, ModifierFlag::EXTRA4,                          KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>

          <!-- to Right Parenthesis -->
          <autogen>--KeyToKey-- KeyCode::KEYPAD_1, ModifierFlag::EXTRA2 | ModifierFlag::OPTION_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_1, ModifierFlag::EXTRA2,                          KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_4, ModifierFlag::EXTRA3 | ModifierFlag::OPTION_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_4, ModifierFlag::EXTRA3,                          KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>

          <!-- to Sticky Modifier -->
          <autogen>--KeyToKey-- KeyCode::KEYPAD_6, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::VK_STICKY_EXTRA1</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_4, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::VK_STICKY_EXTRA2</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_1, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::VK_STICKY_EXTRA3</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_0, ModifierFlag::OPTION_L | ModifierFlag::NONE, KeyCode::VK_STICKY_EXTRA4</autogen>

          <!-- ================================================== -->
          <!-- Disable unnecessary Clear -->
          <autogen>--KeyToKey-- KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::VK_NONE</autogen>
        </item>
        <item>
          <name>Use KeyPad as MS Project Build Keys</name>
          <appendix>Maps some of the keypad keys to standard debugger step thru cmds for Visual Studio</appendix>
          <list>
            <item>
              <name>Change Keypad Enter Key to F5 (Run)</name>
              <identifier>remap.KPEnter_to_F5</identifier>
              <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::F5</autogen>
            </item>
            <item>
              <name>Change Keypad Dot(Del) Key to Shift+F5 (Stop)</name>
              <identifier>remap.KPDot_to_Shift_F5</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, KeyCode::F5, ModifierFlag::SHIFT_L</autogen>
            </item>
            <item>
              <name>Change Keypad 0 to F11 (Step in)</name>
              <identifier>remap.KP0_to_F11</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_0, KeyCode::F11</autogen>
            </item>
            <item>
              <name>Change Keypad 1 to Shift+F11/Step out (this is intentionally the key above F11)</name>
              <identifier>remap.KP1_to_Shift_F11</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, KeyCode::F11, ModifierFlag::SHIFT_L</autogen>
            </item>
            <item>
              <name>Change Keypad 2 to F10 (Step over)</name>
              <identifier>remap.KP2_to_F10</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, KeyCode::F10</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Change Left Bracket([) Key</name>
      <list>
        <item>
          <name>Left Bracket([) to L</name>
          <identifier>remap.leftbracket2l</identifier>
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, KeyCode::L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Media Keys (Play/Pause, Prev, Next)</name>
      <list>
        <item>
          <name>Media Keys to F7..F9</name>
          <appendix>Music Prev to F7</appendix>
          <appendix>Music Play/Pause to F8</appendix>
          <appendix>Music Next to F9</appendix>
          <identifier>remap.mediaKeysToFKeys</identifier>
          <!-- F7 - F9 -->
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_PREV,         KeyCode::F7</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_PLAY,         KeyCode::F8</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_NEXT,         KeyCode::F9</autogen>
        </item>
        <item>
          <name>Media Keys to F6..F8</name>
          <appendix>Music Prev to F6</appendix>
          <appendix>Music Play/Pause to F7</appendix>
          <appendix>Music Next to F8</appendix>
          <identifier>remap.mediaKeysToFKeys_f6f8</identifier>
          <!-- F6 - F8 -->
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_PREV, KeyCode::F6</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_PLAY, KeyCode::F7</autogen>
          <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_NEXT, KeyCode::F8</autogen>
        </item>
        <item>
          <name>Fn+Function Keys to Media Keys</name>
          <appendix>Fn+F7 to Music Prev</appendix>
          <appendix>Fn+F8 to Music Play/Pause</appendix>
          <appendix>Fn+F9 to Music Next</appendix>
          <identifier>remap.FNFkeysToMediaKeys</identifier>
          <!-- F7 - F9 -->
          <autogen>--KeyToConsumer-- KeyCode::F7, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F8, ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
          <autogen>--KeyToConsumer-- KeyCode::F9, ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Minus Key</name>
      <list>
        <item>
          <name>Change Minus to Semicolon</name>
          <identifier>remap.minus2semicolon</identifier>
          <autogen>--KeyToKey-- KeyCode::MINUS, KeyCode::SEMICOLON</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Num Key (1...0)</name>
      <list>
        <item>
          <name>Holding Shift+1 to F1</name>
          <identifier>remap.holding_shiftL1_to_f1</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_1, VK_SHIFT, KeyCode::KEY_1, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F1</autogen>
        </item>
        <item>
          <name>Holding Shift+2 to F2</name>
          <identifier>remap.holding_shiftL2_to_f2</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_2, VK_SHIFT, KeyCode::KEY_2, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F2</autogen>
        </item>
        <item>
          <name>Holding Shift+3 to F3</name>
          <identifier>remap.holding_shiftL3_to_f3</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_3, VK_SHIFT, KeyCode::KEY_3, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F3</autogen>
        </item>
        <item>
          <name>Holding Shift+4 to F4</name>
          <identifier>remap.holding_shiftL4_to_f4</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_4, VK_SHIFT, KeyCode::KEY_4, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F4</autogen>
        </item>
        <item>
          <name>Holding Shift+5 to F5</name>
          <identifier>remap.holding_shiftL5_to_f5</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_5, VK_SHIFT, KeyCode::KEY_5, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Holding Shift+6 to F6</name>
          <identifier>remap.holding_shiftL6_to_f6</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_6, VK_SHIFT, KeyCode::KEY_6, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F6</autogen>
        </item>
        <item>
          <name>Holding Shift+7 to F7</name>
          <identifier>remap.holding_shiftL7_to_f7</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_7, VK_SHIFT, KeyCode::KEY_7, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F7</autogen>
        </item>
        <item>
          <name>Holding Shift+8 to F8</name>
          <identifier>remap.holding_shiftL8_to_f8</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_8, VK_SHIFT, KeyCode::KEY_8, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F8</autogen>
        </item>
        <item>
          <name>Holding Shift+9 to F9</name>
          <identifier>remap.holding_shiftL9_to_f9</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_9, VK_SHIFT, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F9</autogen>
        </item>
        <item>
          <name>Holding Shift+0 to F10</name>
          <identifier>remap.holding_shiftL0_to_f10</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_0, VK_SHIFT, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::VK_NONE, KeyCode::F10</autogen>
        </item>

        <item>
          <name>Holding Command+1,2,3,4,... to F1,F2,F3,...,F12</name>
          <appendix>Holding Command+1 to F1</appendix>
          <appendix>Holding Command+2 to F2</appendix>
          <appendix>Holding Command+3 to F3</appendix>
          <appendix>Holding Command+4 to F4</appendix>
          <appendix>Holding Command+5 to F5</appendix>
          <appendix>Holding Command+6 to F6</appendix>
          <appendix>Holding Command+7 to F7</appendix>
          <appendix>Holding Command+8 to F8</appendix>
          <appendix>Holding Command+9 to F9</appendix>
          <appendix>Holding Command+10 to F10</appendix>
          <appendix>Holding Command+- to F11</appendix>
          <appendix>Holding Command+= to F12</appendix>
          <identifier>remap.holding_command_num_to_function</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_1, VK_COMMAND, KeyCode::KEY_1, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F1</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_2, VK_COMMAND, KeyCode::KEY_2, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F2</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_3, VK_COMMAND, KeyCode::KEY_3, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F3</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_4, VK_COMMAND, KeyCode::KEY_4, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F4</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_5, VK_COMMAND, KeyCode::KEY_5, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F5</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_6, VK_COMMAND, KeyCode::KEY_6, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F6</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_7, VK_COMMAND, KeyCode::KEY_7, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F7</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_8, VK_COMMAND, KeyCode::KEY_8, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F8</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_9, VK_COMMAND, KeyCode::KEY_9, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F9</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::KEY_0, VK_COMMAND, KeyCode::KEY_0, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F10</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::MINUS, VK_COMMAND, KeyCode::MINUS, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F11</autogen>
          <autogen>--HoldingKeyToKey-- KeyCode::EQUAL, VK_COMMAND, KeyCode::EQUAL, ModifierFlag::COMMAND_L, KeyCode::VK_NONE, KeyCode::F12</autogen>
        </item>
        <item>
          <name>1234567890 to !@#$%^&amp;*() / Shift+1234567890 to 1234567890</name>
          <identifier>remap.swap_number_and_symbol</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::NONE, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_1, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
        </item>
        <item>
          <name>CapsLock+1234567890 to !@#$%^&amp;*() / CapsLock+Shift+1234567890 to 1234567890</name>
          <identifier>remap.swap_capslock_number_and_symbol</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::CAPSLOCK | ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::CAPSLOCK | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>Change Option_L Key (Left Option)</name>
      <list>
        <item>
          <name>Option_L to Command_L</name>
          <identifier>remap.optionL2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_L to Command_L (only in virtual machine, RDC)</name>
          <identifier>remap.optionL2commandL_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_L to Control_L</name>
          <identifier>remap.optionL2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Option_L to Fn</name>
          <identifier>remap.optionL2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Control_L+Option_L to Fn</name>
          <identifier>remap.controlLoptionL2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, ModifierFlag::CONTROL_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Option_L to Option_L</name>
          <appendix>(+ When you type Option_L only, send Command+Space)</appendix>
          <identifier>remap.optionL2optionL_commandSpace</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::OPTION_L, KeyCode::OPTION_L, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_L to Option_L</name>
          <appendix>(+ When you type Option_L only, send End)</appendix>
          <identifier>remap.optionL2optionL_End</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::OPTION_L, KeyCode::OPTION_L, KeyCode::END</autogen>
        </item>
        <item>
          <name>Option_L to Option_R</name>
          <identifier>remap.optionL2optionR</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Option_L to Shift_L</name>
          <identifier>remap.optionL2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Option_L to Escape</name>
          <identifier>remap.optionL2escape</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Option_L to Command+Control+Option+Shift+F1</name>
          <identifier>remap.optionL2allF1</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::F1, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Option_L to Space</name>
          <identifier>remap.optionL2space</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::SPACE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Option_R Key (Right Option)</name>
      <list>
        <item>
          <name>Option_R to Command_L</name>
          <identifier>remap.optionR2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Command_R</name>
          <identifier>remap.optionrcommandr</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::COMMAND_R</autogen>
        </item>
        <item>
          <name>Option_R to Control_L</name>
          <identifier>remap.optionR2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Option_R to Control_L (only in virtual machine)</name>
          <identifier>remap.optionR2controlL_vm</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Option_R to Control_R</name>
          <identifier>remap.optionR2controlR</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Option_R to Control_R (only in Emacs, Terminal, X11)</name>
          <identifier>remap.optionR2controlR_etx</identifier>
          <only>EMACS, TERMINAL, X11</only>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Option_R to Fn</name>
          <identifier>remap.optionR2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Command_R+Option_R to Fn</name>
          <identifier>remap.commandRoptionR2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, ModifierFlag::COMMAND_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Option_R to Option_R</name>
          <appendix>(+ When you type Option_R only, send Command+Space)</appendix>
          <identifier>remap.optionR2optionR_commandSpace</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::OPTION_R, KeyCode::OPTION_R, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Option_R+Shift_L</name>
          <identifier>remap.optionR2optionRshiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::OPTION_R, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Option_R to Delete</name>
          <identifier>remap.optionR2delete</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Option_R to End</name>
          <identifier>remap.optionR2end</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::END</autogen>
        </item>
        <item>
          <name>Option_R to End (only in virtual machine, RDC)</name>
          <identifier>remap.optionR2end_vm</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::END</autogen>
        </item>
        <item>
          <name>Option_R to End (only in virtual machine, RDC)</name>
          <appendix>(+ Shift+Option_R to Shift+End,Control_L+C)</appendix>
          <identifier>remap.optionR2end_vm_ex</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, VK_SHIFT, KeyCode::END, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::END</autogen>
        </item>
        <item>
          <name>Option_R to End (only in virtual machine, RDC)</name>
          <appendix>(+ Shift+Option_R to Shift+End,Command_L+C)</appendix>
          <identifier>remap.optionR2end_vm_ex2</identifier>
          <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, VK_SHIFT, KeyCode::END, ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::END</autogen>
        </item>
        <item>
          <name>Option_R to Enter</name>
          <identifier>remap.optionR2enter</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Option_R to Forward Delete</name>
          <identifier>remap.optionR2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Option_R to Left-Arrow</name>
          <identifier>remap.optionR2leftarrow</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CURSOR_LEFT</autogen>
        </item>
        <item>
          <name>Option_R to PageDown</name>
          <identifier>remap.optionR2pagedown</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Option_R to Command_L+Right-Arrow (except virtual machine, RDC)</name>
          <identifier>remap.optionR2commandLrightarrow</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Command_L+Right-Arrow (except virtual machine, RDC)</name>
          <appendix>(+ Shift+Option_R to Command_L+Shift_L+Right-Arrow,Command_L+C)</appendix>
          <identifier>remap.optionR2commandLrightarrow_ex</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Command_L+Right-Arrow (except virtual machine, RDC)</name>
          <appendix>(+ Shift+Option_R to Command_L+Shift_L+Right-Arrow,Control_L+C)</appendix>
          <identifier>remap.optionR2commandLrightarrow_ex2</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Command_L+Right-Arrow</name>
          <identifier>remap.optionR2commandLrightarrow_all</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_R to Semicolon</name>
          <identifier>remap.optionR2semicolon</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::SEMICOLON</autogen>
        </item>
        <item>
          <name>Option_R to Space</name>
          <identifier>remap.optionR2space</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Option_R to Command+Control+Option+Shift+F1</name>
          <identifier>remap.optionR2allF1</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::F1, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change PageUp/PageDown Key</name>
      <list>
        <item>
          <name>PageUp to PC Insert Key</name>
          <identifier>remap.pageup2pcinsert</identifier>
          <autogen>--KeyToKey-- FROMKEYCODE_PAGEUP, KeyCode::PC_INSERT</autogen>
        </item>
        <item>
          <name>PageDown to PageUp</name>
          <identifier>remap.pagedown2pageup</identifier>
          <autogen>--KeyToKey-- FROMKEYCODE_PAGEDOWN, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>PageUp/PageDown to Left/Right (only in iPhoto)</name>
          <appendix>(This is effective only with "Kensington K33374 Wireless Presenter with Laser Pointer")</appendix>
          <identifier>remap.device_kensington_k33374_pageupdown2leftright_iphone</identifier>
          <only>IPHOTO</only>
          <!-- Kensington K33374 Hardware VendorID,ProductID == 0x047d,0x2012 -->
          <!-- Kensington Hack 0x0,0x0 -->
          <device_only>DeviceVendor::KENSINGTON,DeviceProduct::K33374, DeviceVendor::PSEUDO,DeviceProduct::PSEUDO</device_only>
          <autogen>--KeyToKey-- FROMKEYCODE_PAGEUP,   KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_PAGEDOWN, KeyCode::CURSOR_RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Return Key</name>
      <list>
        <item>
          <name>Return to Command_L</name>
          <identifier>remap.return2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Return to Control_L</name>
          <appendix>(+ When you type Return only, send Return)</appendix>
          <identifier>remap.return2controlL_return</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::RETURN, KeyCode::CONTROL_L, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Return to Control_L</name>
          <appendix>(+ When you type Return only, send Return) + [KeyRepeat]</appendix>
          <identifier>remap.return2controlL_return_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::RETURN, KeyCode::CONTROL_L, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Return to Option_L</name>
          <identifier>remap.return2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Return to Option_L</name>
          <appendix>(+ When you type Return only, send Escape)</appendix>
          <identifier>remap.return2optionL_escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::RETURN, KeyCode::OPTION_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Fn+Return to Option_L</name>
          <identifier>remap.fnReturn2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::RETURN, ModifierFlag::FN, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Return to Control_L+F4 (= Move focus to the active (or next) window)</name>
          <identifier>remap.return2controlLf4</identifier>
          <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Fn+Return to Shift_L+Insert</name>
          <identifier>remap.fnReturn2shiftLinsert</identifier>
          <autogen>--KeyToKey-- KeyCode::RETURN, ModifierFlag::FN, KeyCode::PC_INSERT, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Return to Semicolon</name>
          <identifier>remap.return2semicolon</identifier>
          <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::SEMICOLON</autogen>
        </item>
        <item>
          <name>Disable Return</name>
          <identifier>remap.drop_return</identifier>
          <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::VK_NONE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Right Bracket(]) Key</name>
      <list>
        <item>
          <name>Right Bracket(]) to CapsLock</name>
          <identifier>remap.rightbracket2capslock</identifier>
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Fn+Right Bracket(]) to Backslash(\)</name>
          <identifier>remap.fnrightbracket2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Quote(') Key</name>
      <list>
        <item>
          <name>Fn+Quote(') to Backslash(\)</name>
          <identifier>remap.fnquote2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::QUOTE, ModifierFlag::FN, KeyCode::BACKSLASH</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Semicolon(;) Key</name>
      <list>
        <item>
          <name>Semicolon to Minus</name>
          <identifier>remap.semicolon2minus</identifier>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::MINUS</autogen>
        </item>
        <item>
          <name>Semicolon to Return</name>
          <identifier>remap.semicolon2return</identifier>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Semicolon to Return</name>
          <appendix>(+ Control+Semicolon to Semicolon)</appendix>
          <identifier>remap.semicolon2return_controlsemicolon2semicolon</identifier>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_CONTROL, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Semicolon to Return (when there are not any modifiers)</name>
          <appendix>(+ Control+Semicolon to Semicolon)</appendix>
          <identifier>remap.semicolon2return_nomod</identifier>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_CONTROL | ModifierFlag::NONE, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Semicolon to Return (Only on WebIDE)</name>
          <identifier>remap.semicolon2return_onlywebide</identifier>
          <only>WEBIDE</only>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Semicolon to Sticky Shift_L</name>
          <identifier>remap.semicolon2stickyshiftL</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SEMICOLON, KeyCode::SHIFT_L, KeyCode::VK_STICKY_SHIFT_L</autogen>
        </item>
        <item>
          <name>Swap Semicolon and Colon</name>
          <identifier>remap.swapcolons</identifier>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_SHIFT, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::SEMICOLON, ModifierFlag::SHIFT_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Shift_L Key (Left Shift)</name>
      <list>
        <item>
          <name>Shift_L to CapsLock</name>
          <identifier>remap.shiftL2capslock</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Shift_L to Command_L</name>
          <identifier>remap.shiftL2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Shift_L to Control_L</name>
          <identifier>remap.shiftL2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Shift_L to Fn</name>
          <identifier>remap.shiftL2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Shift_L to Shift_L</name>
          <appendix>(+ When you type shift_L only without other modifiers, send Escape)</appendix>
          <identifier>remap.shiftL2shiftL_escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Shift_L to Shift_L</name>
          <appendix>(+ When you type shiftL only, send Space)</appendix>
          <identifier>remap.shiftL2shiftL_space</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_L to Shift_L</name>
          <appendix>(+ When you type shiftL only, send CapsLock)</appendix>
          <identifier>remap.shiftL2shiftL_capslock</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Shift_L to Shift_L</name>
          <appendix>(+ When you type shiftL only, send Space) + [KeyRepeat]</appendix>
          <identifier>remap.shiftL2shiftL_space_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_L to Lazy_Shift_L</name>
          <identifier>remap.shiftL2lazy_shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::VK_LAZY_SHIFT_L</autogen>
        </item>
        <item>
          <name>Shift_L to Option_L</name>
          <identifier>remap.shiftL2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Shift_L to Escape</name>
          <identifier>remap.shiftL2escape</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Shift_L to Space</name>
          <identifier>remap.shiftL2space</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_R+Shift_L to Space</name>
          <appendix>(Shift_R+Shift_L to Space, Shift_L+Shift_R to Shift+Space)</appendix>
          <identifier>remap.shiftRshiftL2space</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::SPACE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Fn+Shift_L to Control_R</name>
          <identifier>remap.fnshiftL2controlR</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, ModifierFlag::FN, KeyCode::CONTROL_R</autogen>
        </item>
        <item>
          <name>Disable Shift_L</name>
          <identifier>remap.drop_shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::VK_NONE</autogen>
        </item>
        <item>
          <name>Disable Shift_L</name>
          <appendix>(+ When you type Shift_L only, send Fn_Lock)</appendix>
          <identifier>remap.drop_shiftL_fn</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::VK_NONE, KeyCode::VK_LOCK_FN</autogen>
        </item>
        <item>
          <name>CapsLock Trick</name>
          <list>
            <item>
              <name>CapsLock Trick assigns "Sticky Shift_L / CapsLock" to Shift_L.</name>
              <identifier vk_config="true">notsave.shiftl_capslocktrick</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::CAPSLOCK, KeyCode::VK_CONFIG_TOGGLE_notsave_shiftl_capslocktrick</autogen>
            </item>
            <item>
              <name>Shift_L to Shift_L</name>
              <appendix>(+ When you type Shift_L only, Sticky Shift_L)</appendix>
              <appendix>(+ When you type Shift_L twice, Capslock)</appendix>
              <identifier>remap.shiftl_to_sticky_shiftl</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::EXTRA1, KeyCode::CAPSLOCK, KeyCode::VK_CONFIG_TOGGLE_notsave_shiftl_capslocktrick</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::VK_STICKY_SHIFT_L, KeyCode::VK_STICKY_EXTRA1 </autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Change Shift_R Key (Right Shift)</name>
      <list>
        <item>
          <name>Shift_R to Command_L</name>
          <identifier>remap.shiftR2commandL</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Shift_R to Control_L</name>
          <identifier>remap.shiftR2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Shift_R to Fn</name>
          <identifier>remap.shiftR2fn</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::FN</autogen>
        </item>
        <item>
          <name>Shift_R to Option_L</name>
          <identifier>remap.shiftR2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type Shift_R only, send Backslash)</appendix>
          <identifier>remap.shiftR2shiftR_backslash</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type Shift_R only, send CapsLock)</appendix>
          <identifier>remap.shiftR2shiftR_capslock</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type Shift_R only, send Enter)</appendix>
          <identifier>remap.shiftR2shiftR_enter</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type Shift_R only, send Escape)</appendix>
          <identifier>remap.shiftR2shiftR_escape</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type shiftR only, send Space)</appendix>
          <identifier>remap.shiftR2shiftR_space</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type shiftR only, send Space) + [KeyRepeat]</appendix>
          <identifier>remap.shiftR2shiftR_space_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_R to Lazy_Shift_R</name>
          <identifier>remap.shiftR2lazy_shiftR</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::VK_LAZY_SHIFT_R</autogen>
        </item>
        <item>
          <name>Shift_R to Enter</name>
          <identifier>remap.shiftR2enter</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Shift_R to Escape</name>
          <identifier>remap.shiftR2escape</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Shift_R to Forward Delete</name>
          <identifier>remap.shiftR2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Shift_R to Return</name>
          <identifier>remap.shiftR2return</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Shift_R to Right-Arrow</name>
          <identifier>remap.shiftR2rightarrow</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Shift_R to Space</name>
          <identifier>remap.shiftR2space</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_L+Shift_R to Space</name>
          <appendix>(Shift_L+Shift_R to Space, Shift_R+Shift_L to Shift+Space)</appendix>
          <identifier>remap.shiftLshiftR2space</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::SPACE, ModifierFlag::SHIFT_R</autogen>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Shift_R to Tab</name>
          <identifier>remap.shiftR2tab</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Shift_R to Up-Arrow</name>
          <identifier>remap.shiftR2uparrow</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::CURSOR_UP</autogen>
        </item>
        <item>
          <name>Back/Forward in Finder, Safari, etc. Left/Right Shift in mi.</name>
          <list>
            <item>
              <name>Shift_R to Shift_R</name>
              <appendix>(+ When you type shift_R only without other modifiers, send Command+[ )</appendix>
              <identifier>remap.shiftR2shiftR_backward_nomod</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::SHIFT_R, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_R</autogen>
            </item>
            <item>
              <name>Option_R+Shift_R to Command+]</name>
              <appendix>(only without other modifiers)</appendix>
              <identifier>remap.optionRshiftR2forward</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::SHIFT_R, ModifierFlag::OPTION_R, KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_R</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>CapsLock Trick</name>
          <list>
            <item>
              <name>CapsLock Trick assigns "Sticky Shift_L / CapsLock" to Shift_R.</name>
              <identifier vk_config="true">notsave.shiftr_capslocktrick</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::CAPSLOCK, KeyCode::VK_CONFIG_TOGGLE_notsave_shiftr_capslocktrick</autogen>
            </item>
            <item>
              <name>Shift_R to Shift_R</name>
              <appendix>(+ When you type Shift_R only, Sticky Shift_L)</appendix>
              <appendix>(+ When you type Shift_R twice, Capslock)</appendix>
              <identifier>remap.shiftr_to_sticky_shiftr</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::EXTRA1, KeyCode::CAPSLOCK, KeyCode::VK_CONFIG_TOGGLE_notsave_shiftr_capslocktrick</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::VK_STICKY_SHIFT_R, KeyCode::VK_STICKY_EXTRA1 </autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Change Space Key</name>
      <list>
        <item>
          <name>Space to Control_L</name>
          <identifier>remap.space2controlL</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Space to Control_L</name>
          <appendix>(+ When you type Space only, send Space)</appendix>
          <identifier>remap.space2controlL_space</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::CONTROL_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Space to Control_L</name>
          <appendix>(+ When you type Space only, send Space) + [KeyRepeat]</appendix>
          <identifier>remap.space2controlL_space_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::SPACE, KeyCode::CONTROL_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Space to Option_L</name>
          <identifier>remap.space2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Space to Option_L</name>
          <appendix>(+ When you type Space only, send Space)</appendix>
          <identifier>remap.space2optionL_space</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::OPTION_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Control+Space to Option_L</name>
          <identifier>remap.controlSpace2optionL</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, VK_CONTROL, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <identifier>remap.space2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <appendix>(+ When you type Space only, send Space)</appendix>
          <identifier>remap.space2shiftL_space</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <appendix>(+ When you type Space only, send Space) + [KeyRepeat]</appendix>
          <identifier>remap.space2shiftL_space_keyrepeat</identifier>
          <autogen>--KeyOverlaidModifierWithRepeat-- KeyCode::SPACE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <appendix>(+ When you type Space only, send Space) (Disable on Adobe Softwares)</appendix>
          <not>ADOBE, PHOTOSHOP, ILLUSTRATOR</not>
          <identifier>remap.space2shiftL_space_not_adobe</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Space to Shift_L</name>
          <appendix>(+ When you type Space only, send Space)</appendix>
          <appendix>Fn+Space to Space</appendix>
          <identifier>remap.space2shiftL_space_fnspace</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, ModifierFlag::FN, KeyCode::SPACE</autogen>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::SHIFT_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Control+Space to Shift_L_Lock</name>
          <identifier>remap.controlSpace2shiftL_lock</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, VK_CONTROL, KeyCode::VK_LOCK_SHIFT_L</autogen>
        </item>
        <item>
          <name>Swap Space and Option+Space</name>
          <list>
            <item>
              <!-- Swap Mode Core -->
              <name>You can swap Space and Option+Space temporarily.</name>
              <appendix>Turn on a setting below, and toggle "Swap Mode".</appendix>
              <identifier vk_config="true">notsave.swap_space_optionspace</identifier>
              <autogen>--ShowStatusMessage-- Swap Mode</autogen>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_OPTION | ModifierFlag::NONE, KeyCode::SPACE</autogen>
              <autogen>--KeyToKey-- KeyCode::SPACE, ModifierFlag::NONE, KeyCode::SPACE, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Fn+Escape to toggle "Swap Space and Option+Space" Mode</name>
              <identifier>remap.swap_space_optionspace_toggle_fnescape</identifier>
              <autogen>--KeyToKey-- KeyCode::ESCAPE, ModifierFlag::FN, KeyCode::VK_CONFIG_TOGGLE_notsave_swap_space_optionspace</autogen>
            </item>
            <item>
              <name>Fn+Space to toggle "Swap Space and Option+Space" Mode</name>
              <identifier>remap.swap_space_optionspace_toggle_fnspace</identifier>
              <autogen>--KeyToKey-- KeyCode::SPACE, ModifierFlag::FN, KeyCode::VK_CONFIG_TOGGLE_notsave_swap_space_optionspace</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Space to Return</name>
          <identifier>remap.space2return</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Command+Space to Command+Shift+Space</name>
          <identifier>remap.commandSpace2commandLshiftLspace</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, VK_COMMAND | ModifierFlag::NONE, KeyCode::SPACE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Shift+Space to Command_L+Space</name>
          <identifier>remap.shiftSpace2commandLSpace</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, VK_SHIFT, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+Space to Option_L+Enter (except Emacs)</name>
          <not>EMACS</not>
          <identifier>remap.controlSpace2optionLEnter</identifier>
          <autogen>--KeyToKey-- KeyCode::SPACE, VK_CONTROL, KeyCode::ENTER, ModifierFlag::OPTION_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Change Tab Key</name>
      <list>
        <item>
          <name>Tab to Command_L</name>
          <appendix>(+ When you type Tab only, send Expose All)</appendix>
          <identifier>remap.tab2commandL_exposeAll</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::TAB, KeyCode::COMMAND_L, KeyCode::EXPOSE_ALL</autogen>
        </item>
        <item>
          <name>Tab to Option_L when you held down Control_L</name>
          <appendix>(+ When you type Control_L+Tab, send Control_L+Tab)</appendix>
          <identifier>remap.tab2option_withControlL</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::TAB, ModifierFlag::CONTROL_L, KeyCode::OPTION_L, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Tab to Expose All</name>
          <identifier>remap.tab2exposeALL</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, KeyCode::EXPOSE_ALL</autogen>
        </item>
        <item>
          <name>Control+tab to Command+F1 (only in Terminal)</name>
          <only>TERMINAL</only>
          <identifier>remap.ctrltab2cmdf1_onlyterminal</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_CONTROL, KeyCode::F1, VK_COMMAND</autogen>
        </item>
        <item>
          <name>Command+Tab to F5</name>
          <identifier>remap.commandTab2f5</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Option+Tab to F5</name>
          <identifier>remap.optionTab2f5</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_OPTION, KeyCode::F5</autogen>
        </item>
        <item>
          <name>Command+Tab to Control+Tab (only in Firefox, Google Chrome, Opera, Safari)</name>
          <identifier>remap.commandTab2controlTab_browser</identifier>
          <only>FIREFOX, GOOGLE_CHROME, OPERA, SAFARI</only>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Command+Tab to Option+Tab</name>
          <identifier>remap.commandTab2optionTab</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Control+Tab to Command+Tab</name>
          <!-- #include "include/lazy_recommendation.xml" -->
          <identifier>remap.controlTab2commandTab</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_CONTROL, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+Tab to Option+Tab</name>
          <identifier>remap.controlTab2optionTab</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_CONTROL, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Option+Tab to Command+Tab</name>
          <!-- #include "include/lazy_recommendation.xml" -->
          <identifier>remap.optionTab2commandTab</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option+Tab to Control+Tab</name>
          <identifier>remap.optionTab2controlTab</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Swap Command+Tab and Option+Tab</name>
          <identifier>remap.swap_commandtaboptiontab</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Swap Command+Tab and Control+Tab</name>
          <identifier>remap.swap_commandtabcontroltab</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_CONTROL, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Disable Tab</name>
          <identifier>remap.drop_tab</identifier>
          <autogen>--KeyToKey-- KeyCode::TAB, KeyCode::VK_NONE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Virtual Mouse</name>
      <list>
        <item>
          <name>Control+L to RightClick</name>
          <identifier>remap.control_l2rightclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::L, VK_CONTROL, PointingButton::RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Diamond Cursor</name>
      <list>
        <item>
          <name>Control_L+WSAD to Up/Down/Left/Right</name>
          <identifier>remap.diamond_cursor_controlL_wsad</identifier>
          <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_R+WSAD to Up/Down/Left/Right</name>
          <identifier>remap.diamond_cursor_controlR_wsad</identifier>
          <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>ModifierFlag::EXTRA1+WXSD to Up/Down/Left/Right</name>
          <appendix>(+ ModifierFlag::EXTRA1+A to Command_L+Left)</appendix>
          <appendix>(+ ModifierFlag::EXTRA1+F to Command_L+Right)</appendix>
          <identifier>remap.diamond_cursor_extra1_exsd</identifier>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::EXTRA1, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::EXTRA1, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::EXTRA1, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::EXTRA1, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::EXTRA1, KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::EXTRA1, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L+EXSD to Up/Down/Left/Right</name>
          <identifier>remap.diamond_cursor_controlL_exsd</identifier>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_R+EXSD to Up/Down/Left/Right</name>
          <identifier>remap.diamond_cursor_controlR_exsd</identifier>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_L+RVDF to Up/Down/Left/Right</name>
          <identifier>remap.diamond_cursor_controlL_rvdf</identifier>
          <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_L+ESDF to Up/Down/Left/Right</name>
          <identifier>remap.diamond_cursor_controlL_esdf</identifier>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_R+ESDF to Up/Down/Left/Right</name>
          <identifier>remap.diamond_cursor_controlR_esdf</identifier>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::CONTROL_R, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::CONTROL_R, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::CONTROL_R, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::CONTROL_R, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_L+IKJL to Up/Down/Left/Right</name>
          <identifier>option.extra_cursor_controlL_jkil</identifier>
          <autogen>--KeyToKey-- KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Option_L+IKJL to Up/Down/Left/Right</name>
          <identifier>option.extra_cursor_optionL_jkil</identifier>
          <autogen>--KeyToKey-- KeyCode::I, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>Emacs Mode</name>
      <list>
        <item>
          <name>Control+D to Forward Delete</name>
          <identifier>option.emacsmode_controlD</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Control+D to Forward Delete</name>
          <appendix>(when there are no other modifiers)</appendix>
          <identifier>option.emacsmode_controlD_nomodifiers</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL | ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Control+H to Delete</name>
          <identifier>option.emacsmode_controlH</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Control+I to Tab</name>
          <identifier>option.emacsmode_controlI</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
        </item>
        <item>
          <name>Control+[ to Escape</name>
          <identifier>option.emacsmode_controlLeftbracket</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Control+J to Return</name>
          <identifier>remap.controlJ2return</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::J, VK_CONTROL, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Control+M to Return</name>
          <identifier>option.emacsmode_controlM</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Control+PNBF to Up/Down/Left/Right</name>
          <identifier>option.emacsmode_controlPNBF</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <!-- #include "include/emacsmode_controlPNBF.xml" -->
        </item>
        <item>
          <name>Control+PNBF to Up/Down/Left/Right</name>
          <appendix>(when there are no other modifiers)</appendix>
          <identifier>option.emacsmode_controlPNBF_nomodifiers</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <!-- #include "include/emacsmode_controlPNBF_nomodifiers.xml" -->
        </item>
        <item>
          <name>Control+PNBF to Up/Down/Left/Right</name>
          <appendix>(+ Control+AE to Command+Left/Right)</appendix>
          <appendix>(+ Command+Control+PNBF to Shift+Up/Down/Left/Right)</appendix>
          <appendix>(+ Command+Control+AE to Shift+Command+Left/Right)</appendix>
          <appendix>(+ retain Control+Shift+PNBF)</appendix>
          <appendix>(+ retain Control+Shift+AE)</appendix>
          <identifier>option.emacsmode_controlPNBF_ex</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <!-- #include "include/emacsmode_controlPNBF_ex.xml" -->
        </item>
        <item>
          <name>Control+V to PageDown</name>
          <identifier>option.emacsmode_controlV</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::V, VK_CONTROL, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Option+V to PageUp</name>
          <identifier>option.emacsmode_optionV</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::V, VK_OPTION, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>Command+V to PageUp</name>
          <identifier>option.emacsmode_commandV</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::V, VK_COMMAND, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>Control+Y to Command+V</name>
          <identifier>option.emacsmode_controlY</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::Y, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+AE to Command+Left/Right</name>
          <identifier>option.emacsmode_controlAE</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+AE to Command+Shift+Left/Right,Left/Right</name>
          <appendix>(An Alternative way if you use Command+Left/Right for Spaces)</appendix>
          <identifier>option.emacsmode_controlAE_alternative</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_CONTROL, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Control+K to Command+Shift+Right,Forward Delete</name>
          <identifier>option.emacsmode_controlK_ex</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::K, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Control+K to Command+Shift+Right,Command+X</name>
          <identifier>option.emacsmode_controlK</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::K, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+W to Command+X</name>
          <identifier>option.emacsmode_controlW</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::W, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option+W to Command+C</name>
          <identifier>option.emacsmode_OptionWCopy</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::W, VK_OPTION, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option+BF to Option+Left/Right</name>
          <identifier>option.emacsmode_optionBF</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::B, VK_OPTION, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::F, VK_OPTION, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Option+D to Option+Forward Delete</name>
          <identifier>option.emacsmode_optionD</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::D, VK_OPTION, KeyCode::FORWARD_DELETE, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Option+&lt; to Home / Option+&gt; to End</name>
          <identifier>option.emacsmode_optionLtGt</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::COMMA, VK_OPTION | VK_SHIFT, KeyCode::HOME, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::DOT,   VK_OPTION | VK_SHIFT, KeyCode::END, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Control+/ to Command_Z</name>
          <identifier>option.emacsmode_controlSlash</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::SLASH, VK_CONTROL, KeyCode::Z, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control+S to Command+F</name>
          <identifier>option.emacsmode_controlS</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::S, VK_CONTROL, KeyCode::F, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>[ex] Control+1 to Home / Control+2 to End</name>
          <identifier>option.emacsmode_ex_control12</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::KEY_1, VK_CONTROL, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_CONTROL, KeyCode::END</autogen>
        </item>
        <item>
          <name>[ex] Control+Comma(,)/Dot(.) to Home/End</name>
          <identifier>option.emacsmode_ex_controlcommadot</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::COMMA, VK_CONTROL, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::DOT,   VK_CONTROL, KeyCode::END</autogen>
        </item>
        <item>
          <name>[ex] Control+Q to PageUp</name>
          <identifier>option.emacsmode_ex_controlQ</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::Q, VK_CONTROL, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>[ex] Control+W to Option+Delete</name>
          <identifier>option.emacsmode_ex_controlW</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::W, VK_CONTROL, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>[ex] Control+U to Command+Shift+Left,Command+X</name>
          <identifier>option.emacsmode_ex_controlU</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>[ex] Control+U to Command+Shift+Left,Delete</name>
          <identifier>option.emacsmode_ex_controlU_delete</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>[ex] Control+U to Command+Shift+Left,Forward Delete</name>
          <identifier>option.emacsmode_ex_controlU_forwarddelete</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::U, VK_CONTROL | ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>[ex] Control+U to PageUp</name>
          <identifier>remap.controlU2pageup</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::U, VK_CONTROL, KeyCode::PAGEUP</autogen>
        </item>
        <item>
          <name>[ex] Control+G to Escape</name>
          <identifier>option.emacsmode_ex_controlG</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::G, VK_CONTROL, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>[ex] Control+AE to Home/End</name>
          <identifier>option.emacsmode_ex_controlAE</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
        </item>
        <item>
          <name>[ex] Command+W to Command+C</name>
          <identifier>option.emacsmode_ex_commandW</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::W, VK_COMMAND, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>[ex] Command+W to Control+X,Control+M,Command+C (only in Xcode)</name>
          <appendix>(+ Command+W to Command+C (except Xcode))</appendix>
          <identifier>option.emacsmode_ex_commandW_xcode</identifier>
          <block>
            <only>XCODE</only>
            <autogen>--KeyToKey-- KeyCode::W, VK_COMMAND, KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          </block>
          <block>
            <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE, XCODE</not>
            <autogen>--KeyToKey-- KeyCode::W, VK_COMMAND, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          </block>
        </item>
        <item>
          <name>[ex] Control+W to Control+X,Control+M,Command+X (only in Xcode)</name>
          <appendix>(+ Control+W to Command+X (except Xcode))</appendix>
          <identifier>option.emacsmode_ex_controlW_xcode</identifier>
          <block>
            <only>XCODE</only>
            <autogen>--KeyToKey-- KeyCode::W, VK_CONTROL, KeyCode::X, ModifierFlag::CONTROL_L, KeyCode::M, ModifierFlag::CONTROL_L, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
          </block>
          <block>
            <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
            <autogen>--KeyToKey-- KeyCode::W, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
          </block>
        </item>
        <item>
          <name>[ex] Option+W to Command+W</name>
          <identifier>option.emacsmode_ex_optionW</identifier>
          <autogen>--KeyToKey-- KeyCode::W, VK_OPTION, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>[ex] Use Control+X as prefix key</name>
          <list>
            <item>
              <!-- C-x Mode Core -->
              <name>Control+X detail</name>
              <appendix>C-x C-s to Command_L+S</appendix>
              <appendix>C-x C-f to Command_L+O</appendix>
              <appendix>C-x k to Command_L+W</appendix>
              <appendix>C-x C-c to Command_L+Q</appendix>
              <appendix>C-x C-g to turn off Control+X Mode</appendix>
              <identifier vk_config="true">notsave.emacsmode_ex_controlX_core</identifier>
              <autogen>--ShowStatusMessage-- C-x Mode</autogen>
              <autogen>--KeyToKey-- KeyCode::S, VK_CONTROL | ModifierFlag::NONE, KeyCode::S, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
              <autogen>--KeyToKey-- KeyCode::C, VK_CONTROL | ModifierFlag::NONE, KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
              <autogen>--KeyToKey-- KeyCode::F, VK_CONTROL | ModifierFlag::NONE, KeyCode::O, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
              <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::NONE,              KeyCode::W, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
              <autogen>--KeyToKey-- KeyCode::G, VK_CONTROL | ModifierFlag::NONE,                                      KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlX_core</autogen>
            </item>
            <item>
              <name>Enable Control+X</name>
              <identifier>option.emacsmode_ex_controlX</identifier>
              <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
              <autogen>--KeyToKey-- KeyCode::X, VK_CONTROL | ModifierFlag::NONE, KeyCode::VK_CONFIG_FORCE_ON_notsave_emacsmode_ex_controlX_core</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>[ex] Use Control+Space as MarkSet</name>
          <list>
            <item>
              <!-- MarkSet Mode Core -->
              <name>MarkSet Mode detail</name>
              <appendix>Control+W to Command_L+X</appendix>
              <appendix>Option+W to Command_L+C</appendix>
              <appendix>Control+G to turn off MarkSet</appendix>
              <appendix>Control+Space to turn off MarkSet</appendix>
              <identifier vk_config="true">notsave.emacsmode_ex_controlSpace_core</identifier>
              <autogen>--ShowStatusMessage-- MarkSet</autogen>
              <autogen>--KeyToKey-- KeyCode::W,     VK_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF, KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core</autogen>
              <autogen>--KeyToKey-- KeyCode::W,     VK_OPTION  | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF, KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core</autogen>
              <autogen>--KeyToKey-- KeyCode::G,     VK_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,                                      KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core</autogen>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,                                      KeyCode::VK_CONFIG_FORCE_OFF_notsave_emacsmode_ex_controlSpace_core</autogen>
            </item>
            <item>
              <name>Enable Control+Space</name>
              <identifier>option.emacsmode_ex_controlSpace</identifier>
              <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_CONTROL | ModifierFlag::NONE, KeyCode::VK_LOCK_SHIFT_L_FORCE_ON, KeyCode::VK_CONFIG_FORCE_ON_notsave_emacsmode_ex_controlSpace_core</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Behavior in Emacs, Terminal, X11, VMware, Parallels, RDC, Eclipse</name>
          <list>
            <item>
              <name>Force change C-d to Forward Delete</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <identifier>option.emacsmode_force_controlD_term</identifier>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <identifier>option.emacsmode_force_controlD_x11</identifier>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <identifier>option.emacsmode_force_controlD_vm</identifier>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <identifier>option.emacsmode_force_controlD_eclipse</identifier>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::D, VK_CONTROL, KeyCode::FORWARD_DELETE</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force change C-h to Delete</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <identifier>option.emacsmode_force_controlH_term</identifier>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <identifier>option.emacsmode_force_controlH_x11</identifier>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <identifier>option.emacsmode_force_controlH_vm</identifier>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <identifier>option.emacsmode_force_controlH_eclipse</identifier>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::H, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force change C-i to Tab</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <identifier>option.emacsmode_force_controlI_term</identifier>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <identifier>option.emacsmode_force_controlI_x11</identifier>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <identifier>option.emacsmode_force_controlI_vm</identifier>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <identifier>option.emacsmode_force_controlI_eclipse</identifier>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::I, VK_CONTROL, KeyCode::TAB</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force change C-m to Return</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <identifier>option.emacsmode_force_controlM_term</identifier>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <identifier>option.emacsmode_force_controlM_x11</identifier>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <identifier>option.emacsmode_force_controlM_vm</identifier>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <identifier>option.emacsmode_force_controlM_eclipse</identifier>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force change C-[ to Escape</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <identifier>option.emacsmode_force_controlLeftbracket_term</identifier>
                  <only>EMACS, TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                </item>
                <item>
                  <name>In X11</name>
                  <identifier>option.emacsmode_force_controlLeftbracket_x11</identifier>
                  <only>X11</only>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <identifier>option.emacsmode_force_controlLeftbracket_vm</identifier>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                </item>
                <item>
                  <name>In Eclipse</name>
                  <identifier>option.emacsmode_force_controlLeftbracket_eclipse</identifier>
                  <only>ECLIPSE</only>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Force change C-pnbf to Up/Down/Left/Right</name>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <identifier>option.emacsmode_force_controlPNBF_term</identifier>
                  <only>EMACS, TERMINAL</only>
                  <!-- #include "include/emacsmode_controlPNBF.xml" -->
                </item>
                <item>
                  <name>In X11</name>
                  <identifier>option.emacsmode_force_controlPNBF_x11</identifier>
                  <only>X11</only>
                  <!-- #include "include/emacsmode_controlPNBF.xml" -->
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <identifier>option.emacsmode_force_controlPNBF_vm</identifier>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <!-- #include "include/emacsmode_controlPNBF.xml" -->
                </item>
                <item>
                  <name>In Eclipse</name>
                  <identifier>option.emacsmode_force_controlPNBF_eclipse</identifier>
                  <only>ECLIPSE</only>
                  <!-- #include "include/emacsmode_controlPNBF.xml" -->
                </item>
              </list>
            </item>
            <item>
              <name>Force change C-pnbf to Up/Down/Left/Right</name>
              <appendix>(+ Control+AE to Command+Left/Right)</appendix>
              <appendix>(+ Command+Control+PNBF to Shift+Up/Down/Left/Right)</appendix>
              <appendix>(+ Command+Control+AE to Shift+Command+Left/Right)</appendix>
              <appendix>(+ retain Control+Shift+PNBF)</appendix>
              <appendix>(+ retain Control+Shift+AE)</appendix>
              <list>
                <item>
                  <name>In Emacs, Terminal</name>
                  <identifier>option.emacsmode_force_controlPNBF_ex_term</identifier>
                  <only>EMACS, TERMINAL</only>
                  <!-- #include "include/emacsmode_controlPNBF_ex.xml" -->
                </item>
                <item>
                  <name>In X11</name>
                  <identifier>option.emacsmode_force_controlPNBF_ex_x11</identifier>
                  <only>X11</only>
                  <!-- #include "include/emacsmode_controlPNBF_ex.xml" -->
                </item>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <identifier>option.emacsmode_force_controlPNBF_ex_vm</identifier>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <!-- #include "include/emacsmode_controlPNBF_ex.xml" -->
                </item>
                <item>
                  <name>In Eclipse</name>
                  <identifier>option.emacsmode_force_controlPNBF_ex_eclipse</identifier>
                  <only>ECLIPSE</only>
                  <!-- #include "include/emacsmode_controlPNBF_ex.xml" -->
                </item>
              </list>
            </item>
            <item>
              <name>Control+AE to Home/End</name>
              <list>
                <item>
                  <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                  <identifier>option.emacsmode_controlAE_vm</identifier>
                  <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                  <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::HOME</autogen>
                  <autogen>--KeyToKey-- KeyCode::E, VK_CONTROL, KeyCode::END</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>[Terminal] Control+/ to C-_ and Control+' to C-M-_</name>
              <identifier>option.emacsmode_controlSlashTerminal</identifier>
              <only>TERMINAL</only>
              <autogen>--KeyToKey-- KeyCode::SLASH, VK_CONTROL, KeyCode::MINUS, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::QUOTE, VK_CONTROL, KeyCode::MINUS, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Mouse Keys</name>
      <list>
        <item>
          <name>Arrow(Up/Down/Left/Right) Keys to Mouse Keys</name>
          <identifier>remap.mousekeys_arrow</identifier>
          <autogen>--KeyToKey-- KeyCode::CURSOR_UP,    KeyCode::VK_MOUSEKEY_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN,  KeyCode::VK_MOUSEKEY_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT,  KeyCode::VK_MOUSEKEY_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, KeyCode::VK_MOUSEKEY_RIGHT</autogen>
        </item>

        <item>
          <name>Mouse Keys Mode</name>
          <list>
            <item>
              <name>What's Mouse Keys Mode?</name>
              <appendix>Push "S" and "D" keys simultaneously while pressing Command key,</appendix>
              <appendix>and keep S,D keys pressing.</appendix>
              <appendix>Then you can control mouse cursor by HJKL keys. (and Arrow keys)</appendix>
              <appendix></appendix>
              <appendix>- HJKL to move mouse cursor</appendix>
              <appendix>- Arrow Keys to move mouse cursor</appendix>
              <appendix></appendix>
              <appendix>- F+HJKL to scroll wheel</appendix>
              <appendix>- F+Arrow Keys to scroll wheel</appendix>
              <appendix></appendix>
              <appendix>- A+HJKL to high-speed movement</appendix>
              <appendix>- A+Arrow Keys to high-speed movement</appendix>
              <identifier vk_config="true">notsave.mousekeys_mode</identifier>
              <autogen>--ShowStatusMessage-- Mouse Keys</autogen>
              <!-- scroll wheel mode -->
              <autogen>--KeyToKey-- KeyCode::H,            ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_LEFT,  ModifierFlag::FN</autogen>
              <autogen>--KeyToKey-- KeyCode::J,            ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_DOWN,  ModifierFlag::FN</autogen>
              <autogen>--KeyToKey-- KeyCode::K,            ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_UP,    ModifierFlag::FN</autogen>
              <autogen>--KeyToKey-- KeyCode::L,            ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_RIGHT, ModifierFlag::FN</autogen>
              <autogen>--KeyToKey-- KeyCode::CURSOR_UP,    ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_UP,    ModifierFlag::FN</autogen>
              <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN,  ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_DOWN,  ModifierFlag::FN</autogen>
              <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT,  ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_LEFT,  ModifierFlag::FN</autogen>
              <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, ModifierFlag::FN, KeyCode::VK_MOUSEKEY_SCROLL_RIGHT, ModifierFlag::FN</autogen>
              <!-- normal mode -->
              <autogen>--KeyToKey-- KeyCode::H, KeyCode::VK_MOUSEKEY_LEFT</autogen>
              <autogen>--KeyToKey-- KeyCode::J, KeyCode::VK_MOUSEKEY_DOWN</autogen>
              <autogen>--KeyToKey-- KeyCode::K, KeyCode::VK_MOUSEKEY_UP</autogen>
              <autogen>--KeyToKey-- KeyCode::L, KeyCode::VK_MOUSEKEY_RIGHT</autogen>
              <autogen>--KeyToKey-- KeyCode::CURSOR_UP,    KeyCode::VK_MOUSEKEY_UP</autogen>
              <autogen>--KeyToKey-- KeyCode::CURSOR_DOWN,  KeyCode::VK_MOUSEKEY_DOWN</autogen>
              <autogen>--KeyToKey-- KeyCode::CURSOR_LEFT,  KeyCode::VK_MOUSEKEY_LEFT</autogen>
              <autogen>--KeyToKey-- KeyCode::CURSOR_RIGHT, KeyCode::VK_MOUSEKEY_RIGHT</autogen>
              <!-- ======================================== -->
              <block>
                <config_only>remap.simultaneouskeypresses_mouse_keys_mode_commandSD, remap.simultaneouskeypresses_mouse_keys_mode_shiftSD</config_only>
                <autogen>--KeyToKey-- KeyCode::F, KeyCode::FN</autogen>
                <autogen>--KeyToKey-- KeyCode::A, KeyCode::VK_MOUSEKEY_HIGHSPEED</autogen>
              </block>
              <block>
                <config_only>remap.simultaneouskeypresses_mouse_keys_mode_df</config_only>
                <autogen>--KeyToKey-- KeyCode::S, KeyCode::FN</autogen>
                <autogen>--KeyToKey-- KeyCode::A, KeyCode::VK_MOUSEKEY_HIGHSPEED</autogen>
              </block>
              <block>
                <config_only>remap.simultaneouskeypresses_mouse_keys_mode_cx</config_only>
                <autogen>--KeyToKey-- KeyCode::V, KeyCode::FN</autogen>
                <autogen>--KeyToKey-- KeyCode::Z, KeyCode::VK_MOUSEKEY_HIGHSPEED</autogen>
              </block>
              <!-- ======================================== -->
              <block>
                <config_only>option.mousekeys_mode_commandL2leftclick</config_only>
                <autogen>--KeyToPointingButton-- KeyCode::COMMAND_L, PointingButton::LEFT</autogen>
              </block>
              <block>
                <config_only>option.mousekeys_mode_space2middleclick</config_only>
                <autogen>--KeyToPointingButton-- KeyCode::SPACE, PointingButton::MIDDLE</autogen>
              </block>
              <block>
                <config_only>option.mousekeys_mode_commandR2rightclick</config_only>
                <autogen>--KeyToPointingButton-- KeyCode::COMMAND_R, PointingButton::RIGHT</autogen>
              </block>
              <block>
                <config_only>option.mousekeys_mode_uio2click</config_only>
                <autogen>--KeyToPointingButton-- KeyCode::U, PointingButton::LEFT</autogen>
                <autogen>--KeyToPointingButton-- KeyCode::I, PointingButton::MIDDLE</autogen>
                <autogen>--KeyToPointingButton-- KeyCode::O, PointingButton::RIGHT</autogen>
              </block>
              <block>
                <config_only>option.mousekeys_mode_jis_eisuu2leftclick</config_only>
                <autogen>--KeyToPointingButton-- KeyCode::JIS_EISUU, PointingButton::LEFT</autogen>
              </block>
              <block>
                <config_only>option.mousekeys_mode_jis_kana2rightclick</config_only>
                <autogen>--KeyToPointingButton-- KeyCode::JIS_KANA, PointingButton::RIGHT</autogen>
              </block>
            </item>
            <item>
              <name>Simultaneous Key Presses Command+[S+D] to turn on Mouse Keys Mode</name>
              <appendix>// Press S,D keys simultaneously while pressing Command_L or Command_R.</appendix>
              <appendix>// You can release Command key while pressing S,D keys.</appendix>
              <appendix></appendix>
              <appendix>+ F turns on "Scroll Wheel Mode"</appendix>
              <appendix>// F+HJKL to scroll wheel</appendix>
              <appendix></appendix>
              <appendix>+ A turns on "High Speed Mode"</appendix>
              <appendix>// A+HJKL to high-speed movement</appendix>
              <identifier>remap.simultaneouskeypresses_mouse_keys_mode_commandSD</identifier>
              <autogen>--SimultaneousKeyPresses-- KeyCode::D, KeyCode::S, VK_COMMAND, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mousekeys_mode</autogen>
            </item>
            <item>
              <name>Simultaneous Key Presses Shift+[S+D] to turn on Mouse Keys Mode</name>
              <appendix>// Press S,D keys simultaneously while pressing Shift_L or Shift_R.</appendix>
              <appendix>// You can release Shift key while pressing S,D keys.</appendix>
              <appendix></appendix>
              <appendix>+ F turns on "Scroll Wheel Mode"</appendix>
              <appendix>// F+HJKL to scroll wheel</appendix>
              <appendix></appendix>
              <appendix>+ A turns on "High Speed Mode"</appendix>
              <appendix>// A+HJKL to high-speed movement</appendix>
              <identifier>remap.simultaneouskeypresses_mouse_keys_mode_shiftSD</identifier>
              <autogen>--SimultaneousKeyPresses-- KeyCode::D, KeyCode::S, VK_SHIFT, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mousekeys_mode</autogen>
            </item>
            <item>
              <name>Simultaneous Key Presses [D+F] to turn on Mouse Keys Mode</name>
              <appendix></appendix>
              <appendix>+ S turns on "Scroll Wheel Mode"</appendix>
              <appendix>// S+HJKL to scroll wheel</appendix>
              <appendix></appendix>
              <appendix>+ A turns on "High Speed Mode"</appendix>
              <appendix>// A+HJKL to high-speed movement</appendix>
              <identifier>remap.simultaneouskeypresses_mouse_keys_mode_df</identifier>
              <autogen>--SimultaneousKeyPresses-- KeyCode::D, KeyCode::F, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mousekeys_mode</autogen>
            </item>
            <item>
              <name>Simultaneous Key Presses [X+C] to turn on Mouse Keys Mode</name>
              <appendix></appendix>
              <appendix>+ V turns on "Scroll Wheel Mode"</appendix>
              <appendix>// V+HJKL to scroll wheel</appendix>
              <appendix></appendix>
              <appendix>+ Z turns on "High Speed Mode"</appendix>
              <appendix>// Z+HJKL to high-speed movement</appendix>
              <identifier>remap.simultaneouskeypresses_mouse_keys_mode_cx</identifier>
              <autogen>--SimultaneousKeyPresses-- KeyCode::C, KeyCode::X, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_mousekeys_mode</autogen>
            </item>
            <item>
              <name>[Option] Command_L to LeftClick</name>
              <identifier>option.mousekeys_mode_commandL2leftclick</identifier>
            </item>
            <item>
              <name>[Option] Space to MiddleClick</name>
              <identifier>option.mousekeys_mode_space2middleclick</identifier>
            </item>
            <item>
              <name>[Option] Command_R to RightClick</name>
              <identifier>option.mousekeys_mode_commandR2rightclick</identifier>
            </item>
            <item>
              <name>[Option] UIO to Click</name>
              <appendix>- U to LeftClick</appendix>
              <appendix>- I to MiddleClick</appendix>
              <appendix>- O to RightClick</appendix>
              <identifier>option.mousekeys_mode_uio2click</identifier>
            </item>
            <item>
              <name>[Option] JIS_EISUU to LeftClick</name>
              <appendix></appendix>
              <appendix>// If you are using Apple keyboards, this setting may be useless.</appendix>
              <appendix>// Because Apple keyboards have a 2-key rollover problem,</appendix>
              <appendix>// and can't recognize JIS_EISUU while pressing S,D keys.</appendix>
              <identifier>option.mousekeys_mode_jis_eisuu2leftclick</identifier>
            </item>
            <item>
              <name>[Option] JIS_KANA to RightClick</name>
              <identifier>option.mousekeys_mode_jis_kana2rightclick</identifier>
            </item>
            <item>
              <name>[Option] Ignore Hardware CursorMove Events</name>
              <identifier>option.mousekeys_mode_droppointingrelativecursormove</identifier>
              <config_only>remap.simultaneouskeypresses_mouse_keys_mode_commandSD, remap.simultaneouskeypresses_mouse_keys_mode_shiftSD, remap.simultaneouskeypresses_mouse_keys_mode_df, remap.simultaneouskeypresses_mouse_keys_mode_cx</config_only>
              <autogen>--DropPointingRelativeCursorMove--</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Vi Mode</name>
      <list>
        <item>
          <name>Command_L+hjkl to Left/Down/Up/Right</name>
          <identifier>option.vimode_commandl_hjkl</identifier>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::COMMAND_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::COMMAND_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::COMMAND_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::COMMAND_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Command_R+hjkl to Left/Down/Up/Right</name>
          <identifier>option.vimode_hjkl</identifier>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::COMMAND_R, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::COMMAND_R, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::COMMAND_R, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Control_L+hjkl to Left/Down/Up/Right</name>
          <identifier>option.vimode_control_hjkl</identifier>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Fn+hjkl to Left/Down/Up/Right</name>
          <identifier>option.vimode_fn_hjkl</identifier>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::FN, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::FN, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::FN, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::FN, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Option_L+hjkl to Left/Down/Up/Right</name>
          <identifier>option.extra_cursor_optionL_kjhl</identifier>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Command_R+g/G to Home/End</name>
          <identifier>option.vimode_gG</identifier>
          <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::COMMAND_R | VK_SHIFT, KeyCode::END</autogen>
        </item>
        <item>
          <name>Control_L+g/G to Home/End</name>
          <identifier>option.vimode_control_gG</identifier>
          <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::CONTROL_L | VK_SHIFT, KeyCode::END</autogen>
        </item>
        <item>
          <name>Command_R+bf to PageUp/PageDown</name>
          <identifier>option.vimode_bf</identifier>
          <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::COMMAND_R, KeyCode::PAGEUP</autogen>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_R, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Coltrol_L+bf to PageUp/PageDown</name>
          <identifier>option.vimode_control_bf</identifier>
          <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::PAGEDOWN</autogen>
        </item>
        <item>
          <name>Command_R+0$ to Command+Left/Right</name>
          <identifier>option.vimode_0dollar</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::COMMAND_R | VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Control_L+0$ to Command+Left/Right</name>
          <identifier>option.vimode_control_0dollar</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::CONTROL_L | VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Option_L+hjkl to Option+Left/Down/Up/Right</name>
          <identifier>option.vimode_option_hjkl</identifier>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
        </item>
      </list>
    </item>

    <!-- #include "include/ubiquitous_vim_bindings.xml" -->

    <item>
      <name>Complete Vi Mode</name>
      <list>
        <item>
          <name>What's Complete Vi Mode?</name>
          <appendix>You can use Vi style navigation on any applications when "Complete Vi Mode" is on.</appendix>
          <appendix>Turn on a setting below, and toggle "Complete Vi Mode".</appendix>
          <appendix></appendix>
          <appendix>It is a list of the operation.</appendix>
          <appendix>- hjkl to Left/Down/Up/Right</appendix>
          <appendix>- b to Option_L+Left</appendix>
          <appendix>- e to Option_L+Right</appendix>
          <appendix>- w to Option_L+Right,Option_L+Right,Option_L+Left</appendix>
          <appendix>- Control+F to PageDown</appendix>
          <appendix>- Control+B to PageUp</appendix>
          <appendix>- g to Home</appendix>
          <appendix>- Shift+g to End</appendix>
          <appendix>- 0 to Command_L+Left</appendix>
          <appendix>- $ to Command_L+Right ($ == Shift+4)</appendix>
          <appendix>- / to Command_L+F (+ turn off Vi Mode)</appendix>
          <appendix>- n to Command_L+G</appendix>
          <appendix>- x to Forward Delete</appendix>
          <appendix>- Shift+x to Delete</appendix>
          <appendix>- f to Fn</appendix>
          <appendix>- i to turn off Vi Mode</appendix>
          <identifier vk_config="true">notsave.complete_vimode</identifier>
          <autogen>--ShowStatusMessage-- Vi Mode</autogen>
          <block>
            <config_not>option.complete_vimode_dvorak</config_not>
            <!-- HJKL -->
            <autogen>--KeyToKey-- KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
            <autogen>--KeyToKey-- KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
            <autogen>--KeyToKey-- KeyCode::K, KeyCode::CURSOR_UP</autogen>
            <autogen>--KeyToKey-- KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>

            <!-- 0, Shift+4 -->
            <autogen>--KeyToKey-- KeyCode::KEY_0, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- KeyCode::KEY_4, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>

            <!-- C-f, C-b -->
            <autogen>--KeyToKey-- KeyCode::F, VK_CONTROL, KeyCode::PAGEDOWN</autogen>
            <autogen>--KeyToKey-- KeyCode::B, VK_CONTROL, KeyCode::PAGEUP</autogen>

            <!-- B, E -->
            <autogen>--KeyToKey-- KeyCode::B, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>--KeyToKey-- KeyCode::E, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>

            <!-- W -->
            <autogen>--KeyToKey-- KeyCode::W, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>

            <!-- G, Shift+G -->
            <autogen>--KeyToKey-- KeyCode::G, VK_SHIFT, KeyCode::END</autogen>
            <autogen>--KeyToKey-- KeyCode::G, KeyCode::HOME</autogen>

            <!-- SLASH, N -->
            <autogen>--KeyToKey-- KeyCode::SLASH, KeyCode::F, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_complete_vimode</autogen>
            <autogen>--KeyToKey-- KeyCode::N, KeyCode::G, ModifierFlag::COMMAND_L</autogen>

            <!-- X -->
            <autogen>--KeyToKey-- KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::DELETE</autogen>
            <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>

            <!-- F, I -->
            <autogen>--KeyToKey-- KeyCode::F, KeyCode::FN</autogen>
            <autogen>--KeyToKey-- KeyCode::I, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
          </block>
          <block>
            <config_only>option.complete_vimode_dvorak</config_only>
            <!-- HJKL -->
            <autogen>--KeyToKey-- KeyCode::J, KeyCode::CURSOR_LEFT</autogen>
            <autogen>--KeyToKey-- KeyCode::C, KeyCode::CURSOR_DOWN</autogen>
            <autogen>--KeyToKey-- KeyCode::V, KeyCode::CURSOR_UP</autogen>
            <autogen>--KeyToKey-- KeyCode::P, KeyCode::CURSOR_RIGHT</autogen>

            <!-- 0, Shift+4 -->
            <autogen>--KeyToKey-- KeyCode::KEY_0, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- KeyCode::KEY_4, VK_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>

            <!-- C-f, C-b -->
            <autogen>--KeyToKey-- KeyCode::Y, VK_CONTROL, KeyCode::PAGEDOWN</autogen>
            <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::PAGEUP</autogen>

            <!-- B, E -->
            <autogen>--KeyToKey-- KeyCode::N, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
            <autogen>--KeyToKey-- KeyCode::D, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>

            <!-- W -->
            <autogen>--KeyToKey-- KeyCode::COMMA, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>

            <!-- G, Shift+G -->
            <autogen>--KeyToKey-- KeyCode::U, VK_SHIFT, KeyCode::END</autogen>
            <autogen>--KeyToKey-- KeyCode::U, KeyCode::HOME</autogen>

            <!-- SLASH, N -->
            <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, KeyCode::Y, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_FORCE_OFF_notsave_complete_vimode</autogen>
            <autogen>--KeyToKey-- KeyCode::L, KeyCode::U, ModifierFlag::COMMAND_L</autogen>

            <!-- X -->
            <autogen>--KeyToKey-- KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::DELETE</autogen>
            <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>

            <!-- F, I -->
            <autogen>--KeyToKey-- KeyCode::Y, KeyCode::FN</autogen>
            <autogen>--KeyToKey-- KeyCode::G, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
          </block>
        </item>

        <item>
          <name>Option</name>
          <list>
            <item>
              <name>Dvorak logical HJKL to navigate</name>
              <identifier>option.complete_vimode_dvorak</identifier>
            </item>
          </list>
        </item>

        <item>
          <name>Simultaneous Key Presses [Command_L+Command_R] to toggle Vi Mode</name>
          <identifier>remap.vimode_toggle_commandLR</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::COMMAND_R, KeyCode::COMMAND_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Arrow(Down/Left/Right) to Option_L</name>
          <appendix>Disable Up-Arrow</appendix>
          <appendix>(+ When you type Arrow only, toggle Vi Mode)</appendix>
          <identifier>remap.vimode_toggle_arrow2optionL</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::CURSOR_UP,    KeyCode::VK_NONE,  KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
          <autogen>--KeyOverlaidModifier-- KeyCode::CURSOR_DOWN,  KeyCode::OPTION_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
          <autogen>--KeyOverlaidModifier-- KeyCode::CURSOR_LEFT,  KeyCode::OPTION_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
          <autogen>--KeyOverlaidModifier-- KeyCode::CURSOR_RIGHT, KeyCode::OPTION_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Backquote(`) to toggle Vi Mode (if no modifiers pressed)</name>
          <identifier>option.vimode_turnoff_backquote</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Command_L to Command_L</name>
          <appendix>(+ When you type Command_L only, toggle Vi Mode)</appendix>
          <identifier>remap.vimode_toggle_commandL</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, toggle Vi Mode)</appendix>
          <identifier>remap.vimode_toggle_commandR</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Control_R to Control_R</name>
          <appendix>(+ When you type Control_R only, toggle Vi Mode)</appendix>
          <identifier>remap.vimode_toggle_controlR</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::CONTROL_R, KeyCode::CONTROL_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Escape to turn on Vi Mode</name>
          <appendix>(except in Vim)</appendix>
          <identifier>remap.vimode_turnon_escape</identifier>
          <not>VI</not>
          <config_not>notsave.complete_vimode</config_not>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_ON_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Escape to turn off Vi Mode</name>
          <appendix>(+ turn off Modifier Lock)</appendix>
          <identifier>option.vimode_turnoff_escape</identifier>
          <config_only>notsave.complete_vimode</config_only>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Return to Command_L+Control_L</name>
          <appendix>(+ When you type Return only, toggle Vi Mode)</appendix>
          <identifier>remap.vimode_toggle_return</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::RETURN, KeyCode::CONTROL_L, ModifierFlag::COMMAND_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Fn to Fn</name>
          <appendix>(+ When you type Fn only, toggle Vi Mode)</appendix>
          <identifier>remap.vimode_toggle_fn2fn</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::FN, KeyCode::FN, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Option+V to toggle Vi Mode</name>
          <identifier>option.vimode_toggle_optionV</identifier>
          <autogen>--KeyToKey-- KeyCode::V, VK_OPTION, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Option+V to turn on Vi Mode</name>
          <identifier>option.vimode_turnon_optionV</identifier>
          <autogen>--KeyToKey-- KeyCode::V, VK_OPTION, KeyCode::VK_CONFIG_FORCE_ON_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Disable Shift_L</name>
          <appendix>(+ When you type Shift_L only, toggle Vi Mode)</appendix>
          <identifier>remap.vimode_toggle_drop_shiftL</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::VK_NONE, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
      </list>
    </item>

    <!-- #include "include/simultaneouskeypresses_vimode.xml" -->

    <item>
      <name>Simultaneous Key Presses</name>
      <list>
        <item>
          <name>Simultaneous Key Presses [F+HJKL] to Left/Down/Up/Right</name>
          <appendix>(F+H to Left)</appendix>
          <appendix>(F+J to Down)</appendix>
          <appendix>(F+K to Up)</appendix>
          <appendix>(F+L to Right)</appendix>
          <identifier>remap.simultaneouskeypresses_vimode_f</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::H, KeyCode::F, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--SimultaneousKeyPresses-- KeyCode::J, KeyCode::F, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--SimultaneousKeyPresses-- KeyCode::K, KeyCode::F, KeyCode::CURSOR_UP</autogen>
          <autogen>--SimultaneousKeyPresses-- KeyCode::L, KeyCode::F, KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [F+J] to Return</name>
          <identifier>remap.simultaneouskeypresses_fj_to_return</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::F, KeyCode::J, KeyCode::RETURN</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [F+J] to Command+Space(invoke Launchbar,Quicksilver,etc)</name>
          <identifier>remap.simultaneouskeypresses_fj_to_command_space</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::F, KeyCode::J, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [X+C] to Escape</name>
          <identifier>remap.simultaneouskeypresses_xc2escape</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::C, KeyCode::X, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [Z+X] to LeftClick</name>
          <identifier>remap.simultaneouskeypresses_zx2leftclick</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::X, KeyCode::Z, PointingButton::LEFT</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [M+N] to F13</name>
          <identifier>remap.simultaneouskeypresses_mn2f13</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::N, KeyCode::M, KeyCode::F13</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [F+N] to Fn_Lock</name>
          <identifier>remap.simultaneouskeypresses_fn_to_fnlock</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::F, KeyCode::N, KeyCode::VK_LOCK_FN</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [V+I] to toggle Complete Vi Mode</name>
          <identifier>remap.simultaneouskeypresses_vi_to_vimode</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::V, KeyCode::I, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [Q+P] to M</name>
          <identifier>remap.simultaneouskeypresses_pq2m</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::P, KeyCode::Q, KeyCode::M</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [K+L] to Control_L+F4 (= Move focus to the active (or next) window)</name>
          <appendix>(+ Shift+[K+L] to EXPOSE_ALL)</appendix>
          <appendix>(+ Control+[K+L] to F8)</appendix>
          <identifier>remap.simultaneouskeypresses_kl2controlLf4</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::K, KeyCode::L, VK_SHIFT,   KeyCode::EXPOSE_ALL</autogen>
          <autogen>--SimultaneousKeyPresses-- KeyCode::K, KeyCode::L, VK_CONTROL, KeyCode::F8</autogen>
          <autogen>--SimultaneousKeyPresses-- KeyCode::K, KeyCode::L,             KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [K+L] to PC Application Key</name>
          <appendix>(We can change the key once again)</appendix>
          <identifier>remap.simultaneouskeypresses_kl2pc_application</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::K, KeyCode::L, KeyCode::PC_APPLICATION, SimultaneousKeyPresses::Option::RAW</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [Shift_R+Up Arrow] to PC Application Key</name>
          <appendix>(We can change the key once again)</appendix>
          <identifier>remap.simultaneouskeypresses_shiftRuparrow2pc_application</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::CURSOR_UP, KeyCode::SHIFT_R, KeyCode::PC_APPLICATION, SimultaneousKeyPresses::Option::RAW</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [Up-Arrow+Down-Arrow] to PC Application Key</name>
          <appendix>(We can change the key once again)</appendix>
          <identifier>remap.simultaneouskeypresses_UpDown2pc_application</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::CURSOR_UP, KeyCode::CURSOR_DOWN, KeyCode::PC_APPLICATION, SimultaneousKeyPresses::Option::RAW</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [K+L] to Return</name>
          <appendix>(We can change the key once again)</appendix>
          <identifier>remap.simultaneouskeypresses_kl2return</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::K, KeyCode::L, KeyCode::RETURN, SimultaneousKeyPresses::Option::RAW</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [S+D] to Esc</name>
          <identifier>remap.simultaneouskeypresses_sd_to_esc</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::S, KeyCode::D, KeyCode::ESCAPE</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [Shift_L+Shift_R] to Capslock</name>
          <identifier>remap.simultaneouskeypresses_ss_to_capslock</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::SHIFT_L, KeyCode::SHIFT_R, KeyCode::CAPSLOCK</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [Command_L+Command_R] to Return</name>
          <appendix>(We can change the key once again)</appendix>
          <identifier>remap.simultaneouskeypresses_commandLcommandR2return</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::COMMAND_L, KeyCode::COMMAND_R, KeyCode::RETURN, SimultaneousKeyPresses::Option::RAW</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For Expose, Spaces</name>
      <list>
        <item>
          <name>Disable Slow-Expose (Disable Shift+Expose, Shift+Dashboard, Shift+F8,...,Shift+F12)</name>
          <identifier>option.drop_slowexpose</identifier>
          <autogen>--DropKeyAfterRemap-- KeyCode::EXPOSE_ALL, VK_SHIFT</autogen>
          <autogen>--DropKeyAfterRemap-- KeyCode::DASHBOARD,  VK_SHIFT</autogen>
          <autogen>--DropKeyAfterRemap-- KeyCode::F8,         VK_SHIFT</autogen>
          <autogen>--DropKeyAfterRemap-- KeyCode::F9,         VK_SHIFT</autogen>
          <autogen>--DropKeyAfterRemap-- KeyCode::F10,        VK_SHIFT</autogen>
          <autogen>--DropKeyAfterRemap-- KeyCode::F11,        VK_SHIFT</autogen>
          <autogen>--DropKeyAfterRemap-- KeyCode::F12,        VK_SHIFT</autogen>
        </item>
        <item>
          <name>Expose Mode</name>
          <list>
            <item>
              <name>What's Expose Mode?</name>
              <appendix>This makes it easy to use Expose.</appendix>
              <appendix>You can do Expose by an alphabet key instead of F8,F9,..,F12 keys.</appendix>
              <appendix></appendix>
              <appendix>- S to Spaces (F8)</appendix>
              <appendix>- E to Expose</appendix>
              <appendix>- D to Desktop</appendix>
              <appendix>- A to Application windows</appendix>
              <appendix>- B to Dashboard</appendix>
              <appendix>- F to Move focus to active or next window (Control+F4)</appendix>
              <identifier vk_config="true">notsave.expose_mode</identifier>
              <autogen>--ShowStatusMessage-- Expose Mode</autogen>
              <autogen>--KeyToKey-- KeyCode::S, KeyCode::F8</autogen>
              <autogen>--KeyToKey-- KeyCode::E, KeyCode::EXPOSE_ALL</autogen>
              <autogen>--KeyToKey-- KeyCode::D, KeyCode::EXPOSE_ALL, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A, KeyCode::EXPOSE_ALL, ModifierFlag::CONTROL_L</autogen>
              <autogen>--KeyToKey-- KeyCode::B, KeyCode::DASHBOARD</autogen>
              <autogen>--KeyToKey-- KeyCode::F, KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
            </item>
            <item>
              <name>Simultaneous Key Presses [K+L] to toggle Expose Mode</name>
              <identifier>remap.simultaneouskeypresses_expose_kl</identifier>
              <autogen>--SimultaneousKeyPresses-- KeyCode::K, KeyCode::L, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_expose_mode</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Cmd+Tab Mode</name>
          <list>
            <item>
              <name>What's Cmd+Tab Mode?</name>
              <appendix>This makes it easy to use Command+Tab.</appendix>
              <appendix></appendix>
              <appendix>- Return: decide an application.</appendix>
              <appendix>- Escape: cancel.</appendix>
              <appendix>- Tab: Switch application--cycle forward.</appendix>
              <appendix>- Shift: Switch application--cycle backward.</appendix>
              <appendix>- Arrow keys: move a selection.</appendix>
              <identifier vk_config="true">notsave.cmdtab_mode</identifier>
              <autogen>--ShowStatusMessage-- Cmd+Tab</autogen>
              <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::RETURN, KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_cmdtab_mode</autogen>
              <autogen>--KeyToKey-- KeyCode::ESCAPE, KeyCode::ESCAPE, KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_cmdtab_mode</autogen>
              <autogen>--KeyToKey-- KeyCode::TAB, KeyCode::TAB</autogen>
              <autogen>--KeyToKey-- KeyCode::SHIFT_L, KeyCode::TAB, ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::TAB, ModifierFlag::SHIFT_R</autogen>
              <block>
                <config_only>remap.cmdtab_mode_controlM</config_only>
                <autogen>--KeyToKey-- KeyCode::M, VK_CONTROL, KeyCode::RETURN, KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_cmdtab_mode</autogen>
              </block>
              <block>
                <config_only>remap.cmdtab_mode_control_bracket_left</config_only>
                <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, KeyCode::ESCAPE, KeyCode::VK_LOCK_COMMAND_L_FORCE_OFF, KeyCode::VK_CONFIG_FORCE_OFF_notsave_cmdtab_mode</autogen>
              </block>
              <block>
                <config_only>remap.cmdtab_mode_hjkl</config_only>
                <autogen>--KeyToKey-- KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
                <autogen>--KeyToKey-- KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
                <autogen>--KeyToKey-- KeyCode::K, KeyCode::CURSOR_UP</autogen>
                <autogen>--KeyToKey-- KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
              </block>
              <block>
                <config_only>remap.cmdtab_mode_jkil</config_only>
                <autogen>--KeyToKey-- KeyCode::J, KeyCode::CURSOR_LEFT</autogen>
                <autogen>--KeyToKey-- KeyCode::K, KeyCode::CURSOR_DOWN</autogen>
                <autogen>--KeyToKey-- KeyCode::I, KeyCode::CURSOR_UP</autogen>
                <autogen>--KeyToKey-- KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
              </block>
            </item>
            <item>
              <name>Simultaneous Key Presses [Tab+Q] to toggle Cmd+Tab</name>
              <identifier>remap.simultaneouskeypresses_cmdtab_tabq</identifier>
              <autogen>--SimultaneousKeyPresses-- KeyCode::TAB, KeyCode::Q, KeyCode::VK_CONFIG_FORCE_ON_notsave_cmdtab_mode, KeyCode::VK_LOCK_COMMAND_L_FORCE_ON, KeyCode::TAB</autogen>
            </item>
            <item>
              <name>[Option] Control+M to Return</name>
              <identifier>remap.cmdtab_mode_controlM</identifier>
            </item>
            <item>
              <name>[Option] Control+[ to Escape</name>
              <identifier>remap.cmdtab_mode_control_bracket_left</identifier>
            </item>
            <item>
              <name>[Option] HJKL to Arrow Keys</name>
              <identifier>remap.cmdtab_mode_hjkl</identifier>
            </item>
            <item>
              <name>[Option] JKIL to Arrow Keys</name>
              <identifier>remap.cmdtab_mode_jkil</identifier>
            </item>
          </list>
        </item>
        <item>
          <name>For Spaces</name>
          <list>
            <item>
              <name>Use Command_R+[ASD FGH JKL] for Spaces</name>
              <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
              <identifier>remap.spaces_special</identifier>
              <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command_R+[123 QWE ASD] for Spaces (3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
              <identifier>remap.spaces_special_123qweasd</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Q,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command_R+[123 QWE ASD] for Spaces (4x4)</name>
              <appendix>(Cmd+Ctrl+Shift+[123 567 90], Cmd+Ctrl+Option+Shift[1])</appendix>
              <identifier>remap.spaces_special_123qweasd_4x4</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Q,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_0, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D,     ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command_R+[QWE ASD ZXC] for Spaces (3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123 456 789])</appendix>
              <identifier>remap.spaces_special_qweasdzxc</identifier>
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command_R+[QWE ASD ZXC] for Spaces (3x3)</name>
              <appendix>(Command+Control+Option+[123 456 789])</appendix>
              <identifier>remap.spaces_special_qweasdzxc_without_shift</identifier>
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCO_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCO_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCO_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCO_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCO_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCO_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCO_L</autogen>
              <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCO_L</autogen>
              <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCO_L</autogen>
            </item>
            <item>
              <name>Use Fn+[123456789] for Spaces</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <identifier>remap.spaces_special_fn</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use FN+[WER SDF XCV] for Spaces (3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <identifier>remap.spaces_special_fn_wersdfxcv</identifier>
              <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Fn+[1234 QWER ASDF ZXCV] for Spaces (4x4)</name>
              <appendix>(Cmd+Ctrl+Shift+[1234 5678 90], Cmd+Ctrl+Option+Shift[12 3456])</appendix>
              <identifier>remap.spaces_special_1234qwerasdfzxcv</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Q,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::R,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::A,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_0, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::F,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Z,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::X,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::C,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::V,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Fn+[7890 UIOP JKL; M,./] for Spaces (4x4)</name>
              <appendix>(Cmd+Ctrl+Shift+[1234 5678 90], Cmd+Ctrl+Option+Shift[12 3456])</appendix>
              <identifier>remap.spaces_special_7890uiopjklm</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_7,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_8,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_0,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::U,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::I,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::O,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::P,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::J,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::K,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_0, VK_MOD_CCS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::L,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::M,         ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::COMMA,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::DOT,       ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::SLASH,     ModifierFlag::FN | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Option_R+[WER SDF XCV] for Spaces (3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <identifier>remap.spaces_special_optionr_wersdfxcv</identifier>
              <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::OPTION_R | ModifierFlag::NONE, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use KeyPad numbers for Spaces(3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <identifier>remap.spaces_special_keypad</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Command+KeyPad numbers for Spaces(3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <identifier>option.keypad2spaces_modifier_command</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, VK_COMMAND, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, VK_COMMAND, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, VK_COMMAND, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, VK_COMMAND, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, VK_COMMAND, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, VK_COMMAND, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, VK_COMMAND, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, VK_COMMAND, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, VK_COMMAND, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Control+KeyPad numbers for Spaces(3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <identifier>option.keypad2spaces_modifier_control</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, VK_CONTROL, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, VK_CONTROL, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, VK_CONTROL, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, VK_CONTROL, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, VK_CONTROL, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, VK_CONTROL, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, VK_CONTROL, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, VK_CONTROL, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, VK_CONTROL, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
            </item>
            <item>
              <name>Use Option+KeyPad numbers for Spaces(3x3)</name>
              <appendix>(Command+Control+Option+Shift+[123456789])</appendix>
              <identifier>option.keypad2spaces_modifier_option</identifier>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_1, VK_OPTION, KeyCode::KEY_7, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_2, VK_OPTION, KeyCode::KEY_8, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_3, VK_OPTION, KeyCode::KEY_9, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_4, VK_OPTION, KeyCode::KEY_4, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_5, VK_OPTION, KeyCode::KEY_5, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_6, VK_OPTION, KeyCode::KEY_6, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_7, VK_OPTION, KeyCode::KEY_1, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_8, VK_OPTION, KeyCode::KEY_2, VK_MOD_CCOS_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEYPAD_9, VK_OPTION, KeyCode::KEY_3, VK_MOD_CCOS_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>For Applications</name>
      <list>
        <item>
          <name>Enable at only VMware Fusion, Parallels Desktop</name>
          <list>
            <item>
              <name>Change Enter to Control_L</name>
              <identifier>remap.app_vm_enter2controlL</identifier>
              <only>VIRTUALMACHINE</only>
              <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::CONTROL_L</autogen>
            </item>
            <item>
              <name>Change Fn+Return to Insert</name>
              <identifier>remap.app_vm_fnReturn2insert</identifier>
              <only>VIRTUALMACHINE</only>
              <autogen>--KeyToKey-- KeyCode::RETURN, ModifierFlag::FN, KeyCode::HELP</autogen>
            </item>
            <item>
              <name>Change Option_R to Control_R</name>
              <identifier>remap.app_vm_optionR2controlR</identifier>
              <only>VIRTUALMACHINE</only>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
            </item>
            <item>
              <name>Change Ctrl+Q to Alt+F4</name>
              <only>VIRTUALMACHINE</only>
              <identifier>remap.Ctrl_Q_to_Alt_F4</identifier>
              <autogen>--KeyToKey-- KeyCode::Q, VK_CONTROL, KeyCode::F4, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Change Command+Space to Option+Backquote(`)</name>
              <identifier>remap.app_vm_commandspace2optionbackquote</identifier>
              <only>VIRTUALMACHINE</only>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_COMMAND, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Change Command+Space to Option_L+Shift_L</name>
              <identifier>remap.app_vm_commandspace2optionLshiftL</identifier>
              <only>VIRTUALMACHINE</only>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Change Command_L Keys</name>
              <appendix>(To support Emacs on Fusion. This allows controlling individual key translations)</appendix>
              <list>
                <item>
                  <name>Change Command_L to Option_L</name>
                  <identifier>remap.app_vm_commandL2optionL</identifier>
                  <appendix>(Option_L is translated to Alt_L by Fusion)</appendix>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
                </item>
                <item>
                  <name>Change Command_L+A to Control+A</name>
                  <identifier>remap.app_vm_commandLA</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_L, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_L+C to Control+C</name>
                  <identifier>remap.app_vm_commandLC</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_L+F to Control+F</name>
                  <identifier>remap.app_vm_commandLF</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_L, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_L+P to Control+P</name>
                  <identifier>remap.app_vm_commandLP</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::P, ModifierFlag::COMMAND_L, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_L+V to Control+V</name>
                  <identifier>remap.app_vm_commandLV</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::COMMAND_L, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_L+X to Control+X</name>
                  <identifier>remap.app_vm_commandLX</identifier>
                  <appendix>(Leave it unchecked for using left Meta+X in Emacs on Fusion)</appendix>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::COMMAND_L, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_L+Z to Control+Z</name>
                  <identifier>remap.app_vm_commandLZ</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::COMMAND_L, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Change Command_R Keys</name>
              <appendix>(To support Emacs on Fusion. This allows controlling individual key translations)</appendix>
              <list>
                <item>
                  <name>Change Command_R to Option_R</name>
                  <appendix>(This allows controlling individual key translations)</appendix>
                  <identifier>remap.app_vm_commandR2optionR</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
                </item>
                <item>
                  <name>Change Command_R+A to Control+A</name>
                  <identifier>remap.app_vm_commandRA</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::COMMAND_R, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_R+C to Control+C</name>
                  <identifier>remap.app_vm_commandRC</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_R, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_R+F to Control+F</name>
                  <identifier>remap.app_vm_commandRF</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::COMMAND_R, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_R+P to Control+P</name>
                  <identifier>remap.app_vm_commandRP</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::P, ModifierFlag::COMMAND_R, KeyCode::P, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_R+V to Control+V</name>
                  <identifier>remap.app_vm_commandRV</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::COMMAND_R, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_R+X to Control+X</name>
                  <appendix>(Leave it unchecked for using right Meta+X in Emacs on Fusion)</appendix>
                  <identifier>remap.app_vm_commandRX</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::COMMAND_R, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Change Command_R+Z to Control+Z </name>
                  <identifier>remap.app_vm_commandRZ</identifier>
                  <only>VIRTUALMACHINE</only>
                  <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::COMMAND_R, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
                </item>
              </list>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Finder</name>
          <list>
            <item>
              <name>Windows Explorer Navigation for Finder</name>
              <list>
                <item>
                  <name>Use Command+R as Rename</name>
                  <appendix>(Change Command+R to Return)</appendix>
                  <identifier>remap.app_finder_command_R_to_return</identifier>
                  <only>FINDER</only>
                  <autogen>--KeyToKey-- KeyCode::R, VK_COMMAND, KeyCode::RETURN</autogen>
                </item>
                <item>
                  <name>Use F2 to Rename (Use Tab to complete Rename)</name>
                  <appendix>(Change F2 to Return)</appendix>
                  <identifier>remap.app_finder_f2_to_return</identifier>
                  <only>FINDER</only>
                  <autogen>--KeyToKey-- KeyCode::F2, KeyCode::RETURN</autogen>
                </item>
                <item>
                  <name>Use Forward Delete as Delete Files</name>
                  <appendix>(Change Forward Delete to Command_L+Delete)</appendix>
                  <identifier>remap.app_finder_forwarddelete2commandLdelete</identifier>
                  <only>FINDER</only>
                  <autogen>--KeyToKey-- FROMKEYCODE_FORWARD_DELETE, KeyCode::DELETE, ModifierFlag::COMMAND_L</autogen>
                </item>
                <item>
                  <name>Return Key Opens a file</name>
                  <appendix>(use F2 to rename but caution not to use Return when done typing name or file opens)</appendix>
                  <only>FINDER</only>
                  <identifier>remap.KPReturn_to_Ctrl_O</identifier>
                  <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::O, ModifierFlag::COMMAND_L</autogen>
                </item>
                <item>
                  <name>Use Return as Open</name>
                  <appendix>(+ Use Fn+Return as Rename)</appendix>
                  <appendix>(Change Return to Command+O)</appendix>
                  <appendix>(Change Fn+Return to Return)</appendix>
                  <identifier>remap.app_finder_return2commandO</identifier>
                  <only>FINDER</only>
                  <autogen>--KeyToKey-- KeyCode::RETURN, ModifierFlag::FN, KeyCode::RETURN</autogen>
                  <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::O, ModifierFlag::COMMAND_L</autogen>
                </item>
                <item>
                  <name>Use Enter as Open</name>
                  <appendix>(Change Enter to Command+O)</appendix>
                  <identifier>remap.app_finder_enter2commandO</identifier>
                  <only>FINDER</only>
                  <autogen>--KeyToKey-- KeyCode::ENTER, KeyCode::O, ModifierFlag::COMMAND_L</autogen>
                </item>
                <item>
                  <name>Use Quote (') to go UP a directory (' to Ctrl+Up)</name>
                  <only>FINDER</only>
                  <identifier>remap.Quote_to_Ctrl_UpArrow</identifier>
                  <autogen>--KeyToKey-- KeyCode::QUOTE, KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L</autogen>
                </item>
                <item>
                  <name>Use Semicolon to go Back in history (; to Ctrl+[)</name>
                  <only>FINDER</only>
                  <identifier>remap.Semicolon_to_Ctrl_LeftBrckt</identifier>
                  <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L</autogen>
                </item>
                <item>
                  <name>Use { to select next file (i.e. up arrow key) ({ to Up-Arrow)</name>
                  <only>FINDER</only>
                  <identifier>remap.CurlyLBracket_to_UpArrow</identifier>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::CURSOR_UP</autogen>
                </item>
                <item>
                  <name>Use } to select previous file (i.e. down arrow key) (} to Down-Arrow)</name>
                  <only>FINDER</only>
                  <identifier>remap.CurlyRBracket_to_DArrow</identifier>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, VK_SHIFT, KeyCode::CURSOR_DOWN</autogen>
                </item>
                <item>
                  <name>Use [ to collapse folder (i.e. left key) ([ to Left-Arrow)</name>
                  <only>FINDER</only>
                  <identifier>remap.LBracket_to_LArrow</identifier>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, KeyCode::CURSOR_LEFT</autogen>
                </item>
                <item>
                  <name>Use ] to expand folder (i.e. left key) (] to Left-Arrow)</name>
                  <only>FINDER</only>
                  <identifier>remap.RBracket_to_RArrow</identifier>
                  <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, KeyCode::CURSOR_RIGHT</autogen>
                </item>
              </list>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Terminal</name>
          <list>
            <item>
              <name>Change Command_L to Option_L</name>
              <identifier>remap.app_term_commandL2optionL</identifier>
              <only>TERMINAL</only>
              <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>Change Command_L to Option_L</name>
              <appendix>(Pass-Through Tab and Backquote)</appendix>
              <identifier>remap.app_term_commandL2optionL_except_tab</identifier>
              <only>TERMINAL</only>
              <autogen>--KeyToKey-- KeyCode::TAB, ModifierFlag::OPTION_L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>Change Delete Key</name>
              <list>
                <item>
                  <name>Delete to Control_L+H</name>
                  <identifier>remap.app_term_delete2controlLh</identifier>
                  <only>TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Control+Delete to Control_L+H</name>
                  <identifier>remap.app_term_controldelete2controlLh</identifier>
                  <only>TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::DELETE, VK_CONTROL, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Option+Delete to Control_L+H</name>
                  <identifier>remap.app_term_optiondelete2controlLh</identifier>
                  <only>TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::DELETE, VK_OPTION, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Shift+Delete to Control_L+H</name>
                  <identifier>remap.app_term_shiftdelete2controlLh</identifier>
                  <only>TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT, KeyCode::H, ModifierFlag::CONTROL_L</autogen>
                </item>
                <item>
                  <name>Control+Delete to Delete</name>
                  <identifier>remap.app_term_controldelete2delete</identifier>
                  <only>TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::DELETE, VK_CONTROL, KeyCode::DELETE</autogen>
                </item>
                <item>
                  <name>Option+Delete to Delete</name>
                  <identifier>remap.app_term_optiondelete2delete</identifier>
                  <only>TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::DELETE, VK_OPTION, KeyCode::DELETE</autogen>
                </item>
                <item>
                  <name>Shift+Delete to Delete</name>
                  <identifier>remap.app_term_shiftdelete2delete</identifier>
                  <only>TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::DELETE, VK_SHIFT, KeyCode::DELETE</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Change Option_L to Command_L</name>
              <identifier>remap.app_term_optionL2commandL</identifier>
              <only>TERMINAL</only>
              <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
            </item>
            <item>
              <name>Change Option_R to Control_R</name>
              <identifier>remap.app_term_optionR2controlR</identifier>
              <only>TERMINAL</only>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
            </item>
            <item>
              <name>Change Slash(/) Key</name>
              <list>
                <item>
                  <name>Control+Shift+Slash(/) to Delete</name>
                  <identifier>remap.app_term_controlshiftslash2delete</identifier>
                  <only>TERMINAL</only>
                  <autogen>--KeyToKey-- KeyCode::SLASH, VK_CONTROL | VK_SHIFT, KeyCode::DELETE</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Change Functional Keys to F1...F12</name>
              <appendix>(For keyboards of F10 == Volume Mute)</appendix>
              <identifier>remap.app_term_functional2function</identifier>
              <only>TERMINAL</only>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
              <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_DOWN, KeyCode::F1</autogen>
              <autogen>--KeyToKey-- KeyCode::BRIGHTNESS_UP, KeyCode::F2</autogen>
              <autogen>--KeyToKey-- KeyCode::EXPOSE_ALL, KeyCode::F3</autogen>
              <autogen>--KeyToKey-- KeyCode::DASHBOARD, KeyCode::F4</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::KEYBOARDLIGHT_LOW, KeyCode::F5</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::KEYBOARDLIGHT_HIGH, KeyCode::F6</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_PREV, KeyCode::F7</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_PLAY, KeyCode::F8</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::MUSIC_NEXT, KeyCode::F9</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_MUTE, KeyCode::F10</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_DOWN, KeyCode::F11</autogen>
              <autogen>--ConsumerToKey-- ConsumerKeyCode::VOLUME_UP, KeyCode::F12</autogen>
            </item>
            <item>
              <name>Change Option+y to F18</name>
              <only>TERMINAL</only>
              <identifier>remap.app_term_optionY2f18</identifier>
              <autogen>--KeyToKey-- KeyCode::Y, VK_OPTION, KeyCode::F18</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Adobe Softwares</name>
          <list>
            <item>
              <name>Change Command+Tab to Control_L+Tab</name>
              <identifier>remap.app_adobe_commandTab2controlLTab</identifier>
              <only>ADOBE, PHOTOSHOP, ILLUSTRATOR</only>
              <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Firefox/Thunderbird</name>
          <list>
            <item>
              <name>Fix Home/End</name>
              <appendix>(Home/End move to beg/end of line, Ctl/Cmd+Home/End move to beg/end of page)</appendix>
              <identifier>remap.app_firefox_fix_home_end</identifier>
              <only>FIREFOX, THUNDERBIRD</only>
              <autogen>--KeyToKey-- FROMKEYCODE_HOME, VK_COMMAND, KeyCode::CURSOR_UP,   ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_HOME, VK_CONTROL, KeyCode::CURSOR_UP,   ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_END,  VK_COMMAND, KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_END,  VK_CONTROL, KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L</autogen>

              <autogen>--KeyToKey-- FROMKEYCODE_HOME, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_END, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Excel</name>
          <list>
            <item>
              <name>Change F2 to Ctrl+U</name>
              <identifier>remap.app_excel_f2_to_ctrlu</identifier>
              <only>EXCEL</only>
              <autogen>--KeyToKey-- KeyCode::F2, KeyCode::U, ModifierFlag::CONTROL_L</autogen>
            </item>
            <item>
              <name>Change F4 to Command+T</name>
              <identifier>remap.app_excel_f4_to_commandLt</identifier>
              <only>EXCEL</only>
              <autogen>--KeyToKey-- KeyCode::F4, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Entourage</name>
          <list>
            <item>
              <name>Change PageUp/PageDown to Option+Up/Down</name>
              <identifier>remap.app_entourage_pageupdown_to_optionupdown</identifier>
              <only>ENTOURAGE</only>
              <autogen>--KeyToKey-- FROMKEYCODE_PAGEUP, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- FROMKEYCODE_PAGEDOWN, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only MacSOUP</name>
          <list>
            <item>
              <name>Change Option_R to Enter</name>
              <identifier>remap.app_macsoup_optionR2enter</identifier>
              <only>MACSOUP</only>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::ENTER</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Vienna</name>
          <list>
            <item>
              <name>Change Option_R to Enter</name>
              <identifier>remap.app_vienna_optionR2enter</identifier>
              <only>VIENNA</only>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::ENTER</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Gruml</name>
          <list>
            <item>
              <name>Change Option_R to Return</name>
              <identifier>remap.app_gruml_optionR2return</identifier>
              <only>GRUML</only>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::RETURN</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Launchbar</name>
          <list>
            <item>
              <name>Change Semicolon(;) to Return</name>
              <identifier>remap.app_launchbar_semicolon_to_return</identifier>
              <only>LAUNCHBAR</only>
              <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::RETURN</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Enable at only Remote Desktop Connection Client</name>
          <list>
            <item>
              <name>Command+Tab to Option+Tab</name>
              <appendix>(only in RDC)</appendix>
              <identifier>remap.app_rdc_commandTab2optionTab</identifier>
              <only>REMOTEDESKTOPCONNECTION</only>
              <autogen>--KeyToKey-- KeyCode::TAB, VK_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Command+XCVSZWF to Ctrl+XCVSZWF</name>
              <appendix>(only in RDC)</appendix>
              <identifier>remap.app_rdc_commandXCVSZWF2controlXCVSZWF</identifier>
              <only>REMOTEDESKTOPCONNECTION</only>
              <autogen>--KeyToKey-- KeyCode::X, VK_COMMAND, KeyCode::X, ModifierFlag::CONTROL_L</autogen>
              <autogen>--KeyToKey-- KeyCode::C, VK_COMMAND, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
              <autogen>--KeyToKey-- KeyCode::V, VK_COMMAND, KeyCode::V, ModifierFlag::CONTROL_L</autogen>
              <autogen>--KeyToKey-- KeyCode::S, VK_COMMAND, KeyCode::S, ModifierFlag::CONTROL_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Z, VK_COMMAND, KeyCode::Z, ModifierFlag::CONTROL_L</autogen>
              <autogen>--KeyToKey-- KeyCode::Y, VK_COMMAND, KeyCode::Y, ModifierFlag::CONTROL_L</autogen>
              <autogen>--KeyToKey-- KeyCode::W, VK_COMMAND, KeyCode::W, ModifierFlag::CONTROL_L</autogen>
              <autogen>--KeyToKey-- KeyCode::F, VK_COMMAND, KeyCode::F, ModifierFlag::CONTROL_L</autogen>
            </item>
            <item>
              <name>Command+SPACE to Ctrl+SPACE</name>
              <appendix>(only in RDC)</appendix>
              <identifier>remap.app_rdc_commandSpace2controlSpace</identifier>
              <only>REMOTEDESKTOPCONNECTION</only>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_COMMAND, KeyCode::SPACE, ModifierFlag::CONTROL_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>

    <item>
      <name>Change Keyboard Layout</name>
      <list>
        <item>
          <name>Use Colemak Keyboard Layout</name>
          <identifier>remap.qwerty2colemak</identifier>
          <autogen>--KeyToKey-- KeyCode::E, KeyCode::F</autogen>
          <autogen>--KeyToKey-- KeyCode::R, KeyCode::P</autogen>
          <autogen>--KeyToKey-- KeyCode::T, KeyCode::G</autogen>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::J</autogen>
          <autogen>--KeyToKey-- KeyCode::U, KeyCode::L</autogen>
          <autogen>--KeyToKey-- KeyCode::I, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::O, KeyCode::Y</autogen>
          <autogen>--KeyToKey-- KeyCode::P, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::S, KeyCode::R</autogen>
          <autogen>--KeyToKey-- KeyCode::D, KeyCode::S</autogen>
          <autogen>--KeyToKey-- KeyCode::F, KeyCode::T</autogen>
          <autogen>--KeyToKey-- KeyCode::G, KeyCode::D</autogen>
          <autogen>--KeyToKey-- KeyCode::J, KeyCode::N</autogen>
          <autogen>--KeyToKey-- KeyCode::K, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::L, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::O</autogen>
          <autogen>--KeyToKey-- KeyCode::N, KeyCode::K</autogen>
        </item>
        <item>
          <name>Use QWERF Keyboard Layout</name>
          <identifier>remap.qwerty2qwerf</identifier>
          <autogen>--KeyToKey-- KeyCode::T, KeyCode::F</autogen>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::J</autogen>
          <autogen>--KeyToKey-- KeyCode::U, KeyCode::Y</autogen>
          <autogen>--KeyToKey-- KeyCode::I, KeyCode::K</autogen>
          <autogen>--KeyToKey-- KeyCode::O, KeyCode::L</autogen>
          <autogen>--KeyToKey-- KeyCode::P, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::F, KeyCode::T</autogen>
          <autogen>--KeyToKey-- KeyCode::J, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::K, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::L, KeyCode::O</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::P</autogen>
        </item>
        <item>
          <name>Use Workman Keyboard Layout</name>
          <identifier>remap.qwerty2workman</identifier>
          <autogen>--KeyToKey-- KeyCode::W, KeyCode::D</autogen>
          <autogen>--KeyToKey-- KeyCode::E, KeyCode::R</autogen>
          <autogen>--KeyToKey-- KeyCode::R, KeyCode::W</autogen>
          <autogen>--KeyToKey-- KeyCode::T, KeyCode::B</autogen>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::J</autogen>
          <autogen>--KeyToKey-- KeyCode::U, KeyCode::F</autogen>
          <autogen>--KeyToKey-- KeyCode::I, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::O, KeyCode::P</autogen>
          <autogen>--KeyToKey-- KeyCode::P, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::D, KeyCode::H</autogen>
          <autogen>--KeyToKey-- KeyCode::F, KeyCode::T</autogen>
          <autogen>--KeyToKey-- KeyCode::H, KeyCode::Y</autogen>
          <autogen>--KeyToKey-- KeyCode::J, KeyCode::N</autogen>
          <autogen>--KeyToKey-- KeyCode::K, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::L, KeyCode::O</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::C, KeyCode::M</autogen>
          <autogen>--KeyToKey-- KeyCode::V, KeyCode::C</autogen>
          <autogen>--KeyToKey-- KeyCode::B, KeyCode::V</autogen>
          <autogen>--KeyToKey-- KeyCode::N, KeyCode::K</autogen>
          <autogen>--KeyToKey-- KeyCode::M, KeyCode::L</autogen>
        </item>
        <item>
          <name>Use ABCDEF Keyboard Layout</name>
          <appendix>qwertyuiop &#8594; abcdefghij</appendix>
          <appendix>asdfghjkl &#8594; klmnopqrs</appendix>
          <appendix>zxcvbnm &#8594; tuvwxyz</appendix>
          <identifier>remap.qwerty2abcdef</identifier>
          <autogen>--KeyToKey-- KeyCode::Q, KeyCode::A</autogen>
          <autogen>--KeyToKey-- KeyCode::W, KeyCode::B</autogen>
          <autogen>--KeyToKey-- KeyCode::E, KeyCode::C</autogen>
          <autogen>--KeyToKey-- KeyCode::R, KeyCode::D</autogen>
          <autogen>--KeyToKey-- KeyCode::T, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::F</autogen>
          <autogen>--KeyToKey-- KeyCode::U, KeyCode::G</autogen>
          <autogen>--KeyToKey-- KeyCode::I, KeyCode::H</autogen>
          <autogen>--KeyToKey-- KeyCode::O, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::P, KeyCode::J</autogen>

          <autogen>--KeyToKey-- KeyCode::A, KeyCode::K</autogen>
          <autogen>--KeyToKey-- KeyCode::S, KeyCode::L</autogen>
          <autogen>--KeyToKey-- KeyCode::D, KeyCode::M</autogen>
          <autogen>--KeyToKey-- KeyCode::F, KeyCode::N</autogen>
          <autogen>--KeyToKey-- KeyCode::G, KeyCode::O</autogen>
          <autogen>--KeyToKey-- KeyCode::H, KeyCode::P</autogen>
          <autogen>--KeyToKey-- KeyCode::J, KeyCode::Q</autogen>
          <autogen>--KeyToKey-- KeyCode::K, KeyCode::R</autogen>
          <autogen>--KeyToKey-- KeyCode::L, KeyCode::S</autogen>

          <autogen>--KeyToKey-- KeyCode::Z, KeyCode::T</autogen>
          <autogen>--KeyToKey-- KeyCode::X, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::C, KeyCode::V</autogen>
          <autogen>--KeyToKey-- KeyCode::V, KeyCode::W</autogen>
          <autogen>--KeyToKey-- KeyCode::B, KeyCode::X</autogen>
          <autogen>--KeyToKey-- KeyCode::N, KeyCode::Y</autogen>
          <autogen>--KeyToKey-- KeyCode::M, KeyCode::Z</autogen>
        </item>
        <item>
          <name>Use US Keyboard Layout</name>
          <identifier>remap.layout2us</identifier>
          <autogen>--SetKeyboardType-- KeyboardType::MACBOOK</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For PC Users</name>
      <list>
        <item>
          <name>Change PC Application Key</name>
          <list>
            <item>
              <name>Application Key to CapsLock</name>
              <identifier>remap.pc_application2capslock</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::CAPSLOCK</autogen>
            </item>
            <item>
              <name>Application Key to Command_L</name>
              <identifier>remap.pc_application2commandL</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::COMMAND_L</autogen>
            </item>
            <item>
              <name>Application Key to Command_L</name>
              <appendix>(+ Application Key to Control_L in Terminal, Screen Sharing, MacVim,</appendix>
              <appendix>RDC, Emacs, X11, VNC)</appendix>
              <identifier>remap.pc_application2commandL_controlL</identifier>
              <block>
                <only>TERMINAL,SCREEN_SHARING, VI, REMOTEDESKTOPCONNECTION, EMACS, X11, VNC</only>
                <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::CONTROL_L</autogen>
              </block>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::COMMAND_L</autogen>
            </item>
            <item>
              <name>Application Key to Command_R</name>
              <identifier>remap.pc_application2commandR_comamndLspace</identifier>
              <appendix>(+ When you type Application only, send Command_L+Space)</appendix>
              <autogen>--KeyOverlaidModifier-- KeyCode::PC_APPLICATION, KeyCode::COMMAND_R, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
            </item>
            <item>
              <name>Application Key to Control_L</name>
              <identifier>remap.pc_application2controlL</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::CONTROL_L</autogen>
            </item>
            <item>
              <name>Application Key to Control_L</name>
              <appendix>(+ When you type Application Key only, send CapsLock)</appendix>
              <!-- Note: identifier has "jis_" prefix for compatibility. -->
              <identifier>remap.jis_pc_application2controlL_capslock</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::PC_APPLICATION, KeyCode::CONTROL_L, KeyCode::CAPSLOCK</autogen>
            </item>
            <item>
              <name>Application Key to Fn</name>
              <identifier>remap.pc_application2fn</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::FN</autogen>
            </item>
            <item>
              <name>Application Key to Fn</name>
              <appendix>(+ When you type Application only, send Fn_Lock)</appendix>
              <identifier>remap.pc_application2fn_fnlock</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::PC_APPLICATION, KeyCode::FN, KeyCode::VK_LOCK_FN</autogen>
            </item>
            <item>
              <name>Application Key to Option_L</name>
              <identifier>remap.pc_application2optionL</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>Application Key to Shift_L</name>
              <identifier>remap.pc_application2shiftL</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::SHIFT_L</autogen>
            </item>
            <item>
              <name>Application Key to Command_L+Backquote</name>
              <identifier>remap.pc_application2commandLbackquote</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
            </item>
            <item>
              <name>Application Key to Delete</name>
              <identifier>remap.pc_application2delete</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::DELETE</autogen>
            </item>
            <item>
              <name>Application Key to Delete</name>
              <appendix>(+ Command+Application Key to CapsLock)</appendix>
              <identifier>remap.pc_application2delete_capslock</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, VK_COMMAND, KeyCode::CAPSLOCK</autogen>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::DELETE</autogen>
            </item>
            <item>
              <name>Application Key to Escape</name>
              <identifier>remap.pc_application2escape</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>Application Key to Escape</name>
              <appendix>(+ Shift+Application Key to CapsLock)</appendix>
              <identifier>remap.pc_application2escape_capslock</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, VK_SHIFT, KeyCode::CAPSLOCK</autogen>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>Application Key to Expose All</name>
              <identifier>remap.pc_application2exposeALL</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::EXPOSE_ALL</autogen>
            </item>
            <item>
              <name>Application Key to F9</name>
              <identifier>remap.pc_application2f9</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::F9</autogen>
            </item>
            <item>
              <name>Application Key to F11</name>
              <identifier>remap.pc_application2f11</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::F11</autogen>
            </item>
            <item>
              <name>Application Key to Command_L+Space</name>
              <identifier>remap.pc_application2commandLspace</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::SPACE, ModifierFlag::COMMAND_L</autogen>
            </item>
            <item>
              <name>Application Key to Underscore(Shift_L+Minus)</name>
              <identifier>remap.pc_application2underscore</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_APPLICATION, KeyCode::MINUS, ModifierFlag::SHIFT_L</autogen>
            </item>
            <item>
              <name>Application Key to LeftClick</name>
              <identifier>remap.pc_application2leftclick</identifier>
              <autogen>--KeyToPointingButton-- KeyCode::PC_APPLICATION, PointingButton::LEFT</autogen>
            </item>
            <item>
              <name>Application Key to RightClick</name>
              <identifier>remap.pc_application2rightclick</identifier>
              <autogen>--KeyToPointingButton-- KeyCode::PC_APPLICATION, PointingButton::RIGHT</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change PC Insert Key</name>
          <list>
            <item>
              <name>Insert Key to Control_R</name>
              <identifier>remap.pc_insert2controlR</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_INSERT, KeyCode::CONTROL_R</autogen>
            </item>
            <item>
              <name>Insert Key to Option_L+Insert</name>
              <identifier>remap.pc_insert2optionLinsert</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_INSERT, KeyCode::PC_INSERT, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Insert Key to PageDown</name>
              <identifier>remap.pc_insert2pagedown</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_INSERT, KeyCode::PAGEDOWN</autogen>
            </item>
            <item>
              <name>Insert Key to Tab</name>
              <identifier>remap.pc_insert2tab</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_INSERT, KeyCode::TAB</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change PC NumLock Key</name>
          <list>
            <item>
              <name>NumLock Key to F11</name>
              <identifier>remap.pc_numlock2f11</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::F11</autogen>
            </item>
            <item>
              <name>Disable NumLock Key</name>
              <identifier>remap.drop_numlock</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::VK_NONE</autogen>
            </item>
            <item>
              <name>Disable NumLock Key (except in TeamViewer.app)</name>
              <not>TEAMVIEWER</not>
              <identifier>remap.drop_numlock_ex_teamviewer</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_KEYPAD_NUMLOCK, KeyCode::VK_NONE</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change PC Pause/Break Key</name>
          <list>
            <item>
              <name>Pause/Break Key to Eject</name>
              <identifier>remap.pc_pause2eject</identifier>
              <autogen>--KeyToConsumer-- KeyCode::PC_PAUSE, ConsumerKeyCode::EJECT</autogen>
            </item>
            <item>
              <name>Pause/Break Key to Power</name>
              <identifier>remap.pc_pause2power</identifier>
              <autogen>--KeyToConsumer-- KeyCode::PC_PAUSE, ConsumerKeyCode::POWER</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change PC PrintScreen Key</name>
          <list>
            <item>
              <name>PrintScreen Key to Eject</name>
              <identifier>remap.pc_printscreen2eject</identifier>
              <autogen>--KeyToConsumer-- KeyCode::PC_PRINTSCREEN, ConsumerKeyCode::EJECT</autogen>
            </item>
            <item>
              <name>PrintScreen Key to F12</name>
              <identifier>remap.pc_printscreen2f12</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_PRINTSCREEN, KeyCode::F12</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change PC ScrollLock Key</name>
          <list>
            <item>
              <name>ScrollLock Key to F13</name>
              <identifier>remap.pc_scrolllock2f13</identifier>
              <autogen>--KeyToKey-- KeyCode::PC_SCROLLLOCK, KeyCode::F13</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Use KeyPad as Arrow (PC Style NumLock)</name>
          <list>
            <item>
              <name>Enable KeyPad as Arrow</name>
              <appendix>(except virtual machine, RDC)</appendix>
              <identifier vk_config="true">remap.keypadnumlock</identifier>
              <block>
                <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
                <!-- #include "include/keypadnumlock.xml" -->
              </block>
              <block>
                <config_only>option.keypadnumlock_vm</config_only>
                <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                <!-- #include "include/keypadnumlock.xml" -->
              </block>
            </item>
            <item>
              <name>Use Clear Key to toggle "KeyPad as Arrow"</name>
              <appendix>(except virtual machine, RDC)</appendix>
              <identifier>option.keypadnumlock_togglekey_clear</identifier>
              <block>
                <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
                <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::VK_CONFIG_TOGGLE_remap_keypadnumlock</autogen>
              </block>
              <block>
                <config_only>option.keypadnumlock_vm</config_only>
                <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::VK_CONFIG_TOGGLE_remap_keypadnumlock</autogen>
              </block>
            </item>
            <item>
              <name>Enable KeyPad as Arrow</name>
              <appendix>(With PC Style Home/End/PageUp/PageDown)</appendix>
              <appendix>(- KeyPad_7 to Command_L+Left-Arrow)</appendix>
              <appendix>(- KeyPad_1 to Command_L+Right-Arrow)</appendix>
              <appendix>(- KeyPad_9 to Option_L+PageUp)</appendix>
              <appendix>(- KeyPad_3 to Option_L+PageDown)</appendix>
              <appendix>(except virtual machine, RDC)</appendix>
              <identifier vk_config="true">remap.keypadnumlock_pclikehomeend</identifier>
              <block>
                <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
                <!-- #include "include/keypadnumlock_pclikehomeend.xml" -->
              </block>
              <block>
                <config_only>option.keypadnumlock_vm</config_only>
                <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                <!-- We use normal Home/End/PageUp/PageDown in VM -->
                <!-- #include "include/keypadnumlock.xml" -->
              </block>
            </item>
            <item>
              <name>Use Clear Key to toggle "KeyPad as Arrow (PC Style Home/End/PageUp/PageDown)"</name>
              <appendix>(except virtual machine, RDC)</appendix>
              <identifier>option.keypadnumlock_pclikehomeend_togglekey_clear</identifier>
              <block>
                <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
                <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::VK_CONFIG_TOGGLE_remap_keypadnumlock_pclikehomeend</autogen>
              </block>
              <block>
                <config_only>option.keypadnumlock_vm</config_only>
                <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                <autogen>--KeyToKey-- KeyCode::KEYPAD_CLEAR, KeyCode::VK_CONFIG_TOGGLE_remap_keypadnumlock_pclikehomeend</autogen>
              </block>
            </item>
            <item>
              <name>[Option] Use "KeyPad as Arrow" in virtual machine, RDC</name>
              <identifier>option.keypadnumlock_vm</identifier>
            </item>
          </list>
        </item>
        <item>
          <name>Use PC Style Home/End</name>
          <appendix>(behave like Control_L+A/E)</appendix>
          <identifier>remap.pclikehomeend_emacs</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- FROMKEYCODE_HOME, VK_COMMAND, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_HOME, VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_END,  VK_COMMAND, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_END,  VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_HOME,             KeyCode::A, ModifierFlag::CONTROL_L</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_END,              KeyCode::E, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Use PC Style Home/End</name>
          <appendix>(behave like Command+Left/Right)</appendix>
          <identifier>remap.pclikehomeend</identifier>
          <block>
            <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
            <autogen>--KeyToKey-- FROMKEYCODE_HOME, VK_COMMAND, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- FROMKEYCODE_HOME, VK_CONTROL, KeyCode::CURSOR_UP,    ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- FROMKEYCODE_END,  VK_COMMAND, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- FROMKEYCODE_END,  VK_CONTROL, KeyCode::CURSOR_DOWN,  ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- FROMKEYCODE_HOME,             KeyCode::CURSOR_LEFT,  ModifierFlag::COMMAND_L</autogen>
            <autogen>--KeyToKey-- FROMKEYCODE_END,              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
          </block>
          <block>
            <only>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</only>
            <autogen>--KeyToKey-- FROMKEYCODE_HOME, KeyCode::A, ModifierFlag::CONTROL_L</autogen>
            <autogen>--KeyToKey-- FROMKEYCODE_END,  KeyCode::E, ModifierFlag::CONTROL_L</autogen>
          </block>
        </item>
        <item>
          <name>Use PC Style PageUp/PageDown</name>
          <appendix>(behave like Option+PageUp/PageDown)</appendix>
          <identifier>remap.pclikepageupdown</identifier>
          <not>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</not>
          <autogen>--KeyToKey-- FROMKEYCODE_PAGEUP, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- FROMKEYCODE_PAGEDOWN, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Use PC Style Copy/Paste</name>
          <appendix>(Control+C to Command_L+C)</appendix>
          <appendix>(Control+V to Command_L+V)</appendix>
          <appendix>(Control+X to Command_L+X)</appendix>
          <identifier>remap.copy_paste_winstyle</identifier>
          <autogen>--KeyToKey-- KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style Copy/Paste</name>
          <appendix>(Control+C to Command_L+C)</appendix>
          <appendix>(Control+V to Command_L+V)</appendix>
          <appendix>(Control+X to Command_L+X)</appendix>
          <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
          <identifier>remap.copy_paste_winstyle_no_term</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style Copy/Paste #2</name>
          <appendix>(Swap Control+C and Command_L+C)</appendix>
          <appendix>(Control+V to Command_L+V)</appendix>
          <appendix>(Control+X to Command_L+X)</appendix>
          <identifier>remap.copy_paste_winstyle2</identifier>
          <autogen>--KeyToKey-- KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::COMMAND_L, KeyCode::C, ModifierFlag::CONTROL_L</autogen>
        </item>
        <item>
          <name>Use PC Style Copy/Paste #3</name>
          <appendix>(Control+Insert to Command_L+C)</appendix>
          <appendix>(Shift+Insert to Command_L+V)</appendix>
          <appendix>(Shift+Delete to Command_L+X) (Note: "Delete" is Mac's Forward Delete)</appendix>
          <!-- Note: identifier name (*_2) is valid for compatibility. -->
          <identifier>remap.copy_paste_winstyle_2</identifier>
          <autogen>--KeyToKey-- KeyCode::PC_INSERT, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::PC_INSERT, VK_SHIFT, KeyCode::V, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::FORWARD_DELETE, VK_SHIFT, KeyCode::X, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style Undo</name>
          <appendix>(Control+Z to Command_L+Z)</appendix>
          <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
          <identifier>remap.undo_winstyle_no_term</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::Z, VK_CONTROL, KeyCode::Z, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style Select All</name>
          <appendix>(Control+A to Command_L+A)</appendix>
          <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
          <identifier>remap.select_all_winstyle_no_term</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::A, VK_CONTROL, KeyCode::A, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style Save</name>
          <appendix>(Control+S to Command_L+S)</appendix>
          <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
          <identifier>remap.save_winstyle_no_term</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::S, VK_CONTROL, KeyCode::S, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style New</name>
          <appendix>(Control+N to Command_L+N)</appendix>
          <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
          <identifier>remap.new_winstyle_no_term</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::N, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style New Tab In Browser</name>
          <appendix>(Control+T to Command_L+T)</appendix>
          <appendix>(only in Firefox, Google Chrome, Opera, Safari)</appendix>
          <identifier>remap.copy_paste_winstyle_new_browser_tab</identifier>
          <only>FIREFOX, GOOGLE_CHROME, OPERA, SAFARI</only>
          <autogen>--KeyToKey-- KeyCode::T, VK_CONTROL, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style New Tab</name>
          <appendix>(Control+T to Command_L+T)</appendix>
          <appendix>(Except in VM, RDC, Emacs, X11, Eclipse)</appendix>
          <identifier>remap.copy_paste_winstyle_new_tab</identifier>
          <not>EMACS, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::T, VK_CONTROL, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
        </item>
        <item>
          <name>Use PC Style Find</name>
          <appendix>(Control+F to Command_L+F)</appendix>
          <appendix>(Control+G to Command_L+G)</appendix>
          <appendix>(F3 to Command_L+G)</appendix>
          <appendix>(Control+F3 to Shift+Command_L+G)</appendix>
          <appendix>(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)</appendix>
          <identifier>remap.find_winstyle_no_term</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::F, VK_CONTROL, KeyCode::F, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::G, VK_CONTROL, KeyCode::G, ModifierFlag::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::F3, VK_CONTROL, KeyCode::G, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::F3, KeyCode::G, ModifierFlag::COMMAND_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For Dvorak Users</name>
      <list>
        <item>
          <name>Dvorak's Control+PNBF to Up/Down/Left/Right</name>
          <appendix>(except Emacs, Terminal, Virtual, RDC, X11, Eclipse)</appendix>
          <identifier>option.dvorak_emacsmode_controlPNBF</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::R, VK_CONTROL, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::Y, VK_CONTROL, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>--KeyToKey-- KeyCode::L, VK_CONTROL, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::N, VK_CONTROL, KeyCode::CURSOR_LEFT</autogen>
        </item>
        <item>
          <name>Dvorak's Control+H to Delete</name>
          <identifier>remap.dvorak_controlJ</identifier>
          <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::DELETE</autogen>
        </item>
        <item>
          <name>Dvorak's Control+D to Forward Delete</name>
          <identifier>remap.dvorak_controlH</identifier>
          <autogen>--KeyToKey-- KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Dvorak's Control+W to Option+Delete</name>
          <appendix>(except Emacs, Terminal, X11, virtual machine, RDC, Eclipse)</appendix>
          <identifier>option.dvorak_emacsmode_ex_controlW</identifier>
          <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE</not>
          <autogen>--KeyToKey-- KeyCode::COMMA, VK_CONTROL, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
        </item>

        <item>
          <name>Swap U and I (== Swap Qwerty::F and Qwerty::G)</name>
          <identifier>remap.dvorak_u2i</identifier>
          <!-- Dvorak:U == Qwerty:F, Dvorak:I == Qwerty:G -->
          <autogen>--KeyToKey-- KeyCode::F, KeyCode::G</autogen>
          <autogen>--KeyToKey-- KeyCode::G, KeyCode::F</autogen>
        </item>

        <!-- ============================================================ -->
        <!-- We must put "Use Dvorak Keyboard Layout" in the tail of Dvorak settings. -->
        <item>
          <name>Use Dvorak Keyboard Layout</name>
          <appendix>(QWERTY to Dvorak)</appendix>
          <identifier>remap.qwerty2dvorak</identifier>
          <!-- #include "include/dvorak.xml" -->
        </item>

        <item>
          <name>Use Dvorak Keyboard Layout</name>
          <appendix>(QWERTY to Dvorak, except in password dialogue boxes)</appendix>
          <identifier>remap.qwerty2dvorak_ex_password</identifier>
          <not>PASSWORD</not>
          <!-- #include "include/dvorak.xml" -->
        </item>

        <item>
          <name>Use Dvorak Keyboard Layout</name>
          <appendix>(QWERTY to Dvorak)</appendix>
          <appendix>(+ Swap U and I)</appendix>
          <identifier>remap.qwerty2dvorak_swap_ui</identifier>
          <autogen>--KeyToKey-- KeyCode::Q, KeyCode::QUOTE</autogen>
          <autogen>--KeyToKey-- KeyCode::W, KeyCode::COMMA</autogen>
          <autogen>--KeyToKey-- KeyCode::E, KeyCode::DOT</autogen>
          <autogen>--KeyToKey-- KeyCode::R, KeyCode::P</autogen>
          <autogen>--KeyToKey-- KeyCode::T, KeyCode::Y</autogen>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::F</autogen>
          <autogen>--KeyToKey-- KeyCode::U, KeyCode::G</autogen>
          <autogen>--KeyToKey-- KeyCode::I, KeyCode::C</autogen>
          <autogen>--KeyToKey-- KeyCode::O, KeyCode::R</autogen>
          <autogen>--KeyToKey-- KeyCode::P, KeyCode::L</autogen>
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, KeyCode::SLASH</autogen>
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, KeyCode::EQUAL</autogen>
          <autogen>--KeyToKey-- KeyCode::S, KeyCode::O</autogen>
          <autogen>--KeyToKey-- KeyCode::D, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::F, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::G, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::H, KeyCode::D</autogen>
          <autogen>--KeyToKey-- KeyCode::J, KeyCode::H</autogen>
          <autogen>--KeyToKey-- KeyCode::K, KeyCode::T</autogen>
          <autogen>--KeyToKey-- KeyCode::L, KeyCode::N</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, KeyCode::S</autogen>
          <autogen>--KeyToKey-- KeyCode::QUOTE, KeyCode::MINUS</autogen>
          <autogen>--KeyToKey-- KeyCode::Z, KeyCode::SEMICOLON</autogen>
          <autogen>--KeyToKey-- KeyCode::X, KeyCode::Q</autogen>
          <autogen>--KeyToKey-- KeyCode::C, KeyCode::J</autogen>
          <autogen>--KeyToKey-- KeyCode::V, KeyCode::K</autogen>
          <autogen>--KeyToKey-- KeyCode::B, KeyCode::X</autogen>
          <autogen>--KeyToKey-- KeyCode::N, KeyCode::B</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMA, KeyCode::W</autogen>
          <autogen>--KeyToKey-- KeyCode::DOT, KeyCode::V</autogen>
          <autogen>--KeyToKey-- KeyCode::SLASH, KeyCode::Z</autogen>
          <autogen>--KeyToKey-- KeyCode::MINUS, KeyCode::BRACKET_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::EQUAL, KeyCode::BRACKET_RIGHT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For HHK (Happy Hacking Keyboard) Users</name>
      <list>
        <item>
          <name>Enable HHK compatible Arrow Key Mode</name>
          <identifier>remap.hhkmode</identifier>
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, ModifierFlag::FN, KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON,    ModifierFlag::FN, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::QUOTE,        ModifierFlag::FN, KeyCode::CURSOR_RIGHT</autogen>
          <autogen>--KeyToKey-- KeyCode::SLASH,        ModifierFlag::FN, KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::L,            ModifierFlag::FN, KeyCode::PAGEUP</autogen>
          <autogen>--KeyToKey-- KeyCode::DOT,          ModifierFlag::FN, KeyCode::PAGEDOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::K,            ModifierFlag::FN, KeyCode::HOME</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMA,        ModifierFlag::FN, KeyCode::END</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_1,        ModifierFlag::FN, KeyCode::F1</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2,        ModifierFlag::FN, KeyCode::F2</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3,        ModifierFlag::FN, KeyCode::F3</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4,        ModifierFlag::FN, KeyCode::F4</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5,        ModifierFlag::FN, KeyCode::F5</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6,        ModifierFlag::FN, KeyCode::F6</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7,        ModifierFlag::FN, KeyCode::F7</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8,        ModifierFlag::FN, KeyCode::F8</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9,        ModifierFlag::FN, KeyCode::F9</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0,        ModifierFlag::FN, KeyCode::F10</autogen>
          <autogen>--KeyToKey-- KeyCode::MINUS,        ModifierFlag::FN, KeyCode::F11</autogen>
          <autogen>--KeyToKey-- KeyCode::EQUAL,        ModifierFlag::FN, KeyCode::F12</autogen>
        </item>
        <item>
          <name>Enable Fn+hjkl at HHK to Left/Down/Up/Right</name>
          <identifier>remap.hhkmode_vi_cursor</identifier>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_MULTIPLY, KeyCode::CURSOR_LEFT</autogen>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_SLASH,    KeyCode::CURSOR_DOWN</autogen>
          <autogen>--KeyToKey-- KeyCode::HOME,            KeyCode::CURSOR_UP</autogen>
          <autogen>--KeyToKey-- KeyCode::PAGEUP,          KeyCode::CURSOR_RIGHT</autogen>
        </item>
        <item>
          <name>Change Option_L+1...= to F1...F12 Keys</name>
          <identifier>remap.hhkmode_opt1_optEqual_to_f1_f12</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::OPTION_L,     KeyCode::F1</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::OPTION_L,     KeyCode::F2</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::OPTION_L,     KeyCode::F3</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::OPTION_L,     KeyCode::F4</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::OPTION_L,     KeyCode::F5</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::OPTION_L,     KeyCode::F6</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::OPTION_L,     KeyCode::F7</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::OPTION_L,     KeyCode::F8</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::OPTION_L,     KeyCode::F9</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::OPTION_L,     KeyCode::F10</autogen>
          <autogen>--KeyToKey-- KeyCode::MINUS, ModifierFlag::OPTION_L,     KeyCode::F11</autogen>
          <autogen>--KeyToKey-- KeyCode::EQUAL, ModifierFlag::OPTION_L,     KeyCode::F12</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For IBM Model M Keyboard Users</name>
      <list>
        <item>
          <name>Change IBM Model M Keyboard</name>
          <appendix>(with PS2-to-USB adapters (Chesen Electronics Corp))</appendix>
          <appendix>Bottom row of Model M keyboard:</appendix>
          <appendix>   Original: Ctrl Alt [space bar] Alt Ctrl</appendix>
          <appendix>   Remapped: Ctrl Cmd [space bar] Cmd Alt</appendix>
          <identifier>remap.modelMkeyboard</identifier>
          <device_only>DeviceVendor::CHESEN,DeviceProduct::CHESEN_PS2_TO_USB</device_only>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::COMMAND_R</autogen>
          <autogen>--KeyToKey-- KeyCode::CONTROL_R, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Swap Start (aka Command) and Alt keys on Windows keyboard</name>
          <identifier>remap.windows4mac</identifier>
          <autogen>--KeyToKey-- KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
          <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::COMMAND_R</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For Canadian</name>
      <list>
        <item>
          <name>Space to Option_L (when inputmode == canadian)</name>
          <identifier>remap.canadian_space2optionL</identifier>
          <inputmode_only>CANADIAN</inputmode_only>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Space to Option_L (when inputmode == canadian)</name>
          <appendix>(+ When you type Space only, send Space)</appendix>
          <identifier>remap.canadian_space2optionL_space</identifier>
          <inputmode_only>CANADIAN</inputmode_only>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::OPTION_L, KeyCode::SPACE</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For French</name>
      <list>
        <item>
          <name>Shift_L to Shift_L</name>
          <appendix>(+ When you type Shift_L only, send Backslash)</appendix>
          <identifier>remap.french_shiftL2shiftL_backslash</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::DOT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type Shift_R only, send Backslash)</appendix>
          <identifier>remap.french_shiftR2shiftR_backslash</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::DOT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Option+Shift+4 to Left Brace, Option+Shift+Minus to Right Brace</name>
          <appendix>Option+5 to Quote, Option+Right Paren to Minus</appendix>
          <identifier>remap.french_swap_brackets_and_braces</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_4,        VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_MINUS, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::FRENCH_RIGHT_PAREN, ModifierFlag::OPTION_L</autogen>

          <autogen>--KeyToKey-- KeyCode::KEY_5,              VK_OPTION | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_RIGHT_PAREN, VK_OPTION | ModifierFlag::NONE, KeyCode::FRENCH_MINUS, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Make MacBook AZERTY closer to the standard latin-9 mapping</name>
          <appendix>(For "French - Numerical" users)</appendix>
          <identifier>remap.french_azerty_to_latin9</identifier>
          <!-- - the key -/_ (where you put the brace), I would like to be =/+, that is, = on normal and + on SHIFT; -->
          <autogen>--KeyToKey-- KeyCode::FRENCH_MINUS, ModifierFlag::NONE, KeyCode::FRENCH_EQUAL</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_MINUS, VK_SHIFT | ModifierFlag::NONE, KeyCode::FRENCH_EQUAL, ModifierFlag::SHIFT_L</autogen>
          <!-- - the key 6, I would like to do -/6/|  (normal -, SHIFT 6, ALT+SHIFT |) -->
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::FRENCH_MINUS</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
          <!-- - the key =/+ I would like to be §/! -->
          <autogen>--KeyToKey-- KeyCode::FRENCH_EQUAL, ModifierFlag::NONE, KeyCode::KEY_6</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_EQUAL, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
          <!-- - ALT+SHIFT+2 gives ~ -->
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::N, ModifierFlag::OPTION_L</autogen>
          <!-- - ALT+SHIFT+3 gives # -->
          <autogen>--KeyToKey-- KeyCode::KEY_3, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::BACKSLASH, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Forgiving open brackets binding.</name>
          <appendix>Command+4 to Left Brace, Command+5 to Left Bracket</appendix>
          <identifier>remap.french_brackets_hack</identifier>
          <!-- command+4 to { -->
          <autogen>--KeyToKey-- KeyCode::KEY_4, VK_COMMAND | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
          <!-- command+5 to [ -->
          <autogen>--KeyToKey-- KeyCode::KEY_5, VK_COMMAND | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command_L+Circonflexe(^) to ´(Option+Shift+1)</name>
          <identifier>remap.french_commandLhat2optionshift1</identifier>
          <autogen>--KeyToKey-- KeyCode::FRENCH_HAT, ModifierFlag::COMMAND_L | ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command_R+Circonflexe(^) to ´(Option+Shift+1)</name>
          <identifier>remap.french_commandRhat2optionshift1</identifier>
          <autogen>--KeyToKey-- KeyCode::FRENCH_HAT, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For German</name>
      <list>
        <item>
          <name>Quote(´) to Forward Delete</name>
          <identifier>remap.german_quote2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::GERMAN_QUOTE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Swap Circumflex(^) and Less-Than(&lt;)</name>
          <appendix>(only in virtual machine)</appendix>
          <identifier>remap.german_swap_circumflex_lessthan_vm</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>--KeyToKey-- KeyCode::GERMAN_CIRCUMFLEX, KeyCode::GERMAN_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::GERMAN_LESS_THAN, KeyCode::GERMAN_CIRCUMFLEX</autogen>
        </item>
        <item>
          <name>Change Command+Q to @ (Option_L+L)</name>
          <list>
            <item>
              <name>Command_L+Q to @</name>
              <identifier>remap.german_commandLQ2optionLL</identifier>
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::L, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Command_R+Q to @</name>
              <identifier>remap.german_commandRQ2optionLL</identifier>
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_R, KeyCode::L, ModifierFlag::OPTION_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>map Developer Keyboard Layout</name>
          <list>
            <item>
              <name>map square bracket to PC Layout</name>
              <appendix>move Command_R + 8 to Option_L + 5</appendix>
              <appendix>move Command_R + 9 to Option_L + 6</appendix>
              <identifier>remap.german_map_square_bracket</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::COMMAND_R, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::COMMAND_R, KeyCode::KEY_6, ModifierFlag::OPTION_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>NEO Keyboard Layout Fixes</name>
          <appendix>BACKSLASH (#) to OPTION_R</appendix>
          <appendix></appendix>
          <appendix>// To change CAPSLOCK to OPTION_L,</appendix>
          <appendix>// install PCKeyboardHack and change CapsLock keycode to 58.</appendix>
          <identifier>remap.german_neo</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::OPTION_R</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Italian</name>
      <list>
        <item>
          <name>Option+AEIUO to àèìùò on "Italian Input Source"</name>
          <identifier>remap.italian_optionAEIUO_grave_italian</identifier>
          <autogen>--KeyToKey-- KeyCode::A, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::A</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::I, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::U, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::O, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::O</autogen>
        </item>
        <item>
          <name>Option+AEIUO to àèìùò on "U.S. Input Source"</name>
          <identifier>remap.italian_optionAEIUO_grave_us</identifier>
          <autogen>--KeyToKey-- KeyCode::A, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::A</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::I, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::U, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::O, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::O</autogen>
        </item>
        <item>
          <name>KeyPad Comma(,) to Dot(.) on "Italian Pro Input Source"</name>
          <identifier>remap.italian_keypadcomma2dot</identifier>
          <!-- ITALIAN_KEYPAD_COMMA is 0x41 (== KEYPAD_DOT) -->
          <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, KeyCode::DOT</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Japanese</name>
      <list>
        <item>
          <name>Change Backquote(`) Key</name>
          <list>
            <item>
              <name>Backquote(`) to KANA/EISUU (toggle)</name>
              <identifier>remap.jis_backquote_kana_eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Command_L Key</name>
          <list>
            <item>
              <name>Command_L to EISUU</name>
              <identifier>remap.jis_commandL2eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L to Command_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <identifier>remap.jis_commandL2commandL_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L to Command_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <appendix>(+ When you type Any modifiers+Command_L only, send EISUU)</appendix>
              <identifier>remap.jis_commandL2commandL_eisuu_ex</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, VK_MOD_ANY, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L to Command_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <appendix>(+ When you type Command_R+Command_L only, toggle Complete Vi Mode)</appendix>
              <identifier>remap.jis_commandL2commandL_vimode_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L to Command_L (except Terminal)</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <identifier>remap.jis_commandL2commandL_eisuu_ex_term</identifier>
              <not>TERMINAL</not>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L to Command_L</name>
              <appendix>(+ When you type Command_L only, send KANA/EISUU (toggle))</appendix>
              <identifier>remap.jis_commandL2commandL_toggle_kana_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
            <item>
              <name>Command_L to Control_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <identifier>remap.jis_commandL2controlL_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L to Control_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <appendix>(+ When you type Shift+Command_L only, send ESCAPE)</appendix>
              <identifier>remap.jis_commandL2controlL_eisuu_escape</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L to Control_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <appendix>(+ When you type Command_R+Command_L only, toggle Complete Vi Mode)</appendix>
              <appendix>(+ When you type Shift+Command_L only, send ESCAPE)</appendix>
              <identifier>remap.jis_commandL2controlL_eisuu_vimode_escape</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, ModifierFlag::COMMAND_R, KeyCode::CONTROL_L, ModifierFlag::COMMAND_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L to Option_L</name>
              <appendix>(+ When you type Command_L only, send EISUU)</appendix>
              <identifier>remap.jis_commandL2optionL_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L x2 to EISUU</name>
              <identifier>remap.jis_commandL_x2_to_eisuu</identifier>
              <autogen>--DoublePressModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_L x2 to EISUU x2 (for Kotoeri Users)</name>
              <identifier>remap.jis_commandL_x2_to_eisuu_x2</identifier>
              <autogen>--DoublePressModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::JIS_EISUU, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Use Command_L as KANA/EISUU (toggle)</name>
              <identifier>remap.jis_unify_kana_eisuu_to_commandL</identifier>
              <autogen>--KeyToKey-- KeyCode::COMMAND_L, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Command_R Key</name>
          <list>
            <item>
              <name>Command_R to EISUU</name>
              <identifier>remap.jis_commandR2eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Command_R to KANA</name>
              <identifier>remap.jis_commandR2kana</identifier>
              <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R to KANA</name>
              <appendix>(+ Any modifiers+Command_R to KANA)</appendix>
              <identifier>remap.jis_commandR2kana_ex</identifier>
              <autogen>--KeyToKey-- KeyCode::COMMAND_R, VK_MOD_ANY, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R to Shift_L+KANA</name>
              <identifier>remap.jis_commandR2shiftLkana</identifier>
              <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::JIS_KANA, ModifierFlag::SHIFT_L</autogen>
            </item>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, send KANA)</appendix>
              <identifier>remap.jis_commandR2commandR_kana</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, send KANA)</appendix>
              <appendix>(+ When you type Command_L+Command_R only, toggle Complete Vi Mode)</appendix>
              <identifier>remap.jis_commandR2commandR_vimode_kana</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, ModifierFlag::COMMAND_L, KeyCode::COMMAND_R, KeyCode::COMMAND_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, send KANA/EISUU (toggle))</appendix>
              <identifier>remap.jis_commandR2commandR_toggle_kana_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, send KANA)</appendix>
              <appendix>(+ When you type Shift+Command_R only, send Return)</appendix>
              <identifier>remap.jis_commandR2commandR_kana_return</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, VK_SHIFT, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, send KANA)</appendix>
              <appendix>(+ When you type Control+Command_R only, toggle Complete Vi Mode)</appendix>
              <appendix>(+ When you type Shift+Command_R only, send Return)</appendix>
              <identifier>remap.jis_commandR2commandR_kana_vimode_return</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, VK_SHIFT, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, VK_CONTROL, KeyCode::COMMAND_R, ModifierFlag::CONTROL_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R to Control_L</name>
              <appendix>(+ When you type Command_R only, send KANA)</appendix>
              <identifier>remap.jis_commandR2controlL</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::CONTROL_L, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R x2 to KANA</name>
              <identifier>remap.jis_commandR_x2_to_kana</identifier>
              <autogen>--DoublePressModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Command_R x2 to KANA x2 (for Kotoeri Users)</name>
              <identifier>remap.jis_commandR_x2_to_kana_x2</identifier>
              <autogen>--DoublePressModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::JIS_KANA, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Use Command_R as KANA/EISUU (toggle)</name>
              <identifier>remap.jis_unify_kana_eisuu_to_commandR</identifier>
              <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Delete Key</name>
          <list>
            <item>
              <name>Delete to KANA</name>
              <identifier>remap.jis_delete2kana</identifier>
              <autogen>--KeyToKey-- KeyCode::DELETE, KeyCode::JIS_KANA</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Escape Key</name>
          <list>
            <item>
              <name>Escape to EISUU+Escape</name>
              <identifier>remap.jis_escape2eisuuAndEscape</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::ESCAPE, KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Option_L Key</name>
          <list>
            <item>
              <name>Option_L to Option_L</name>
              <appendix>(+ When you type Option_L only, send EISUU)</appendix>
              <identifier>remap.jis_optionL2optionL_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::OPTION_L, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Option_R Key</name>
          <list>
            <item>
              <name>Option_R to Option_R</name>
              <appendix>(+ When you type Option_R only, send KANA)</appendix>
              <identifier>remap.jis_optionR2optionR_kana</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::OPTION_R, KeyCode::OPTION_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Option_R to EISUU</name>
              <identifier>remap.jis_optionR2eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Option_R to KANA</name>
              <identifier>remap.jis_optionR2kana</identifier>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>Use Option_R as KANA/EISUU (toggle)</name>
              <identifier>remap.jis_unify_kana_eisuu_to_optionR</identifier>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Return Key</name>
          <list>
            <item>
              <name>Return to KANA</name>
              <identifier>remap.jis_return2kana</identifier>
              <autogen>--KeyToKey-- KeyCode::RETURN, KeyCode::JIS_KANA</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Right Bracket(]) Key</name>
          <list>
            <item>
              <name>Right Bracket(]) to Backquote(`)</name>
              <identifier>remap.jis_rightbracket2backquote</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_RIGHT, KeyCode::BACKQUOTE</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Space Key</name>
          <list>
            <item>
              <name>Command+Space to KANA/EISUU (toggle)</name>
              <identifier>remap.jis_commandSpace2toggle_kana_eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
            <item>
              <name>Shift+Space to KANA/EISUU (toggle)</name>
              <identifier>remap.jis_shiftSpace2toggle_kana_eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_SHIFT, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
            <item>
              <name>Shift+Space to KANA/EISUU (toggle) (except Emacs.app)</name>
              <identifier>remap.jis_shiftSpace2toggle_kana_eisuu_ex_emacs</identifier>
              <not>EMACS</not>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_SHIFT, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
            <item>
              <name>Shift+Space to Equal</name>
              <appendix>(Disable when KANA mode)</appendix>
              <identifier>remap.jis_shiftSpace2equal</identifier>
              <inputmode_only>ROMAN</inputmode_only>
              <autogen>--KeyToKey-- KeyCode::SPACE, VK_SHIFT, KeyCode::EQUAL</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Tab Key</name>
          <list>
            <item>
              <name>Tab to EISUU</name>
              <identifier>remap.jis_tab2eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::TAB, KeyCode::JIS_EISUU</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change EISUU Key</name>
          <list>
            <item>
              <name>EISUU to Command_L</name>
              <identifier>remap.jis_eisuu2commandL</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::COMMAND_L</autogen>
            </item>
            <item>
              <name>EISUU to Command_L</name>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <identifier>remap.jis_eisuu2commandL_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>EISUU to Command_L (except Terminal)</name>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <not>TERMINAL</not>
              <identifier>remap.jis_eisuu2commandL_eisuu_ex_term</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, KeyCode::COMMAND_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>EISUU to Control_L</name>
              <identifier>remap.jis_eisuu2controlL</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::CONTROL_L</autogen>
            </item>
            <item>
              <name>EISUU to Control_L</name>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <identifier>remap.jis_eisuu2controlL_eisuu</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>EISUU to Control_L</name>
              <appendix>(+ When you type Shift+EISUU only, send Escape)</appendix>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <identifier>remap.jis_eisuu2controlL_eisuu_escape</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>EISUU to Control_L</name>
              <appendix>(+ When you type Shift+EISUU only, send Escape)</appendix>
              <appendix>(+ When you type Command_R+EISUU only, toggle Complete Vi Mode)</appendix>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <identifier>remap.jis_eisuu2controlL_eisuu_vimode_escape</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, VK_SHIFT, KeyCode::CONTROL_L, ModifierFlag::SHIFT_L, KeyCode::ESCAPE</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, ModifierFlag::COMMAND_R, KeyCode::CONTROL_L, ModifierFlag::COMMAND_R, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, KeyCode::CONTROL_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>EISUU to Fn</name>
              <identifier>remap.jis_eisuu2fn</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::FN</autogen>
            </item>
            <item>
              <name>EISUU to Option_L</name>
              <identifier>remap.jis_eisuu2optionL</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>EISUU to Option_L (only in Terminal)</name>
              <appendix>(+ When you type EISUU only, send EISUU)</appendix>
              <only>TERMINAL</only>
              <identifier>remap.jis_eisuu2optionL_eisuu_term</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>EISUU to Shift_L</name>
              <identifier>remap.jis_eisuu2shiftL</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::SHIFT_L</autogen>
            </item>
            <item>
              <name>EISUU to ModifierFlag::EXTRA1</name>
              <identifier>remap.jis_eisuu2modextra1</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::VK_MODIFIER_EXTRA1</autogen>
            </item>
            <item>
              <name>EISUU to Delete</name>
              <identifier>remap.jis_eisuu2delete</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::DELETE</autogen>
            </item>
            <item>
              <name>Command+EISUU to EISUU</name>
              <identifier>remap.jis_commandEisuu2eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, VK_COMMAND, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>EISUU to Escape</name>
              <identifier>remap.jis_eisuu2escape</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>EISUU to Escape (only when inputmode == roman)</name>
              <identifier>remap.jis_eisuu2escape_onlyroman</identifier>
              <inputmode_only>ROMAN</inputmode_only>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>EISUU to Control_L+F2 (= Move focus to the menu bar)</name>
              <identifier>remap.jis_eisuu2controlLf2</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::F2, ModifierFlag::CONTROL_L</autogen>
            </item>
            <item>
              <name>EISUU to Space</name>
              <identifier>remap.jis_eisuu2space</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::SPACE</autogen>
            </item>
            <item>
              <name>EISUU to Space</name>
              <appendix>(+ 英数キー長押しで通常の英数キーにする)</appendix>
              <identifier>remap.jis_eisuu2space_holdingeisuu2eisuu</identifier>
              <autogen>--HoldingKeyToKey-- KeyCode::JIS_EISUU, KeyCode::SPACE, KeyCode::VK_NONE, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>EISUU to Tab</name>
              <identifier>remap.jis_eisuu2tab</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::TAB</autogen>
            </item>
            <item>
              <name>EISUU to MiddleClick</name>
              <identifier>remap.jis_eisuu2middleclick</identifier>
              <autogen>--KeyToPointingButton-- KeyCode::JIS_EISUU, PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>EISUU to RightClick</name>
              <identifier>remap.jis_eisuu2rightclick</identifier>
              <autogen>--KeyToPointingButton-- KeyCode::JIS_EISUU, PointingButton::RIGHT</autogen>
            </item>
            <item>
              <name>Use EISUU as KANA/EISUU (toggle)</name>
              <identifier>remap.jis_unify_kana_to_eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
            <item>
              <name>Ignore the multiple press of EISUU</name>
              <identifier>remap.jis_ignore_multiple_eisuu</identifier>
              <autogen>--IgnoreMultipleSameKeyPress-- KeyCode::JIS_EISUU</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change KANA Key</name>
          <list>
            <item>
              <name>KANA to Command_L</name>
              <identifier>remap.jis_kana2commandL</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::COMMAND_L</autogen>
            </item>
            <item>
              <name>KANA to Command_R</name>
              <appendix>(+ When you type KANA only, send KANA)</appendix>
              <identifier>remap.jis_kana2commandR_kana</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>KANA to Command_R</name>
              <appendix>(+ When you type Shift+KANA only, send Return)</appendix>
              <appendix>(+ When you type KANA only, send KANA)</appendix>
              <identifier>remap.jis_kana2commandR_kana_return</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, VK_SHIFT, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>KANA to Command_R</name>
              <appendix>(+ When you type Shift+KANA only, send Return)</appendix>
              <appendix>(+ When you type Control+KANA only, toggle Complete Vi Mode)</appendix>
              <appendix>(+ When you type KANA only, send KANA)</appendix>
              <identifier>remap.jis_kana2commandR_kana_vimode_return</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, VK_SHIFT, KeyCode::COMMAND_R, ModifierFlag::SHIFT_L, KeyCode::RETURN</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, VK_CONTROL, KeyCode::COMMAND_R, ModifierFlag::CONTROL_L, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, KeyCode::COMMAND_R, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>KANA to Control_L</name>
              <identifier>remap.jis_kana2controlL</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::CONTROL_L</autogen>
            </item>
            <item>
              <name>KANA to Control_L</name>
              <appendix>(+ When you type KANA only, send KANA)</appendix>
              <identifier>remap.jis_kana2controlL_kana</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, KeyCode::CONTROL_L, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>KANA to Fn</name>
              <identifier>remap.jis_kana2fn</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::FN</autogen>
            </item>
            <item>
              <name>KANA to Option_L</name>
              <identifier>remap.jis_kana2optionL</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::OPTION_L</autogen>
            </item>
            <item>
              <name>KANA to Shift_L</name>
              <identifier>remap.jis_kana2shiftL</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::SHIFT_L</autogen>
            </item>
            <item>
              <name>KANA to Shift_L</name>
              <appendix>(+ When you type KANA only, send KANA)</appendix>
              <identifier>remap.jis_kana2shiftL_kana</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, KeyCode::SHIFT_L, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>KANA to Control_L+F2 (= Move focus to the menu bar)</name>
              <identifier>remap.jis_kana2controlLf2</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::F2, ModifierFlag::CONTROL_L</autogen>
            </item>
            <item>
              <name>Command+KANA to KANA</name>
              <identifier>remap.jis_commandKana2kana</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, VK_COMMAND, KeyCode::JIS_KANA</autogen>
            </item>
            <item>
              <name>KANA to Return</name>
              <identifier>remap.jis_kana2return</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::RETURN</autogen>
            </item>
            <item>
              <name>KANA to Space</name>
              <identifier>remap.jis_kana2space</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::SPACE</autogen>
            </item>
            <item>
              <name>KANA to MiddleClick</name>
              <identifier>remap.jis_kana2middleclick</identifier>
              <autogen>--KeyToPointingButton-- KeyCode::JIS_KANA, PointingButton::MIDDLE</autogen>
            </item>
            <item>
              <name>KANA to RightClick</name>
              <identifier>remap.jis_kana2rightclick</identifier>
              <autogen>--KeyToPointingButton-- KeyCode::JIS_KANA, PointingButton::RIGHT</autogen>
            </item>
            <item>
              <name>Shift+KANA to EISUU</name>
              <identifier>remap.jis_shiftKana2eisuu</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, VK_SHIFT, KeyCode::JIS_EISUU</autogen>
            </item>
            <item>
              <name>Use KANA as KANA/EISUU (toggle)</name>
              <identifier>remap.jis_unify_eisuu_to_kana</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_KANA, KeyCode::VK_JIS_TOGGLE_EISUU_KANA</autogen>
            </item>
            <item>
              <name>Ignore the multiple press of KANA</name>
              <identifier>remap.jis_ignore_multiple_kana</identifier>
              <autogen>--IgnoreMultipleSameKeyPress-- KeyCode::JIS_KANA</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Underscore(Ro) Key</name>
          <list>
            <item>
              <name>Underscore(Ro) to Shift_R</name>
              <identifier>remap.jis_underscore2shiftR</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, KeyCode::SHIFT_R</autogen>
            </item>
            <item>
              <name>Underscore(Ro) to Backslash(\)</name>
              <identifier>remap.jis_underscore2backslash</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::VK_JIS_BACKSLASH</autogen>
            </item>
            <item>
              <name>Underscore(Ro) to Delete</name>
              <identifier>remap.jis_underscore2delete</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, KeyCode::DELETE</autogen>
            </item>
            <item>
              <name>Underscore(Ro) to JIS Yen(¥)</name>
              <identifier>remap.jis_underscore2jis_yen</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN</autogen>
            </item>
            <item>
              <name>Underscore(Ro) to JIS Yen(¥) (if no modifiers pressed)</name>
              <identifier>remap.jis_underscore2jis_yen_nomods</identifier>
              <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Yen(¥) Key</name>
          <list>
            <item>
              <name>JIS Yen(¥) to Backslash(\)</name>
              <appendix>(except virtual machine, X11)</appendix>
              <identifier>remap.jis_yen2backslash</identifier>
              <not>VIRTUALMACHINE, X11</not>
              <autogen>--KeyToKey-- KeyCode::JIS_YEN, KeyCode::VK_JIS_BACKSLASH</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Zero(0) Key</name>
          <list>
            <item>
              <name>Shift+0 to Backslash(\)</name>
              <identifier>remap.jis_shift0_to_backslash</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_0, VK_SHIFT, KeyCode::VK_JIS_BACKSLASH</autogen>
            </item>
            <item>
              <name>Shift+0 to JIS Yen(¥)</name>
              <identifier>remap.jis_shift0_to_yen</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_0, VK_SHIFT, KeyCode::JIS_YEN</autogen>
            </item>
            <item>
              <name>Shift+0 to Underscore(Ro)</name>
              <identifier>remap.jis_shift0_to_underscore</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_0, VK_SHIFT, KeyCode::JIS_UNDERSCORE</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Emacs Mode</name>
          <list>
            <item>
              <name>Control+[ to Escape at Japanese Keyboard</name>
              <identifier>option.jis_emacsmode_controlLeftbracket</identifier>
              <not>EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11</not>
              <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>Behavior in Emacs, Terminal, X11, VMware, Parallels, RDC</name>
              <list>
                <item>
                  <name>Force change C-[ to Escape</name>
                  <list>
                    <item>
                      <name>In Emacs, Terminal</name>
                      <identifier>option.jis_emacsmode_force_controlLeftbracket_term</identifier>
                      <only>EMACS, TERMINAL</only>
                      <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                    </item>
                    <item>
                      <name>In X11</name>
                      <identifier>option.jis_emacsmode_force_controlLeftbracket_x11</identifier>
                      <only>X11</only>
                      <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                    </item>
                    <item>
                      <name>In VMware Fusion, Parallels Desktop, Remote Desktop Connection</name>
                      <identifier>option.jis_emacsmode_force_controlLeftbracket_vm</identifier>
                      <only>VIRTUALMACHINE, REMOTEDESKTOPCONNECTION</only>
                      <autogen>--KeyToKey-- KeyCode::JIS_BRACKET_LEFT, VK_CONTROL, KeyCode::ESCAPE</autogen>
                    </item>
                  </list>
                </item>
              </list>
            </item>
          </list>
        </item>
        <item>
          <name>For Applications</name>
          <list>
            <item>
              <name>Enable at only Terminal</name>
              <list>
                <item>
                  <name>Command_L to Option_L</name>
                  <appendix>(+ When you type Command_L only, send EISUU)</appendix>
                  <only>TERMINAL</only>
                  <identifier>remap.jis_app_commandL2optionL_eisuu</identifier>
                  <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
                </item>
                <item>
                  <name>Command_L to Option_L</name>
                  <appendix>(+ When you type Command_L only, send EISUU)</appendix>
                  <appendix>(Pass-Through Tab and Backquote)</appendix>
                  <only>TERMINAL</only>
                  <identifier>remap.jis_app_commandL2optionL_eisuu_except_tab</identifier>
                  <autogen>--KeyToKey-- KeyCode::TAB, ModifierFlag::OPTION_L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
                  <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
                  <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::OPTION_L, KeyCode::JIS_EISUU</autogen>
                </item>
                <item>
                  <name>JIS Yen(¥) to F18 (if no modifiers pressed)</name>
                  <only>TERMINAL</only>
                  <identifier>remap.jis_app_term_yen2f18</identifier>
                  <autogen>--KeyToKey-- KeyCode::JIS_YEN, ModifierFlag::NONE, KeyCode::F18</autogen>
                </item>
                <item>
                  <name>Underscore(Ro) to F18</name>
                  <appendix>(+ Underscore to JIS Yen(¥) except Terminal)</appendix>
                  <identifier>remap.jis_app_term_underscore2f18</identifier>
                  <block>
                    <only>TERMINAL</only>
                    <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::F18</autogen>
                  </block>
                  <block>
                    <not>TERMINAL</not>
                    <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, ModifierFlag::NONE, KeyCode::JIS_YEN</autogen>
                  </block>
                </item>
                <item>
                  <name>Shift+0 to F18</name>
                  <appendix>(+ Shift+0 to JIS Yen(¥) except Terminal)</appendix>
                  <identifier>remap.jis_app_term_shift0_to_f18</identifier>
                  <block>
                    <only>TERMINAL</only>
                    <autogen>--KeyToKey-- KeyCode::KEY_0, VK_SHIFT, KeyCode::F18</autogen>
                  </block>
                  <block>
                    <not>TERMINAL</not>
                    <autogen>--KeyToKey-- KeyCode::KEY_0, VK_SHIFT, KeyCode::JIS_YEN</autogen>
                  </block>
                </item>
              </list>
            </item>
            <item>
              <name>Enable at only Vim</name>
              <list>
                <item>
                  <name>Change EISUU to EISUU &amp; Escape</name>
                  <only>VI</only>
                  <identifier>remap.jis_app_vi_eisuu2eisuu_escape</identifier>
                  <autogen>--KeyToKey-- KeyCode::JIS_EISUU, KeyCode::JIS_EISUU, KeyCode::ESCAPE</autogen>
                </item>
              </list>
            </item>
          </list>
        </item>
        <item>
          <name>Change Keyboard Layout</name>
          <list>
            <item>
              <name>Use Japanese Keyboard as ASCII Keyboard</name>
              <identifier>remap.jis_jansi</identifier>
              <autogen>--SetKeyboardType-- KeyboardType::MACBOOK</autogen>
              <autogen>--KeyToKey-- KeyCode::JIS_YEN, KeyCode::BACKQUOTE</autogen>
              <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, KeyCode::BACKQUOTE</autogen>
            </item>
            <item>
              <name>Use ASCII Keyboard as Japanese Keyboard</name>
              <list>
                <item>
                  <name>Use ASCII Keyboard as Japanese Keyboard</name>
                  <identifier>remap.jis_layout_us2japanese</identifier>
                  <autogen>--SetKeyboardType-- KeyboardType::JIS_MACBOOK_2008</autogen>
                </item>
                <item>
                  <name>Options</name>
                  <list>
                    <item>
                      <name>Backquote(`) to JIS Yen(¥)</name>
                      <identifier>option.jis_layout_us2japanese_backquote2yen</identifier>
                      <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::JIS_YEN</autogen>
                    </item>
                    <item>
                      <name>Backquote(`) to Backslash</name>
                      <identifier>option.jis_layout_us2japanese_backquote2backslash</identifier>
                      <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::VK_JIS_BACKSLASH</autogen>
                    </item>
                    <item>
                      <name>Shift_R to Shift_R</name>
                      <appendix>(+ When you type Shift_R only, send Underscore)</appendix>
                      <identifier>option.jis_layout_us2japanese_shiftR2shiftR_underscore</identifier>
                      <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::JIS_UNDERSCORE</autogen>
                    </item>
                    <item>
                      <name>(Shift_L+Shift_R to Underscore)</name>
                      <identifier>option.jis_layout_us2japanese_shiftR2shiftR_shiftLshiftR2underscore</identifier>
                      <autogen>--KeyToKey-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::JIS_UNDERSCORE</autogen>
                    </item>
                  </list>
                </item>
              </list>
            </item>
            <item>
              <name>Use Japanese Keyboard as Semi-ASCII Keyboard</name>
              <appendix>Change Shift+semicolon(;) to colon(:)</appendix>
              <appendix>Change colon(:) to apostrophe(')</appendix>
              <appendix>Change Shift+colon(:) to double quote(")</appendix>
              <appendix>Change Shift+2 to plus(+)</appendix>
              <appendix>Change Shift+7 to asterisk(*)</appendix>
              <identifier>remap.jis_layout_semiascii</identifier>
              <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_SHIFT,           KeyCode::JIS_COLON</autogen>
              <!-- double quote(") == Shift+2 -->
              <autogen>--KeyToKey-- KeyCode::JIS_COLON, VK_SHIFT,           KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
              <!-- apostrophe(') == Shift+7 -->
              <autogen>--KeyToKey-- KeyCode::JIS_COLON,                     KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
              <!-- plus(+) == Shift+; -->
              <autogen>--KeyToKey-- KeyCode::KEY_2,     VK_SHIFT,           KeyCode::SEMICOLON, ModifierFlag::SHIFT_L</autogen>
              <!-- asterisk(*) == Shift+: -->
              <autogen>--KeyToKey-- KeyCode::KEY_7,     VK_SHIFT,           KeyCode::JIS_COLON, ModifierFlag::SHIFT_L</autogen>
            </item>
            <item>
              <name>Use JIS X 6004</name>
              <identifier>remap.jis_layout_jisx6004</identifier>
              <inputmodedetail_only>JAPANESE_HIRAGANA, JAPANESE, JAPANESE_KATAKANA, JAPANESE_HALFWIDTH_KANA</inputmodedetail_only>

              <!-- ====================================================================== -->
              <!-- Shift+Q -> small A (Shift+3) -->
              <autogen>--KeyToKey-- KeyCode::Q, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+W -> p-sound ([) -->
              <autogen>--KeyToKey-- KeyCode::W, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_BRACKET_LEFT</autogen>
              <!-- Shift+E -> HO (minus) -->
              <autogen>--KeyToKey-- KeyCode::E, VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS</autogen>
              <!-- Shift+R -> FU (2) -->
              <autogen>--KeyToKey-- KeyCode::R, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
              <!-- Shift+T -> ME (/) -->
              <autogen>--KeyToKey-- KeyCode::T, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH</autogen>
              <!-- Shift+Y -> HI (V) -->
              <autogen>--KeyToKey-- KeyCode::Y, VK_SHIFT | ModifierFlag::NONE, KeyCode::V</autogen>
              <!-- Shift+U -> E (5) -->
              <autogen>--KeyToKey-- KeyCode::U, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
              <!-- Shift+I -> MI (N) -->
              <autogen>--KeyToKey-- KeyCode::I, VK_SHIFT | ModifierFlag::NONE, KeyCode::N</autogen>
              <!-- Shift+O -> YA (7) -->
              <autogen>--KeyToKey-- KeyCode::O, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
              <!-- Shift+P -> NU (1) -->
              <autogen>--KeyToKey-- KeyCode::P, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
              <!-- Shift+[ -> [ (Shift+[) -->
              <autogen>--KeyToKey-- KeyCode::JIS_ATMARK, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>

              <!-- Q -> SO (C) -->
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::NONE, KeyCode::C</autogen>
              <!-- W -> KE (:) -->
              <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::NONE, KeyCode::JIS_COLON</autogen>
              <!-- E -> SE (P) -->
              <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::NONE, KeyCode::P</autogen>
              <!-- R -> TE (W) -->
              <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::NONE, KeyCode::W</autogen>
              <!-- T -> small YO (Shift+9) -->
              <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
              <!-- Y -> TU (Z) -->
              <autogen>--KeyToKey-- KeyCode::Y, ModifierFlag::NONE, KeyCode::Z</autogen>
              <!-- U -> NN (Y) -->
              <autogen>--KeyToKey-- KeyCode::U, ModifierFlag::NONE, KeyCode::Y</autogen>
              <!-- I -> NO (K) -->
              <autogen>--KeyToKey-- KeyCode::I, ModifierFlag::NONE, KeyCode::K</autogen>
              <!-- O -> WO (Shift+0) -->
              <autogen>--KeyToKey-- KeyCode::O, ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
              <!-- P -> RI (L) -->
              <autogen>--KeyToKey-- KeyCode::P, ModifierFlag::NONE, KeyCode::L</autogen>
              <!-- [ -> TI (A) -->
              <autogen>--KeyToKey-- KeyCode::JIS_ATMARK, ModifierFlag::NONE, KeyCode::A</autogen>

              <!-- ====================================================================== -->
              <!-- Shift+A -> small I (Shift+E) -->
              <autogen>--KeyToKey-- KeyCode::A, VK_SHIFT | ModifierFlag::NONE, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+S -> HE (^) -->
              <autogen>--KeyToKey-- KeyCode::S, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT</autogen>
              <!-- Shift+D -> RA (O) -->
              <autogen>--KeyToKey-- KeyCode::D, VK_SHIFT | ModifierFlag::NONE, KeyCode::O</autogen>
              <!-- Shift+F -> small YU (Shift+8) -->
              <autogen>--KeyToKey-- KeyCode::F, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+G -> YO (9) -->
              <autogen>--KeyToKey-- KeyCode::G, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
              <!-- Shift+H -> MA (J) -->
              <autogen>--KeyToKey-- KeyCode::H, VK_SHIFT | ModifierFlag::NONE, KeyCode::J</autogen>
              <!-- Shift+J -> O (6) -->
              <autogen>--KeyToKey-- KeyCode::J, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
              <!-- Shift+K -> MO (M) -->
              <autogen>--KeyToKey-- KeyCode::K, VK_SHIFT | ModifierFlag::NONE, KeyCode::M</autogen>
              <!-- Shift+L -> WA (0) -->
              <autogen>--KeyToKey-- KeyCode::L, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
              <!-- Shift+; -> YU (8) -->
              <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
              <!-- Shift+: -> ] (Shift+]) -->
              <autogen>--KeyToKey-- KeyCode::JIS_COLON, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>

              <!-- A -> HA (F) -->
              <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::NONE, KeyCode::F</autogen>
              <!-- S -> KA (T) -->
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::NONE, KeyCode::T</autogen>
              <!-- D -> SI (D) -->
              <!-- don't change D -->
              <!-- F -> TO (S) -->
              <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::NONE, KeyCode::S</autogen>
              <!-- G -> TA (Q) -->
              <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::NONE, KeyCode::Q</autogen>
              <!-- H -> KU (H) -->
              <!-- don't change H -->
              <!-- J -> U (4) -->
              <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
              <!-- K -> I (E) -->
              <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::NONE, KeyCode::E</autogen>
              <!-- L -> voiced-sound (@) -->
              <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::NONE, KeyCode::JIS_ATMARK</autogen>
              <!-- ; -> KI (G) -->
              <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::G</autogen>
              <!-- : -> NA (U) -->
              <autogen>--KeyToKey-- KeyCode::JIS_COLON, ModifierFlag::NONE, KeyCode::U</autogen>

              <!-- ====================================================================== -->
              <!-- Shift+Z -> small U (Shift+4) -->
              <autogen>--KeyToKey-- KeyCode::Z, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+X -> small E (Shift+5) -->
              <autogen>--KeyToKey-- KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+C -> small O (Shift+6) -->
              <autogen>--KeyToKey-- KeyCode::C, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+V -> NE (,) -->
              <autogen>--KeyToKey-- KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::COMMA</autogen>
              <!-- Shift+B -> small YA (Shift+7) -->
              <autogen>--KeyToKey-- KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+N -> MU (]) -->
              <autogen>--KeyToKey-- KeyCode::N, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_BRACKET_RIGHT</autogen>
              <!-- Shift+M -> RO (Underscore) -->
              <autogen>--KeyToKey-- KeyCode::M, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_UNDERSCORE</autogen>
              <!-- Shift+, -> dot (Shift+slash) -->
              <autogen>--KeyToKey-- KeyCode::COMMA, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+. -> minus (JIS_YEN) -->
              <autogen>--KeyToKey-- KeyCode::DOT, VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_YEN</autogen>

              <!-- Z -> SU (R) -->
              <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::NONE, KeyCode::R</autogen>
              <!-- X -> KO (B) -->
              <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::NONE, KeyCode::B</autogen>
              <!-- C -> NI (I) -->
              <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::NONE, KeyCode::I</autogen>
              <!-- V -> SA (X) -->
              <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::NONE, KeyCode::X</autogen>
              <!-- B -> A (3) -->
              <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::NONE, KeyCode::KEY_3</autogen>
              <!-- N -> small TU (Shift+Z) -->
              <autogen>--KeyToKey-- KeyCode::N, ModifierFlag::NONE, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
              <!-- M -> RU (dot) -->
              <autogen>--KeyToKey-- KeyCode::M, ModifierFlag::NONE, KeyCode::DOT</autogen>
              <!-- , -> , (Shift+,) -->
              <autogen>--KeyToKey-- KeyCode::COMMA, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
              <!-- . -> . (Shift+.) -->
              <autogen>--KeyToKey-- KeyCode::DOT, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
              <!-- / -> RE (;) -->
              <autogen>--KeyToKey-- KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SEMICOLON</autogen>

              <!-- ====================================================================== -->
              <!-- An upper step -->
              <autogen>--KeyToKey-- KeyCode::KEY_1,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_4,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_5,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_6,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_7,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_8,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_0,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::MINUS,     VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::JIS_HAT,   VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_HAT,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::JIS_YEN,   VK_SHIFT | ModifierFlag::NONE, KeyCode::JIS_YEN,   ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

              <autogen>--KeyToKey-- KeyCode::KEY_1,     ModifierFlag::NONE, KeyCode::KEY_1,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2,     ModifierFlag::NONE, KeyCode::KEY_2,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3,     ModifierFlag::NONE, KeyCode::KEY_3,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_4,     ModifierFlag::NONE, KeyCode::KEY_4,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_5,     ModifierFlag::NONE, KeyCode::KEY_5,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_6,     ModifierFlag::NONE, KeyCode::KEY_6,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_7,     ModifierFlag::NONE, KeyCode::KEY_7,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_8,     ModifierFlag::NONE, KeyCode::KEY_8,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9,     ModifierFlag::NONE, KeyCode::KEY_9,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_0,     ModifierFlag::NONE, KeyCode::KEY_0,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::MINUS,     ModifierFlag::NONE, KeyCode::MINUS,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::JIS_HAT,   ModifierFlag::NONE, KeyCode::JIS_HAT,   ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::JIS_YEN,   ModifierFlag::NONE, KeyCode::JIS_YEN,   ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Use JIS X 6004 for US Keyboard</name>
              <identifier>remap.jis_layout_jisx6004_us</identifier>
              <inputmodedetail_only>JAPANESE_HIRAGANA, JAPANESE, JAPANESE_KATAKANA, JAPANESE_HALFWIDTH_KANA</inputmodedetail_only>

              <!-- ====================================================================== -->
              <!-- Shift+Q -> small A (Shift+3) -->
              <autogen>--KeyToKey-- KeyCode::Q, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+W -> p-sound (=) -->
              <autogen>--KeyToKey-- KeyCode::W, VK_SHIFT | ModifierFlag::NONE, KeyCode::EQUAL</autogen>
              <!-- Shift+E -> HO (minus) -->
              <autogen>--KeyToKey-- KeyCode::E, VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS</autogen>
              <!-- Shift+R -> FU (2) -->
              <autogen>--KeyToKey-- KeyCode::R, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2</autogen>
              <!-- Shift+T -> ME (/) -->
              <autogen>--KeyToKey-- KeyCode::T, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH</autogen>
              <!-- Shift+Y -> HI (V) -->
              <autogen>--KeyToKey-- KeyCode::Y, VK_SHIFT | ModifierFlag::NONE, KeyCode::V</autogen>
              <!-- Shift+U -> E (5) -->
              <autogen>--KeyToKey-- KeyCode::U, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5</autogen>
              <!-- Shift+I -> MI (N) -->
              <autogen>--KeyToKey-- KeyCode::I, VK_SHIFT | ModifierFlag::NONE, KeyCode::N</autogen>
              <!-- Shift+O -> YA (7) -->
              <autogen>--KeyToKey-- KeyCode::O, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7</autogen>
              <!-- Shift+P -> NU (1) -->
              <autogen>--KeyToKey-- KeyCode::P, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1</autogen>
              <!-- Shift+[ -> [ (Shift+=) -->
              <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_SHIFT | ModifierFlag::NONE, KeyCode::EQUAL, ModifierFlag::SHIFT_L</autogen>

              <!-- Q -> SO (C) -->
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::NONE, KeyCode::C</autogen>
              <!-- W -> KE (') -->
              <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::NONE, KeyCode::QUOTE</autogen>
              <!-- E -> SE (P) -->
              <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::NONE, KeyCode::P</autogen>
              <!-- R -> TE (W) -->
              <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::NONE, KeyCode::W</autogen>
              <!-- T -> small YO (Shift+9) -->
              <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::NONE, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
              <!-- Y -> TU (Z) -->
              <autogen>--KeyToKey-- KeyCode::Y, ModifierFlag::NONE, KeyCode::Z</autogen>
              <!-- U -> NN (Y) -->
              <autogen>--KeyToKey-- KeyCode::U, ModifierFlag::NONE, KeyCode::Y</autogen>
              <!-- I -> NO (K) -->
              <autogen>--KeyToKey-- KeyCode::I, ModifierFlag::NONE, KeyCode::K</autogen>
              <!-- O -> WO (Shift+0) -->
              <autogen>--KeyToKey-- KeyCode::O, ModifierFlag::NONE, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
              <!-- P -> RI (L) -->
              <autogen>--KeyToKey-- KeyCode::P, ModifierFlag::NONE, KeyCode::L</autogen>
              <!-- [ -> TI (A) -->
              <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, ModifierFlag::NONE, KeyCode::A</autogen>

              <!-- ====================================================================== -->
              <!-- Shift+A -> small I (Shift+E) -->
              <autogen>--KeyToKey-- KeyCode::A, VK_SHIFT | ModifierFlag::NONE, KeyCode::E, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+S -> HE (\) -->
              <autogen>--KeyToKey-- KeyCode::S, VK_SHIFT | ModifierFlag::NONE, KeyCode::BACKSLASH</autogen>
              <!-- Shift+D -> RA (O) -->
              <autogen>--KeyToKey-- KeyCode::D, VK_SHIFT | ModifierFlag::NONE, KeyCode::O</autogen>
              <!-- Shift+F -> small YU (Shift+8) -->
              <autogen>--KeyToKey-- KeyCode::F, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+G -> YO (9) -->
              <autogen>--KeyToKey-- KeyCode::G, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9</autogen>
              <!-- Shift+H -> MA (J) -->
              <autogen>--KeyToKey-- KeyCode::H, VK_SHIFT | ModifierFlag::NONE, KeyCode::J</autogen>
              <!-- Shift+J -> O (6) -->
              <autogen>--KeyToKey-- KeyCode::J, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6</autogen>
              <!-- Shift+K -> MO (M) -->
              <autogen>--KeyToKey-- KeyCode::K, VK_SHIFT | ModifierFlag::NONE, KeyCode::M</autogen>
              <!-- Shift+L -> WA (0) -->
              <autogen>--KeyToKey-- KeyCode::L, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0</autogen>
              <!-- Shift+; -> YU (8) -->
              <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
              <!-- Shift+' -> ] (Shift+[) -->
              <autogen>--KeyToKey-- KeyCode::QUOTE, VK_SHIFT | ModifierFlag::NONE, KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>

              <!-- A -> HA (F) -->
              <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::NONE, KeyCode::F</autogen>
              <!-- S -> KA (T) -->
              <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::NONE, KeyCode::T</autogen>
              <!-- D -> SI (D) -->
              <!-- don't change D -->
              <!-- F -> TO (S) -->
              <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::NONE, KeyCode::S</autogen>
              <!-- G -> TA (Q) -->
              <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::NONE, KeyCode::Q</autogen>
              <!-- H -> KU (H) -->
              <!-- don't change H -->
              <!-- J -> U (4) -->
              <autogen>--KeyToKey-- KeyCode::J, ModifierFlag::NONE, KeyCode::KEY_4</autogen>
              <!-- K -> I (E) -->
              <autogen>--KeyToKey-- KeyCode::K, ModifierFlag::NONE, KeyCode::E</autogen>
              <!-- L -> voiced-sound ([) -->
              <autogen>--KeyToKey-- KeyCode::L, ModifierFlag::NONE, KeyCode::BRACKET_LEFT</autogen>
              <!-- ; -> KI (G) -->
              <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::NONE, KeyCode::G</autogen>
              <!-- ' -> NA (U) -->
              <autogen>--KeyToKey-- KeyCode::QUOTE, ModifierFlag::NONE, KeyCode::U</autogen>

              <!-- ====================================================================== -->
              <!-- Shift+Z -> small U (Shift+4) -->
              <autogen>--KeyToKey-- KeyCode::Z, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+X -> small E (Shift+5) -->
              <autogen>--KeyToKey-- KeyCode::X, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+C -> small O (Shift+6) -->
              <autogen>--KeyToKey-- KeyCode::C, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+V -> NE (,) -->
              <autogen>--KeyToKey-- KeyCode::V, VK_SHIFT | ModifierFlag::NONE, KeyCode::COMMA</autogen>
              <!-- Shift+B -> small YA (Shift+7) -->
              <autogen>--KeyToKey-- KeyCode::B, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+N -> MU (]) -->
              <autogen>--KeyToKey-- KeyCode::N, VK_SHIFT | ModifierFlag::NONE, KeyCode::BRACKET_RIGHT</autogen>
              <!-- Shift+M -> RO (Shift+') -->
              <autogen>--KeyToKey-- KeyCode::M, VK_SHIFT | ModifierFlag::NONE, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+, -> dot (Shift+slash) -->
              <autogen>--KeyToKey-- KeyCode::COMMA, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::SHIFT_L</autogen>
              <!-- Shift+. -> minus (JIS_YEN) -->
              <autogen>--KeyToKey-- KeyCode::DOT, VK_SHIFT | ModifierFlag::NONE, KeyCode::VK_JIS_YEN</autogen>

              <!-- Z -> SU (R) -->
              <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::NONE, KeyCode::R</autogen>
              <!-- X -> KO (B) -->
              <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::NONE, KeyCode::B</autogen>
              <!-- C -> NI (I) -->
              <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::NONE, KeyCode::I</autogen>
              <!-- V -> SA (X) -->
              <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::NONE, KeyCode::X</autogen>
              <!-- B -> A (3) -->
              <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::NONE, KeyCode::KEY_3</autogen>
              <!-- N -> small TU (Shift+Z) -->
              <autogen>--KeyToKey-- KeyCode::N, ModifierFlag::NONE, KeyCode::Z, ModifierFlag::SHIFT_L</autogen>
              <!-- M -> RU (dot) -->
              <autogen>--KeyToKey-- KeyCode::M, ModifierFlag::NONE, KeyCode::DOT</autogen>
              <!-- , -> , (Shift+,) -->
              <autogen>--KeyToKey-- KeyCode::COMMA, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>
              <!-- . -> . (Shift+.) -->
              <autogen>--KeyToKey-- KeyCode::DOT, ModifierFlag::NONE, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>
              <!-- / -> RE (;) -->
              <autogen>--KeyToKey-- KeyCode::SLASH, ModifierFlag::NONE, KeyCode::SEMICOLON</autogen>

              <!-- ====================================================================== -->
              <!-- An upper step -->
              <autogen>--KeyToKey-- KeyCode::BACKQUOTE, VK_SHIFT | ModifierFlag::NONE, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_1,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_1,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_2,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_3,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_4,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_4,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_5,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_6,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_6,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_7,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_7,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_8,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_9,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_0,     VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_0,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::MINUS,     VK_SHIFT | ModifierFlag::NONE, KeyCode::MINUS,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::EQUAL,     VK_SHIFT | ModifierFlag::NONE, KeyCode::EQUAL,     ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

              <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_1,     ModifierFlag::NONE, KeyCode::KEY_1,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_2,     ModifierFlag::NONE, KeyCode::KEY_2,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_3,     ModifierFlag::NONE, KeyCode::KEY_3,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_4,     ModifierFlag::NONE, KeyCode::KEY_4,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_5,     ModifierFlag::NONE, KeyCode::KEY_5,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_6,     ModifierFlag::NONE, KeyCode::KEY_6,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_7,     ModifierFlag::NONE, KeyCode::KEY_7,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_8,     ModifierFlag::NONE, KeyCode::KEY_8,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9,     ModifierFlag::NONE, KeyCode::KEY_9,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_0,     ModifierFlag::NONE, KeyCode::KEY_0,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::MINUS,     ModifierFlag::NONE, KeyCode::MINUS,     ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::EQUAL,     ModifierFlag::NONE, KeyCode::EQUAL,     ModifierFlag::OPTION_L</autogen>

              <!-- ====================================================================== -->
              <!-- Extra -->

              <!-- \ -> JIS_BACKSLASH -->
              <autogen>--KeyToKey-- KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::VK_JIS_BACKSLASH, ModifierFlag::OPTION_L</autogen>

              <!-- \ -> vertical_line (JIS_VERTICAL_LINE) -->
              <autogen>--KeyToKey-- KeyCode::BACKSLASH, VK_SHIFT | ModifierFlag::NONE, KeyCode::VK_JIS_YEN, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>

              <!-- ] -> NONE -->
              <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::VK_NONE</autogen>

              <!-- Shift+] -> NONE -->
              <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT,VK_SHIFT | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>

              <!-- Shift+/ -> question (JIS_QUESION) -->
              <autogen>--KeyToKey-- KeyCode::SLASH, VK_SHIFT | ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
            </item>
            <item>
              <name>Oyayubi Shift Input</name>
              <appendix>親指シフト (NICOLA)</appendix>
              <list>
                <item>
                  <name>＜かなモード＞</name>
                  <list>
                    <item>
                      <name>＜かなモード＞ 左シフト＝スペース, 右シフト＝かな</name>
                      <identifier>remap.oyayubi_shift_kana_space_kana</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::SPACE|g' -e 's|RIGHT_THUMB|KeyCode::JIS_KANA|g' include/jis_oyayubishiftinput_kana_base.xml include/jis_oyayubishiftinput_kana_kotoeri.xml" -->
                    </item>
                    <item>
                      <name>＜かなモード＞ 左シフト＝英数, 右シフト＝スペース</name>
                      <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
                      <identifier>remap.oyayubi_shift_kana_eisuu_space</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::JIS_EISUU|g' -e 's|RIGHT_THUMB|KeyCode::SPACE|g' include/jis_oyayubishiftinput_kana_base.xml include/jis_oyayubishiftinput_kana_kotoeri.xml" -->
                    </item>
                    <item>
                      <name>＜かなモード＞ 左シフト＝英数, 右シフト＝かな</name>
                      <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
                      <identifier>remap.oyayubi_shift_kana_eisuu_kana</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::JIS_EISUU|g' -e 's|RIGHT_THUMB|KeyCode::JIS_KANA|g' include/jis_oyayubishiftinput_kana_base.xml include/jis_oyayubishiftinput_kana_kotoeri.xml" -->
                    </item>
                  </list>
                </item>
                <item>
                  <name>＜かなモード for ATOK＞</name>
                  <list>
                    <item>
                      <name>＜かなモード for ATOK＞ 左シフト＝スペース, 右シフト＝かな</name>
                      <identifier>remap.oyayubi_shift_kana_atok_space_kana</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::SPACE|g' -e 's|RIGHT_THUMB|KeyCode::JIS_KANA|g' include/jis_oyayubishiftinput_kana_base.xml include/jis_oyayubishiftinput_kana_atok.xml" -->
                    </item>
                    <item>
                      <name>＜かなモード for ATOK＞ 左シフト＝英数, 右シフト＝スペース</name>
                      <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
                      <identifier>remap.oyayubi_shift_kana_atok_eisuu_space</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::JIS_EISUU|g' -e 's|RIGHT_THUMB|KeyCode::SPACE|g' include/jis_oyayubishiftinput_kana_base.xml include/jis_oyayubishiftinput_kana_atok.xml" -->
                    </item>
                    <item>
                      <name>＜かなモード for ATOK＞ 左シフト＝英数, 右シフト＝かな</name>
                      <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
                      <identifier>remap.oyayubi_shift_kana_atok_eisuu_kana</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::JIS_EISUU|g' -e 's|RIGHT_THUMB|KeyCode::JIS_KANA|g' include/jis_oyayubishiftinput_kana_base.xml include/jis_oyayubishiftinput_kana_atok.xml" -->
                    </item>
                  </list>
                </item>
                <item>
                  <name>＜ローマ字モード＞</name>
                  <list>
                    <item>
                      <name>＜ローマ字モード＞ 左シフト＝スペース, 右シフト＝かな</name>
                      <identifier>remap.oyayubi_shift_roman_space_kana</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::SPACE|g' -e 's|RIGHT_THUMB|KeyCode::JIS_KANA|g' include/jis_oyayubishiftinput.xml" -->
                    </item>
                    <item>
                      <name>＜ローマ字モード＞ 左シフト＝英数, 右シフト＝スペース</name>
                      <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
                      <identifier>remap.oyayubi_shift_roman_eisuu_space</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::JIS_EISUU|g' -e 's|RIGHT_THUMB|KeyCode::SPACE|g' include/jis_oyayubishiftinput.xml" -->
                    </item>
                    <item>
                      <name>＜ローマ字モード＞ 左シフト＝英数, 右シフト＝かな</name>
                      <appendix>※下の「EISUU x2 to EISUU」を同時に使うことをおすすめします</appendix>
                      <identifier>remap.oyayubi_shift_roman_eisuu_kana</identifier>
                      <!-- #include "| sed -e 's|LEFT_THUMB|KeyCode::JIS_EISUU|g' -e 's|RIGHT_THUMB|KeyCode::JIS_KANA|g' include/jis_oyayubishiftinput.xml" -->
                    </item>
                  </list>
                </item>
                <item>
                  <name>EISUU x2 to EISUU (単発での英数キーは無視する)</name>
                  <identifier>remap.jis_eisuu2extra5_x2eisuu</identifier>
                  <autogen>--DoublePressModifier-- KeyCode::JIS_EISUU, KeyCode::VK_NONE, KeyCode::JIS_EISUU</autogen>
                </item>
              </list>
            </item>
            <item>
              <name>Geta Input</name>
              <appendix>下駄配列(qwerty,roman,ATOK)</appendix>
              <identifier>remap.geta_input_roman_qwerty_atok</identifier>
              <!-- #include "include/jis_geta.xml" -->
            </item>
            <item>
              <name>Use Windows Kana-Input Layout on ASCII Keyboard</name>
              <inputmode_not>ROMAN</inputmode_not>
              <autogen>--KeyToKey-- KeyCode::MINUS, VK_SHIFT, KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, VK_SHIFT, KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::EQUAL, ModifierFlag::SHIFT_L</autogen>
              <autogen>--KeyToKey-- KeyCode::EQUAL, VK_SHIFT, KeyCode::MINUS, ModifierFlag::SHIFT_L</autogen>

              <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, ModifierFlag::NONE, KeyCode::EQUAL</autogen>
              <autogen>--KeyToKey-- KeyCode::EQUAL, ModifierFlag::NONE, KeyCode::BACKSLASH</autogen>
              <autogen>--KeyToKey-- KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::BRACKET_RIGHT</autogen>
              <identifier>remap.jis_layout_windowskanainput</identifier>
            </item>
          </list>
        </item>
        <item>
          <name>Simultaneous Key Presses</name>
          <list>
            <item>
              <name>Simultaneous Key Presses [EISUU+KANA] to toggle Vi Mode</name>
              <identifier>remap.vimode_toggle_eisuukana</identifier>
              <autogen>--SimultaneousKeyPresses-- KeyCode::JIS_EISUU, KeyCode::JIS_KANA, KeyCode::VK_CONFIG_TOGGLE_notsave_complete_vimode</autogen>
            </item>
            <item>
              <name>Simultaneous Key Presses [EISUU+KANA] to Return</name>
              <appendix>(We can change the key once again)</appendix>
              <identifier>remap.simultaneouskeypresses_eisuukana2return</identifier>
              <autogen>--SimultaneousKeyPresses-- KeyCode::JIS_EISUU, KeyCode::JIS_KANA, KeyCode::RETURN, SimultaneousKeyPresses::Option::RAW</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Hack for the bug of Mac OS X</name>
          <list>
            <item>
              <name>Disable Command/Control/Option/Shift+EISUU, Command/Control/Option/Shift+KANA</name>
              <appendix>(to prevent the system hangup at Snow Leopard)</appendix>
              <identifier>option.jis_drop_eisuukana_with_modifiers</identifier>
              <autogen>--DropKeyAfterRemap-- KeyCode::JIS_EISUU, VK_COMMAND</autogen>
              <autogen>--DropKeyAfterRemap-- KeyCode::JIS_KANA,  VK_COMMAND</autogen>
              <autogen>--DropKeyAfterRemap-- KeyCode::JIS_EISUU, VK_CONTROL</autogen>
              <autogen>--DropKeyAfterRemap-- KeyCode::JIS_KANA,  VK_CONTROL</autogen>
              <autogen>--DropKeyAfterRemap-- KeyCode::JIS_EISUU, VK_OPTION</autogen>
              <autogen>--DropKeyAfterRemap-- KeyCode::JIS_KANA,  VK_OPTION</autogen>
              <autogen>--DropKeyAfterRemap-- KeyCode::JIS_EISUU, VK_SHIFT</autogen>
              <autogen>--DropKeyAfterRemap-- KeyCode::JIS_KANA,  VK_SHIFT</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>
    <item>
      <name>For Korean</name>
      <list>
        <item>
          <name>Change HanEng And Hanja Key</name>
          <list>
            <item>
              <name>Toggle HanEng Key(to Command_L(R)+Space)</name>
              <identifier>remap.ksc_haneng2commandLSpace</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, KeyCode::COMMAND_L, KeyCode::SPACE, ModifierFlag::COMMAND_R</autogen>
            </item>
            <item>
              <name>Toggle Hanja Key(to Option_L(R)+Return)</name>
              <identifier>remap.ksc_hanja2optionLreturn</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, KeyCode::OPTION_L, KeyCode::RETURN, ModifierFlag::OPTION_R</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>
    <item>
      <name>For Russian</name>
      <list>
        <item>
          <name>Change Backquote(`) Key</name>
          <list>
            <item>
              <name>Backquote(`) to Paragraph(§)</name>
              <identifier>remap.russian_backquote2paragraph</identifier>
              <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::RUSSIAN_PARAGRAPH</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Command_L Key</name>
          <list>
            <item>
              <name>Command_L to Command_L</name>
              <appendix>(+ When you type Command_L only, change inputmode to english)</appendix>
              <identifier>remap.russian_commandL2commandL_english</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Command_R Key</name>
          <list>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, change inputmode to russian)</appendix>
              <identifier>remap.russian_commandR2commandR_russian</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Paragraph(§) Key</name>
          <list>
            <item>
              <name>Paragraph(§) to Backquote(`)</name>
              <identifier>remap.russian_paragraph2backquote</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::BACKQUOTE</autogen>
            </item>
            <item>
              <name>Paragraph(§) to Escape</name>
              <identifier>remap.russian_paragraph2escape</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>Paragraph(§) to Forward Delete</name>
              <identifier>remap.russian_paragraph2forwarddelete</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::FORWARD_DELETE</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Shift_L Key</name>
          <list>
            <item>
              <name>Shift_L to Shift_L</name>
              <appendix>(+ When you type Shift_L only, change inputmode to english)</appendix>
              <identifier>remap.russian_shiftL2shiftL_english</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
            </item>
            <item>
              <name>Shift_L to Shift_L</name>
              <appendix>(+ When you type Shift_L only, change inputmode to english)</appendix>
              <appendix></appendix>
              <appendix>(+ When you type Command+Shift_L only,</appendix>
              <appendix>change inputmode to "English - Ilya Birman Typography".)</appendix>
              <identifier>remap.russian_shiftL2shiftL_english_typography</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH_TYPOGRAPHIC</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L,             KeyCode::SHIFT_L,                          KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Shift_R Key</name>
          <list>
            <item>
              <name>Shift_R to Shift_R</name>
              <appendix>(+ When you type Shift_R only, change inputmode to russian)</appendix>
              <identifier>remap.russian_shiftR2shiftR_russian</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN</autogen>
            </item>
            <item>
              <name>Shift_R to Shift_R</name>
              <appendix>(+ When you type Shift_R only, change inputmode to russian)</appendix>
              <appendix></appendix>
              <appendix>(+ When you type Command+Shift_R only,</appendix>
              <appendix>change inputmode to "Russian - Ilya Birman Typography".)</appendix>
              <identifier>remap.russian_shiftR2shiftR_russian_typography</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, VK_COMMAND, KeyCode::SHIFT_R, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN_TYPOGRAPHIC</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R,             KeyCode::SHIFT_R,                          KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Tilde(~) Key</name>
          <list>
            <item>
              <name>Tilde(~) to Shift_L</name>
              <identifier>remap.russian_tilda2shiftL</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_TILDE, KeyCode::SHIFT_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>
    <item>
      <name>For Spanish</name>
      <list>
        <item>
          <name>Change Option_R+4 to Ñ (Option_R+;)</name>
          <identifier>remap.pc_applicationoption4n</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::OPTION_R, KeyCode::SEMICOLON, ModifierFlag::OPTION_R</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Swedish</name>
      <list>
        <item>
          <name>Space to Option_L (when inputmode == swedish)</name>
          <identifier>remap.swedish_space2optionL_swedish</identifier>
          <inputmode_only>SWEDISH</inputmode_only>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_L to Command_L</name>
          <appendix>(+ When you type Command_L only, change inputmode to english)</appendix>
          <identifier>remap.swedish_commandL2commandL_english</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, change inputmode to swedish)</appendix>
          <identifier>remap.swedish_commandR2commandR_swedish</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CHANGE_INPUTMODE_SWEDISH</autogen>
        </item>
        <item>
          <name>Swap Section(§) and Less-Than(&lt;)</name>
          <appendix>(only in virtual machine)</appendix>
          <identifier>remap.swedish_swap_section_lessthan_vm</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>--KeyToKey-- KeyCode::SWEDISH_SECTION, KeyCode::SWEDISH_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::SWEDISH_LESS_THAN, KeyCode::SWEDISH_SECTION</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Swiss</name>
      <list>
        <item>
          <name>Swap Y and Z</name>
          <identifier>remap.swiss_swap_y_z</identifier>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::Z</autogen>
          <autogen>--KeyToKey-- KeyCode::Z, KeyCode::Y</autogen>
        </item>
        <item>
          <name>Swap Section(§) and Less-Than(&lt;)</name>
          <appendix>(only in virtual machine)</appendix>
          <identifier>remap.swiss_swap_section_lessthan_vm</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>--KeyToKey-- KeyCode::SWISS_SECTION, KeyCode::SWISS_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::SWISS_LESS_THAN, KeyCode::SWISS_SECTION</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For UK Keyboard users</name>
      <list>
        <item>
          <name>Improve UK Keyboard Layout</name>
          <appendix>( '\' to additional Enter, '§' to '`' and '`' to '\' )</appendix>
          <identifier>remap.uk_saneuklayout</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Improve UK Keyboard Layout (Option 2)</name>
          <appendix>( '§' to '`' and '`' to '\' )</appendix>
          <identifier>remap.uk_saneuklayout2</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Swap @ and double-quote(")</name>
          <identifier>remap.uk_swap_at_doublequote</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_SHIFT, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::QUOTE, VK_SHIFT, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Section(§) to Option_L+3 (#), Shift+Section(§) to Tilde(~)</name>
          <identifier>remap.uk_section2hash</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::KEY_3, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Backquote(`) to Backslash(\)</name>
          <identifier>remap.uk_backquote2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Backquote(`) to Section(§)</name>
          <identifier>remap.uk_backquote2section</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::UK_SECTION</autogen>
        </item>
        <item>
          <name>Backquote(`) to Shift_L</name>
          <identifier>remap.uk_backquote2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Backslash(\) to Option_L+3 (#), Shift+Backslash(\) to Tilde(~)</name>
          <identifier>remap.uk_backslash2hash</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::KEY_3, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Forward Delete to Section(§)</name>
          <identifier>remap.uk_forwarddelete2section</identifier>
          <autogen>--KeyToKey-- FROMKEYCODE_FORWARD_DELETE, KeyCode::UK_SECTION</autogen>
        </item>
        <item>
          <name>Section(§) to Backquote(`)</name>
          <identifier>remap.uk_section2backquote</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Section(§) to Backquote(`)</name>
          <appendix>(except virtual machine)</appendix>
          <identifier>remap.uk_section2backquote_ex_vm</identifier>
          <not>VIRTUALMACHINE</not>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Section(§) to Backslash(\)</name>
          <identifier>remap.uk_section2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Section(§) to Forward Delete</name>
          <identifier>remap.uk_section2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Section(§) to LeftClick</name>
          <identifier>remap.strangekey_to_leftclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::UK_SECTION, PointingButton::LEFT</autogen>
        </item>
      </list>
    </item>

    <!-- #include "include/samples.xml" -->
    <!-- #include "include/local.bottom.xml" -->
  </list>
</root>
